{"version":3,"sources":["meteor://ðŸ’»app/packages/raix:push/lib/common/main.js","meteor://ðŸ’»app/packages/raix:push/lib/common/notifications.js","meteor://ðŸ’»app/packages/raix:push/lib/client/browser.js","meteor://ðŸ’»app/packages/raix:push/lib/client/client.js"],"names":[],"mappings":"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","file":"/packages/raix_push.js","sourcesContent":["// The push object is an event emitter\nPush = new EventState();\n\n// This is the match pattern for tokens\n_matchToken = Match.OneOf({ apn: String }, { gcm: String });\n\n\n// Client-side security warnings, used to check options\ncheckClientSecurity = function(options) {\n\n  // Warn if certificates or keys are added here on client. We dont allow the\n  // user to do this for security reasons.\n  if (options.apn && options.apn.certData) {\n    throw new Error('Push.init: Dont add your APN certificate in client code!');\n  }\n\n  if (options.apn && options.apn.keyData) {\n    throw new Error('Push.init: Dont add your APN key in client code!');\n  }\n\n  if (options.apn && options.apn.passphrase) {\n    throw new Error('Push.init: Dont add your APN passphrase in client code!');\n  }\n\n  if (options.gcm && options.gcm.apiKey) {\n    throw new Error('Push.init: Dont add your GCM api key in client code!');\n  }\n};\n\n// DEPRECATED\nPush.init = function() {\n  console.warn('Push.init have been deprecated in favor of \"config.push.json\" please migrate');\n};\n","// Notifications collection\nPush.notifications = new Mongo.Collection('_raix_push_notifications');\n\n// This is a general function to validate that the data added to notifications\n// is in the correct format. If not this function will throw errors\nvar _validateDocument = function(notification) {\n\n  // Check the general notification\n  check(notification, {\n    from: String,\n    title: String,\n    text: String,\n    badge: Match.Optional(Number),\n    sound: Match.Optional(String),\n    notId: Match.Optional(Match.Integer),\n    apn: Match.Optional({\n      from: Match.Optional(String),\n      title: Match.Optional(String),\n      text: Match.Optional(String),\n      badge: Match.Optional(Number),\n      sound: Match.Optional(String),\n      notId: Match.Optional(Match.Integer)\n    }),\n    gcm: Match.Optional({\n      from: Match.Optional(String),\n      title: Match.Optional(String),\n      text: Match.Optional(String),\n      badge: Match.Optional(Number),\n      sound: Match.Optional(String),\n      notId: Match.Optional(Match.Integer)\n    }),\n    query: Match.Optional(String),\n    token: Match.Optional(_matchToken),\n    tokens: Match.Optional([_matchToken]),\n    payload: Match.Optional(Object),\n    delayUntil: Match.Optional(Date),\n    createdAt: Date,\n    createdBy: Match.OneOf(String, null)\n  });\n\n  // Make sure a token selector or query have been set\n  if (!notification.token && !notification.tokens && !notification.query) {\n    throw new Error('No token selector or query found');\n  }\n\n  // If tokens array is set it should not be empty\n  if (notification.tokens && !notification.tokens.length) {\n    throw new Error('No tokens in array');\n  }\n};\n\nPush.send = function(options) {\n  // If on the client we set the user id - on the server we need an option\n  // set or we default to \"<SERVER>\" as the creator of the notification\n  // If current user not set see if we can set it to the logged in user\n  // this will only run on the client if Meteor.userId is available\n  var currentUser = Meteor.isClient && Meteor.userId && Meteor.userId() ||\n          Meteor.isServer && (options.createdBy || '<SERVER>') || null;\n\n  // Rig the notification object\n   var notification = _.extend({\n    createdAt: new Date(),\n    createdBy: currentUser\n  }, _.pick(options, 'from', 'title', 'text'));\n\n   // Add extra\n   _.extend(notification, _.pick(options, 'payload', 'badge', 'sound', 'notId', 'delayUntil'));\n\n  if (Match.test(options.apn, Object)) {\n    notification.apn = _.pick(options.apn, 'from', 'title', 'text', 'badge', 'sound', 'notId');\n  }\n\n  if (Match.test(options.gcm, Object)) {\n    notification.gcm = _.pick(options.gcm, 'from', 'title', 'text', 'badge', 'sound', 'notId');\n  }\n\n  // Set one token selector, this can be token, array of tokens or query\n  if (options.query) {\n    // Set query to the json string version fixing #43 and #39\n    notification.query = JSON.stringify(options.query);\n  } else if (options.token) {\n    // Set token\n    notification.token = options.token;\n  } else if (options.tokens) {\n    // Set tokens\n    notification.tokens = options.tokens;\n  }\n\n  // Validate the notification\n  _validateDocument(notification);\n\n  // Try to add the notification to send, we return an id to keep track\n  return Push.notifications.insert(notification);\n};\n\nPush.allow = function(rules) {\n  if (rules.send) {\n    Push.notifications.allow({\n      'insert': function(userId, notification) {\n        // Validate the notification\n        _validateDocument(notification);\n        // Set the user defined \"send\" rules\n        return rules.send.apply(this, [userId, notification]);\n      }\n    });\n  }\n};\n\nPush.deny = function(rules) {\n  if (rules.send) {\n    Push.notifications.deny({\n      'insert': function(userId, notification) {\n        // Validate the notification\n        _validateDocument(notification);\n        // Set the user defined \"send\" rules\n        return rules.send.apply(this, [userId, notification]);\n      }\n    });\n  }\n};\n","/* global chrome: false */\nvar onNotification = function(notification) {\n  // alert('onNotification' + JSON.stringify(notification));\n\n  // Emit alert event - this requires the app to be in forground\n  if (notification.message && notification.foreground) {\n    Push.emit('alert', notification);\n  }\n\n  // Emit sound event\n  if (notification.sound) {\n    Push.emit('sound', notification);\n  }\n\n  // Emit badge event\n  if (notification.badge) {\n    Push.emit('badge', notification);\n  }\n\n  // If within thres\n  if (notification.open) {\n    Push.emit('startup', notification);\n  } else {\n    Push.emit('message', notification);\n  }\n};\n\nPush.setBadge = function(/* count */) {\n  // XXX: Not implemented\n};\n\nvar isConfigured = false;\n\nPush.Configure = function(options) {\n  var self = this;\n\n  options = options ||Â {};\n\n  // check(options, {\n  //   gcm: Match.Optional(Match.ObjectIncluding({\n  //     projectNumber: String\n  //   })),\n  //   apn: Match.Optional(Match.ObjectIncluding({\n  //     webServiceUrl: String,\n  //     websitePushId: String\n  //   })),\n  // });\n\n  // Block multiple calls\n  if (isConfigured) {\n    throw new Error('Push.Configure should not be called more than once!');\n  }\n\n  isConfigured = true;\n\n  // Add debug info\n  if (Push.debug) {\n    console.log('Push.Configure', options);\n  }\n\n  // Client-side security warnings\n  checkClientSecurity(options);\n\n  // Start token updates\n  initPushUpdates(options.appName);\n\n  // Add support for the raix:iframe push solution Deprecate this at some\n  // point mid aug 2015\n  if (options.iframe) {\n\n    var coldstart = true;\n    var startupTime = new Date();\n    var startupThreshold = 1000; // ms\n\n    var _atStartup = function() {\n      // If startup time is less than startupThreshold ago then lets say this is\n      // at startup.\n      return (new Date() - startupTime < startupThreshold);\n    };\n\n    var _parsePayload = function(value) {\n      // Android actually parses payload into an object - this is not the case with\n      // iOS (here is it just a string)\n      if (value !== ''+value) {\n        value = JSON.stringify(value);\n      }\n\n      // Run the string through ejson\n      try {\n        return EJSON.parse(value);\n      } catch(err) {\n        return { error: err };\n      }\n    };\n\n    // Rig iframe event listeners\n    options.iframe.addEventListener('deviceready', function() {\n\n      // Maintain properties\n\n      // At initial startup set startup time\n      startupTime = new Date();\n\n      // Update flag if app coldstart\n      options.iframe.addEventListener(\"pause\", function() {\n        coldstart = false;\n      }, false);\n\n      options.iframe.addEventListener('resume', function() {\n        // Reset startup time at resume\n        startupTime = new Date();\n      });\n\n      // EO Maintain properties\n\n      options.iframe.addEventListener('pushLaunch', function(e) {\n\n        if (e.event === 'message') {\n          // Android event\n\n          var sound = e.soundname || e.payload.sound;\n\n          // Only prefix sound if actual text found\n          if (sound && sound.length) {\n            sound = '/android_asset/www/' + sound;\n          }\n\n          // XXX: Investigate if we need more defaults\n          var unifiedMessage = {\n            message: e.payload.message || e.msg || '',\n            sound: sound,\n            badge: e.payload.msgcnt,\n            // Coldstart on android is a bit inconsistent - its only set when the\n            // notification opens the app\n            coldstart: (e.coldstart === Boolean(e.coldstart)) ? e.coldstart : coldstart,\n            background: !e.foreground,\n            foreground: !!e.foreground,\n            // open: _atStartup(),  // This is the iOS implementation\n            open: (e.coldstart === Boolean(e.coldstart)), // If set true / false its an open event\n            type: 'gcm.cordova'\n          };\n\n          // If payload.ejson this is an object - we hand it over to parsePayload,\n          // parsePayload will do the convertion for us\n          if (e.payload.ejson) {\n            unifiedMessage.payload = _parsePayload(e.payload.ejson);\n          }\n\n          // Trigger notification\n          onNotification(unifiedMessage);\n\n        } else {\n          // iOS event\n          var sound = e.sound; // jshint ignore: line\n\n          // Only prefix sound if actual text found\n          if (sound && sound.length) {\n            sound = '' + sound;\n          }\n\n          // XXX: Investigate if we need more defaults\n          var unifiedMessage = { // jshint ignore: line\n            message: e.alert,\n            sound: sound,\n            badge: e.badge,\n            coldstart: coldstart,\n            background: !e.foreground,\n            foreground: !!e.foreground,\n            open: _atStartup(),\n            type: 'apn.cordova'\n          };\n\n          // E.ejson should be a string - we send it directly to payload\n          if (e.ejson) {\n            unifiedMessage.payload = _parsePayload(e.ejson);\n          }\n\n          // Trigger notification\n          onNotification(unifiedMessage);\n\n        }\n\n      });\n\n\n      options.iframe.addEventListener('pushSuccess', function(evt) {\n        // Reformat into new event\n        self.emit('register', evt.success);\n      });\n\n      options.iframe.addEventListener('pushToken', function(evt) {\n        if (evt.androidToken) {\n          // Format the android token\n          Push.emitState('token', { gcm: evt.androidToken });\n        } else if (evt.iosToken) {\n          // Format the ios token\n          Push.emitState('token', { apn: evt.iosToken });\n        }\n      });\n\n      options.iframe.addEventListener('pushError', function(evt) {\n        Push.emit('error', { type: 'cordova.browser', error: evt.error ||Â evt });\n      });\n\n    });\n  } // EO options iframe\n\n  if (typeof chrome !== 'undefined' && chrome.gcm) {\n    // chrome.gcm api is supported!\n    // https://developer.chrome.com/extensions/gcm\n\n    // Set max message size\n    // chrome.gcm.MAX_MESSAGE_SIZE = 4096;\n\n    if (options.gcm.projectNumber) {\n      chrome.gcm.register(options.gcm.projectNumber, function(token) {\n        if (token) {\n          self.emitState('token', { gcm: token });\n        } else {\n          // Error\n          self.emit('error', { type: 'gcm.browser', error: 'Access denied' });\n        }\n      });\n    }\n\n  } else if ('safari' in window && 'pushNotification' in window.safari) {\n    // https://developer.apple.com/library/mac/documentation/NetworkingInternet/Conceptual/NotificationProgrammingGuideForWebsites/PushNotifications/PushNotifications.html#//apple_ref/doc/uid/TP40013225-CH3-SW1\n\n    if (options.apn) {\n\n      Meteor.startup(function() {\n        // Ensure that the user can receive Safari Push Notifications.\n        var permissionData = window.safari.pushNotification.permission(options.apn.websitePushId);\n        checkRemotePermission(permissionData);\n      });\n\n      var checkRemotePermission = function (permissionData) {\n          if (permissionData.permission === 'default') {\n              // This is a new web service URL and its validity is unknown.\n              window.safari.pushNotification.requestPermission(\n                  options.apn.webServiceUrl, // The web service URL.\n                  options.apn.websitePushId, // The Website Push ID.\n                  {}, // Data that you choose to send to your server to help you identify the user.\n                  checkRemotePermission         // The callback function.\n              );\n          }\n          else if (permissionData.permission === 'denied') {\n              // alert('denied');\n              // The user said no.\n              self.emit('error', { type: 'apn.browser', error: 'Access denied' });\n          }\n          else if (permissionData.permission === 'granted') {\n              // alert('granted');\n              // The web service URL is a valid push provider, and the user said yes.\n              // permissionData.deviceToken is now available to use.\n              self.emitState('token', { apn: permissionData.deviceToken });\n          }\n      };\n\n    }\n\n\n  } else if (navigator && navigator.push && navigator.push.register && navigator.mozSetMessageHandler) {\n    // check navigator.mozPush should be enough?\n    // https://wiki.mozilla.org/WebAPI/SimplePush\n\n    var channel = 'push';\n\n    // Store the pushEndpoint\n    var pushEndpoint;\n\n    Meteor.startup(function() {\n      setupAppRegistrations();\n    });\n\n    function setupAppRegistrations() { // jshint ignore: line\n      // Issue a register() call\n      // to register to listen for a notification,\n      // you simply call push.register\n      // Here, we'll register a channel for \"email\" updates.\n      // Channels can be for anything the app would like to get notifications for.\n      var requestAccess = navigator.push.register();\n\n      requestAccess.onsuccess = function(e) {\n        // Store the endpoint\n        pushEndpoint = e.target.result;\n\n        self.emitState('token', {\n          SimplePush: {\n            channel: channel,\n            endPoint: pushEndpoint\n          }\n        });\n      };\n\n    }\n\n    // Once we've registered, the AppServer can send version pings to the EndPoint.\n    // This will trigger a 'push' message to be sent to this handler.\n    navigator.mozSetMessageHandler('push', function(message) {\n        if (message.pushEndpoint === pushEndpoint) {\n          // Did we launch or were we already running?\n          self.emit('startup', message);\n        }\n      });\n\n    // // to unregister, you simply call..\n    // AppFramework.addEventListener('user-logout', function() {\n    //   navigator.push.unregister(pushEndpoint);\n    // });\n\n    // error recovery mechanism\n    // will be called very rarely, but application\n    // should register again when it is called\n    navigator.mozSetMessageHandler('register', function(/* e */) {\n      setupAppRegistrations();\n    });\n\n\n\n  }\n\n};\n\n/*\nTODO:\n\nadd event listener api\n\n*/\n","// Namespaced storage key\nvar localStorageKey = '_raix:push_token';\n\n// If we are using the accounts system then add the userId to appCollection\n// and monitor for logout\nvar addUserId = !!Package['accounts-base'];\n\n/*\n  1. Check if id is already set in localstorage\n  2. If not then create an app id\n  3. Refresh the apn/gcm push token for this app\n*/\n\nvar loadLocalstorage = function() {\n  var data = {};\n\n  try {\n    // Get the stored object from local storage\n    data = JSON.parse(localStorage.getItem(localStorageKey));\n\n  } catch(err) {\n    // XXX: Error using the local storage\n  }\n\n  return {\n    // Use a new id if not set\n    id: data && data.id || Random.id(),\n    // Set empty metadata object if nothing loaded\n    metadata: data && data.metadata || {},\n    // Set default token\n    token: null\n  };\n};\n\nvar saveLocalstorage = function(data) {\n  try {\n    // Try setting the id\n    localStorage.setItem(localStorageKey, JSON.stringify(data));\n  } catch(err) {\n    // XXX: storage error\n  }\n};\n\n// Set stored object\nvar stored = loadLocalstorage();\n// Reactive id\nvar idDep = new Tracker.Dependency();\nvar stateDep = new Tracker.Dependency();\n\n// Its either set by localStorage or random\nidDep.changed();\n\nvar _setEnabled = function(state) {\n  if (stored.enabled !== state) {\n    stored.enabled = state;\n    // Save the stored object\n    saveLocalstorage(stored);\n    stateDep.changed();\n  }\n};\n\nPush.id = function() {\n  idDep.depend();\n  return stored.id;\n};\n\nPush.enabled = function(state) {\n  if (stored) {\n    if (typeof state === 'undefined') {\n      // Act as a getter\n      stateDep.depend();\n      return stored.enabled !== false;\n    } else {\n      check(state, Boolean);\n      if (state !== stored.enabled && stored.id) {\n        // Latency compensation\n        _setEnabled(state);\n        // Update server\n        Meteor.call('raix:push-enable', {\n          id: stored.id,\n          enabled: state\n        }, function(err, found) {\n          if (err || !found) {\n            // On error or missing app item, revert\n            _setEnabled(!state);\n          }\n        });\n      }\n    }\n  }\n};\n\nPush.setUser = function() {\n  // Let the server update the userId on the id\n  Meteor.call('raix:push-setuser', stored.id);\n};\n\nPush.setMetadata = function(data) {\n  stored.metadata = data;\n  saveLocalstorage(stored);\n  // Set the metadata on the server collection if we have a token, otherwise\n  // we should only set the metadata in localstorage\n  if (stored.token) {\n    // Update the metadata\n    Meteor.call('raix:push-metadata', {\n      id: stored.id,\n      metadata: stored.metadata\n    });\n  }\n};\n\n// Report token to the server\nvar reportTokenToServer = function(token, appName) {\n  // Store the token\n  stored.token = token;\n\n  // Set the data object\n  var data = {\n    id: stored.id,\n    token: token,\n    appName: appName,\n    userId: (addUserId) ? Meteor.userId() : null,\n    metadata: stored.metadata\n  };\n\n  // token.gcm or token.apn\n  Meteor.call('raix:push-update', data, function(err, result) {\n    if (!err && result) {\n      // The result is the id - The server may update this if it finds a\n      // match for an old install\n      if (stored.id !== result._id) {\n        // The server did match the push token for this device\n        stored.id = result._id;\n        // Save the stored object\n        saveLocalstorage(stored);\n        // The id has changed.\n        idDep.changed();\n      }\n\n      // Make sure enabled is also updated to keep in sync\n      if (typeof result.enabled !== 'undefined') {\n        _setEnabled(result.enabled);\n      }\n    }\n  });\n};\n\ninitPushUpdates = function(appName) {\n  Meteor.startup(function() {\n    // Start listening for tokens\n    Push.on('token', function(token) {\n      if (Push.debug) {\n        console.log('Got token:', token);\n      }\n      // The app should be ready, lets call in\n      reportTokenToServer(token, appName ||Â 'main');\n    });\n\n    // Start listening for user updates if accounts package is added\n    if (addUserId) {\n      Tracker.autorun(function() {\n        // Depend on the userId\n        Meteor.userId();\n        // Dont run this the first time, its already done in the reportTokenToServer\n        if (!this.firstRun) {\n          // Update the userId\n          Push.setUser();\n        }\n      });\n    }\n  });\n};\n"]}