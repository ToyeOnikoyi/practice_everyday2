[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Template = Package.templating.Template;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar AutoForm = Package['aldeed:autoform'].AutoForm;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\nvar SimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nvar MongoObject = Package['aldeed:simple-schema'].MongoObject;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// packages/muqube_autoform-nouislider/template.autoform-nouislider.js                   //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\n                                                                                         // 1\nTemplate.__checkName(\"afNoUiSlider\");                                                    // 2\nTemplate[\"afNoUiSlider\"] = new Template(\"Template.afNoUiSlider\", (function() {           // 3\n  var view = this;                                                                       // 4\n  return HTML.DIV(HTML.Attrs(function() {                                                // 5\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                  // 6\n  }), \"\\n    \", Blaze.If(function() {                                                    // 7\n    return Spacebars.call(Spacebars.dot(view.lookup(\"atts\"), \"doLabels\"));               // 8\n  }, function() {                                                                        // 9\n    return [ \"\\n      \", HTML.DIV({                                                      // 10\n      \"class\": \"nouislider-container\"                                                    // 11\n    }, \"\\n        \", HTML.SPAN({                                                         // 12\n      \"class\": \"nouislider-label\"                                                        // 13\n    }, Blaze.View(\"lookup:atts.labelLeft\", function() {                                  // 14\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"labelLeft\"));        // 15\n    })), \"\\n        \", HTML.DIV({                                                        // 16\n      \"class\": \"nouislider\"                                                              // 17\n    }), \"\\n        \", HTML.SPAN({                                                        // 18\n      \"class\": \"nouislider-label\"                                                        // 19\n    }, Blaze.View(\"lookup:atts.labelRight\", function() {                                 // 20\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"labelRight\"));       // 21\n    })), \"\\n      \"), \"\\n    \" ];                                                        // 22\n  }, function() {                                                                        // 23\n    return [ \"\\n      \", HTML.DIV({                                                      // 24\n      \"class\": \"nouislider\"                                                              // 25\n    }), \"\\n    \" ];                                                                      // 26\n  }), \"\\n  \");                                                                           // 27\n}));                                                                                     // 28\n                                                                                         // 29\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// packages/muqube_autoform-nouislider/autoform-nouislider.js                            //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\n/* global AutoForm, _, Template */                                                       // 1\n                                                                                         // 2\nAutoForm.addInputType(\"noUiSlider\", {                                                    // 3\n  template: \"afNoUiSlider\",                                                              // 4\n  valueOut: function(){                                                                  // 5\n    var slider = this.find('.nouislider');                                               // 6\n    var isDecimal = this.closest(\".at-nouislider\").data(\"decimal\");                      // 7\n                                                                                         // 8\n    if( this.attr(\"data-type\") === \"Object\" ){                                           // 9\n      var parser = (isDecimal)? parseFloat : parseInt;                                   // 10\n      var first = parser.call(null, slider.val()[0]);                                    // 11\n      var second = parser.call(null, slider.val()[1]);                                   // 12\n      var value = {                                                                      // 13\n        lower: first > second ? second : first,                                          // 14\n        upper: first > second ? first : second                                           // 15\n      };                                                                                 // 16\n      return value;                                                                      // 17\n    }else{                                                                               // 18\n      return slider.val();                                                               // 19\n    }                                                                                    // 20\n  }                                                                                      // 21\n});                                                                                      // 22\n                                                                                         // 23\nTemplate.afNoUiSlider.helpers({                                                          // 24\n  atts: function () {                                                                    // 25\n    var data = Template.currentData(); // get data reactively                            // 26\n    var atts = data.atts;                                                                // 27\n    atts[\"data-type\"] = data.schemaType.name;                                            // 28\n    if( atts[\"class\"] ){                                                                 // 29\n      atts[\"class\"] += \" at-nouislider\";                                                 // 30\n    }else{                                                                               // 31\n      atts[\"class\"] = \"at-nouislider\";                                                   // 32\n    }                                                                                    // 33\n                                                                                         // 34\n    atts.doLabels = ( atts.labelLeft || atts.labelRight );                               // 35\n                                                                                         // 36\n    atts[\"data-decimal\"] = data.decimal;                                                 // 37\n                                                                                         // 38\n    return _.omit(atts, 'noUiSliderOptions', 'noUiSlider_pipsOptions');                  // 39\n  }                                                                                      // 40\n});                                                                                      // 41\n                                                                                         // 42\nvar calculateOptions = function(data){                                                   // 43\n  var schemaMinMax = _.pick(data, 'max', 'min');                                         // 44\n  var autoformOptions = _.pick(data.atts || {}, 'max', 'min', 'step', 'start', 'range');\n  var noUiSliderOptions = (data.atts || {}).noUiSliderOptions;                           // 46\n                                                                                         // 47\n  var options = _.extend({}, schemaMinMax, autoformOptions, noUiSliderOptions);          // 48\n                                                                                         // 49\n  // Adjust data initialization based on schema type                                     // 50\n  if( options.start === undefined ){                                                     // 51\n    if( data.schemaType.name === \"Object\" ){                                             // 52\n      if( data.value && data.value.lower ){                                              // 53\n        options.start = [                                                                // 54\n          data.value.lower,                                                              // 55\n          data.value.upper                                                               // 56\n        ];                                                                               // 57\n      }else{                                                                             // 58\n        options.start = [                                                                // 59\n          typeof data.min === \"number\" ? data.min : 0,                                   // 60\n          typeof data.max === \"number\" ? data.max : 100                                  // 61\n        ];                                                                               // 62\n      }                                                                                  // 63\n      options.connect = true;                                                            // 64\n    }else{                                                                               // 65\n      options.start = data.value || 0;                                                   // 66\n    }                                                                                    // 67\n  } else {                                                                               // 68\n    options.start = JSON.parse(options.start);                                           // 69\n  }                                                                                      // 70\n                                                                                         // 71\n  if( options.range === undefined ){                                                     // 72\n    options.range = {                                                                    // 73\n      min: typeof options.min === \"number\" ? options.min : 0,                            // 74\n      max: typeof options.max === \"number\" ? options.max : 100                           // 75\n    };                                                                                   // 76\n  } else {                                                                               // 77\n    options.range = JSON.parse(options.range);                                           // 78\n  }                                                                                      // 79\n  delete options.min;                                                                    // 80\n  delete options.max;                                                                    // 81\n                                                                                         // 82\n  // default step to 1 if not otherwise defined                                          // 83\n  if( options.step === undefined ){                                                      // 84\n    options.step = 1;                                                                    // 85\n  }                                                                                      // 86\n                                                                                         // 87\n  return options;                                                                        // 88\n};                                                                                       // 89\n                                                                                         // 90\nTemplate.afNoUiSlider.rendered = function () {                                           // 91\n  var template = this;                                                                   // 92\n  var $s = template.$('.nouislider');                                                    // 93\n                                                                                         // 94\n  var setup = function(c){                                                               // 95\n    var data = Template.currentData(); // get data reactively                            // 96\n    var options = calculateOptions( data );                                              // 97\n    $s.noUiSlider(options, true);                                                        // 98\n                                                                                         // 99\n    if (c.firstRun) {                                                                    // 100\n      $s.on('slide', function(){                                                         // 101\n        // This is a trick to fool some logic in AutoForm that makes                     // 102\n        // sure values have actually changed on whichever element                        // 103\n        // emits a change event. Eventually AutoForm will give                           // 104\n        // input types the control of indicating exactly when                            // 105\n        // their value changes rather than relying on the change event                   // 106\n        $s.parent()[0].value = JSON.stringify($s.val());                                 // 107\n        $s.parent().change();                                                            // 108\n        $s.data('changed','true');                                                       // 109\n      });                                                                                // 110\n    }                                                                                    // 111\n                                                                                         // 112\n    if( data.atts.noUiSlider_pipsOptions ){                                              // 113\n      $s.noUiSlider_pips(                                                                // 114\n        data.atts.noUiSlider_pipsOptions                                                 // 115\n      );                                                                                 // 116\n    }                                                                                    // 117\n  };                                                                                     // 118\n                                                                                         // 119\n  template.autorun( setup );                                                             // 120\n};                                                                                       // 121\n                                                                                         // 122\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['muqube:autoform-nouislider'] = {};\n\n})();\n","servePath":"/packages/muqube_autoform-nouislider.js","sourceMap":{"version":3,"sources":["/packages/muqube_autoform-nouislider/template.autoform-nouislider.js","/packages/muqube_autoform-nouislider/autoform-nouislider.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8F;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+F","file":"/packages/muqube_autoform-nouislider.js","sourcesContent":["\nTemplate.__checkName(\"afNoUiSlider\");\nTemplate[\"afNoUiSlider\"] = new Template(\"Template.afNoUiSlider\", (function() {\n  var view = this;\n  return HTML.DIV(HTML.Attrs(function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }), \"\\n    \", Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"atts\"), \"doLabels\"));\n  }, function() {\n    return [ \"\\n      \", HTML.DIV({\n      \"class\": \"nouislider-container\"\n    }, \"\\n        \", HTML.SPAN({\n      \"class\": \"nouislider-label\"\n    }, Blaze.View(\"lookup:atts.labelLeft\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"labelLeft\"));\n    })), \"\\n        \", HTML.DIV({\n      \"class\": \"nouislider\"\n    }), \"\\n        \", HTML.SPAN({\n      \"class\": \"nouislider-label\"\n    }, Blaze.View(\"lookup:atts.labelRight\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"atts\"), \"labelRight\"));\n    })), \"\\n      \"), \"\\n    \" ];\n  }, function() {\n    return [ \"\\n      \", HTML.DIV({\n      \"class\": \"nouislider\"\n    }), \"\\n    \" ];\n  }), \"\\n  \");\n}));\n","/* global AutoForm, _, Template */\n\nAutoForm.addInputType(\"noUiSlider\", {\n  template: \"afNoUiSlider\",\n  valueOut: function(){\n    var slider = this.find('.nouislider');\n    var isDecimal = this.closest(\".at-nouislider\").data(\"decimal\");\n\n    if( this.attr(\"data-type\") === \"Object\" ){\n      var parser = (isDecimal)? parseFloat : parseInt;\n      var first = parser.call(null, slider.val()[0]);\n      var second = parser.call(null, slider.val()[1]);\n      var value = {\n        lower: first > second ? second : first,\n        upper: first > second ? first : second\n      };\n      return value;\n    }else{\n      return slider.val();\n    }\n  }\n});\n\nTemplate.afNoUiSlider.helpers({\n  atts: function () {\n    var data = Template.currentData(); // get data reactively\n    var atts = data.atts;\n    atts[\"data-type\"] = data.schemaType.name;\n    if( atts[\"class\"] ){\n      atts[\"class\"] += \" at-nouislider\";\n    }else{\n      atts[\"class\"] = \"at-nouislider\";\n    }\n\n    atts.doLabels = ( atts.labelLeft || atts.labelRight );\n\n    atts[\"data-decimal\"] = data.decimal;\n\n    return _.omit(atts, 'noUiSliderOptions', 'noUiSlider_pipsOptions');\n  }\n});\n\nvar calculateOptions = function(data){\n  var schemaMinMax = _.pick(data, 'max', 'min');\n  var autoformOptions = _.pick(data.atts || {}, 'max', 'min', 'step', 'start', 'range');\n  var noUiSliderOptions = (data.atts || {}).noUiSliderOptions;\n\n  var options = _.extend({}, schemaMinMax, autoformOptions, noUiSliderOptions);\n\n  // Adjust data initialization based on schema type\n  if( options.start === undefined ){\n    if( data.schemaType.name === \"Object\" ){\n      if( data.value && data.value.lower ){\n        options.start = [\n          data.value.lower,\n          data.value.upper\n        ];\n      }else{\n        options.start = [\n          typeof data.min === \"number\" ? data.min : 0,\n          typeof data.max === \"number\" ? data.max : 100\n        ];\n      }\n      options.connect = true;\n    }else{\n      options.start = data.value || 0;\n    }\n  } else {\n    options.start = JSON.parse(options.start);\n  }\n\n  if( options.range === undefined ){\n    options.range = {\n      min: typeof options.min === \"number\" ? options.min : 0,\n      max: typeof options.max === \"number\" ? options.max : 100\n    };\n  } else {\n    options.range = JSON.parse(options.range);\n  }\n  delete options.min;\n  delete options.max;\n\n  // default step to 1 if not otherwise defined\n  if( options.step === undefined ){\n    options.step = 1;\n  }\n\n  return options;\n};\n\nTemplate.afNoUiSlider.rendered = function () {\n  var template = this;\n  var $s = template.$('.nouislider');\n\n  var setup = function(c){\n    var data = Template.currentData(); // get data reactively\n    var options = calculateOptions( data );\n    $s.noUiSlider(options, true);\n\n    if (c.firstRun) {\n      $s.on('slide', function(){\n        // This is a trick to fool some logic in AutoForm that makes\n        // sure values have actually changed on whichever element\n        // emits a change event. Eventually AutoForm will give\n        // input types the control of indicating exactly when\n        // their value changes rather than relying on the change event\n        $s.parent()[0].value = JSON.stringify($s.val());\n        $s.parent().change();\n        $s.data('changed','true');\n      });\n    }\n    \n    if( data.atts.noUiSlider_pipsOptions ){\n      $s.noUiSlider_pips(\n        data.atts.noUiSlider_pipsOptions\n      );\n    }\n  };\n  \n  template.autorun( setup );\n};\n"]}}]