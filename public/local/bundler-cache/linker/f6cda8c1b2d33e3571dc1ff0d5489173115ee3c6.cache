[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\n\n/* Package-scope variables */\nvar focused;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// packages/johannesma_meteor-flexslider/packages/johannesma_meteor- //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\n(function () {                                                       // 1\n                                                                     // 2\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/johannesma:meteor-flexslider/jquery.flexslider.js                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/*                                                                                                                     // 1\n * jQuery FlexSlider v2.2.2                                                                                            // 2\n * Copyright 2012 WooThemes                                                                                            // 3\n * Contributing Author: Tyler Smith                                                                                    // 4\n */                                                                                                                    // 5\n;                                                                                                                      // 6\n(function ($) {                                                                                                        // 7\n                                                                                                                       // 8\n  //FlexSlider: Object Instance                                                                                        // 9\n  $.flexslider = function(el, options) {                                                                               // 10\n    var slider = $(el);                                                                                                // 11\n                                                                                                                       // 12\n    // making variables public                                                                                         // 13\n    slider.vars = $.extend({}, $.flexslider.defaults, options);                                                        // 14\n                                                                                                                       // 15\n    var namespace = slider.vars.namespace,                                                                             // 16\n        msGesture = window.navigator && window.navigator.msPointerEnabled && window.MSGesture,                         // 17\n        touch = (( \"ontouchstart\" in window ) || msGesture || window.DocumentTouch && document instanceof DocumentTouch) && slider.vars.touch,\n        // depricating this idea, as devices are being released with both of these events                              // 19\n        //eventType = (touch) ? \"touchend\" : \"click\",                                                                  // 20\n        eventType = \"click touchend MSPointerUp keyup\",                                                                // 21\n        watchedEvent = \"\",                                                                                             // 22\n        watchedEventClearTimer,                                                                                        // 23\n        vertical = slider.vars.direction === \"vertical\",                                                               // 24\n        reverse = slider.vars.reverse,                                                                                 // 25\n        carousel = (slider.vars.itemWidth > 0),                                                                        // 26\n        fade = slider.vars.animation === \"fade\",                                                                       // 27\n        asNav = slider.vars.asNavFor !== \"\",                                                                           // 28\n        methods = {},                                                                                                  // 29\n        focused = true;                                                                                                // 30\n                                                                                                                       // 31\n    // Store a reference to the slider object                                                                          // 32\n    $.data(el, \"flexslider\", slider);                                                                                  // 33\n                                                                                                                       // 34\n    // Private slider methods                                                                                          // 35\n    methods = {                                                                                                        // 36\n      init: function() {                                                                                               // 37\n        slider.animating = false;                                                                                      // 38\n        // Get current slide and make sure it is a number                                                              // 39\n        slider.currentSlide = parseInt( ( slider.vars.startAt ? slider.vars.startAt : 0), 10 );                        // 40\n        if ( isNaN( slider.currentSlide ) ) slider.currentSlide = 0;                                                   // 41\n        slider.animatingTo = slider.currentSlide;                                                                      // 42\n        slider.atEnd = (slider.currentSlide === 0 || slider.currentSlide === slider.last);                             // 43\n        slider.containerSelector = slider.vars.selector.substr(0,slider.vars.selector.search(' '));                    // 44\n        slider.slides = $(slider.vars.selector, slider);                                                               // 45\n        slider.container = $(slider.containerSelector, slider);                                                        // 46\n        slider.count = slider.slides.length;                                                                           // 47\n        // SYNC:                                                                                                       // 48\n        slider.syncExists = $(slider.vars.sync).length > 0;                                                            // 49\n        // SLIDE:                                                                                                      // 50\n        if (slider.vars.animation === \"slide\") slider.vars.animation = \"swing\";                                        // 51\n        slider.prop = (vertical) ? \"top\" : \"marginLeft\";                                                               // 52\n        slider.args = {};                                                                                              // 53\n        // SLIDESHOW:                                                                                                  // 54\n        slider.manualPause = false;                                                                                    // 55\n        slider.stopped = false;                                                                                        // 56\n        //PAUSE WHEN INVISIBLE                                                                                         // 57\n        slider.started = false;                                                                                        // 58\n        slider.startTimeout = null;                                                                                    // 59\n        // TOUCH/USECSS:                                                                                               // 60\n        slider.transitions = !slider.vars.video && !fade && slider.vars.useCSS && (function() {                        // 61\n          var obj = document.createElement('div'),                                                                     // 62\n              props = ['perspectiveProperty', 'WebkitPerspective', 'MozPerspective', 'OPerspective', 'msPerspective']; // 63\n          for (var i in props) {                                                                                       // 64\n            if ( obj.style[ props[i] ] !== undefined ) {                                                               // 65\n              slider.pfx = props[i].replace('Perspective','').toLowerCase();                                           // 66\n              slider.prop = \"-\" + slider.pfx + \"-transform\";                                                           // 67\n              return true;                                                                                             // 68\n            }                                                                                                          // 69\n          }                                                                                                            // 70\n          return false;                                                                                                // 71\n        }());                                                                                                          // 72\n        slider.ensureAnimationEnd = '';                                                                                // 73\n        // CONTROLSCONTAINER:                                                                                          // 74\n        if (slider.vars.controlsContainer !== \"\") slider.controlsContainer = $(slider.vars.controlsContainer).length > 0 && $(slider.vars.controlsContainer);\n        // MANUAL:                                                                                                     // 76\n        if (slider.vars.manualControls !== \"\") slider.manualControls = $(slider.vars.manualControls).length > 0 && $(slider.vars.manualControls);\n                                                                                                                       // 78\n        // RANDOMIZE:                                                                                                  // 79\n        if (slider.vars.randomize) {                                                                                   // 80\n          slider.slides.sort(function() { return (Math.round(Math.random())-0.5); });                                  // 81\n          slider.container.empty().append(slider.slides);                                                              // 82\n        }                                                                                                              // 83\n                                                                                                                       // 84\n        slider.doMath();                                                                                               // 85\n                                                                                                                       // 86\n        // INIT                                                                                                        // 87\n        slider.setup(\"init\");                                                                                          // 88\n                                                                                                                       // 89\n        // CONTROLNAV:                                                                                                 // 90\n        if (slider.vars.controlNav) methods.controlNav.setup();                                                        // 91\n                                                                                                                       // 92\n        // DIRECTIONNAV:                                                                                               // 93\n        if (slider.vars.directionNav) methods.directionNav.setup();                                                    // 94\n                                                                                                                       // 95\n        // KEYBOARD:                                                                                                   // 96\n        if (slider.vars.keyboard && ($(slider.containerSelector).length === 1 || slider.vars.multipleKeyboard)) {      // 97\n          $(document).bind('keyup', function(event) {                                                                  // 98\n            var keycode = event.keyCode;                                                                               // 99\n            if (!slider.animating && (keycode === 39 || keycode === 37)) {                                             // 100\n              var target = (keycode === 39) ? slider.getTarget('next') :                                               // 101\n                           (keycode === 37) ? slider.getTarget('prev') : false;                                        // 102\n              slider.flexAnimate(target, slider.vars.pauseOnAction);                                                   // 103\n            }                                                                                                          // 104\n          });                                                                                                          // 105\n        }                                                                                                              // 106\n        // MOUSEWHEEL:                                                                                                 // 107\n        if (slider.vars.mousewheel) {                                                                                  // 108\n          slider.bind('mousewheel', function(event, delta, deltaX, deltaY) {                                           // 109\n            event.preventDefault();                                                                                    // 110\n            var target = (delta < 0) ? slider.getTarget('next') : slider.getTarget('prev');                            // 111\n            slider.flexAnimate(target, slider.vars.pauseOnAction);                                                     // 112\n          });                                                                                                          // 113\n        }                                                                                                              // 114\n                                                                                                                       // 115\n        // PAUSEPLAY                                                                                                   // 116\n        if (slider.vars.pausePlay) methods.pausePlay.setup();                                                          // 117\n                                                                                                                       // 118\n        //PAUSE WHEN INVISIBLE                                                                                         // 119\n        if (slider.vars.slideshow && slider.vars.pauseInvisible) methods.pauseInvisible.init();                        // 120\n                                                                                                                       // 121\n        // SLIDSESHOW                                                                                                  // 122\n        if (slider.vars.slideshow) {                                                                                   // 123\n          if (slider.vars.pauseOnHover) {                                                                              // 124\n            slider.hover(function() {                                                                                  // 125\n              if (!slider.manualPlay && !slider.manualPause) slider.pause();                                           // 126\n            }, function() {                                                                                            // 127\n              if (!slider.manualPause && !slider.manualPlay && !slider.stopped) slider.play();                         // 128\n            });                                                                                                        // 129\n          }                                                                                                            // 130\n          // initialize animation                                                                                      // 131\n          //If we're visible, or we don't use PageVisibility API                                                       // 132\n          if(!slider.vars.pauseInvisible || !methods.pauseInvisible.isHidden()) {                                      // 133\n            (slider.vars.initDelay > 0) ? slider.startTimeout = setTimeout(slider.play, slider.vars.initDelay) : slider.play();\n          }                                                                                                            // 135\n        }                                                                                                              // 136\n                                                                                                                       // 137\n        // ASNAV:                                                                                                      // 138\n        if (asNav) methods.asNav.setup();                                                                              // 139\n                                                                                                                       // 140\n        // TOUCH                                                                                                       // 141\n        if (touch && slider.vars.touch) methods.touch();                                                               // 142\n                                                                                                                       // 143\n        // FADE&&SMOOTHHEIGHT || SLIDE:                                                                                // 144\n        if (!fade || (fade && slider.vars.smoothHeight)) $(window).bind(\"resize orientationchange focus\", methods.resize);\n                                                                                                                       // 146\n        slider.find(\"img\").attr(\"draggable\", \"false\");                                                                 // 147\n                                                                                                                       // 148\n        // API: start() Callback                                                                                       // 149\n        setTimeout(function(){                                                                                         // 150\n          slider.vars.start(slider);                                                                                   // 151\n        }, 200);                                                                                                       // 152\n      },                                                                                                               // 153\n      asNav: {                                                                                                         // 154\n        setup: function() {                                                                                            // 155\n          slider.asNav = true;                                                                                         // 156\n          slider.animatingTo = Math.floor(slider.currentSlide/slider.move);                                            // 157\n          slider.currentItem = slider.currentSlide;                                                                    // 158\n          slider.slides.removeClass(namespace + \"active-slide\").eq(slider.currentItem).addClass(namespace + \"active-slide\");\n          if(!msGesture){                                                                                              // 160\n              slider.slides.on(eventType, function(e){                                                                 // 161\n                e.preventDefault();                                                                                    // 162\n                var $slide = $(this),                                                                                  // 163\n                    target = $slide.index();                                                                           // 164\n                var posFromLeft = $slide.offset().left - $(slider).scrollLeft(); // Find position of slide relative to left of slider container\n                if( posFromLeft <= 0 && $slide.hasClass( namespace + 'active-slide' ) ) {                              // 166\n                  slider.flexAnimate(slider.getTarget(\"prev\"), true);                                                  // 167\n                } else if (!$(slider.vars.asNavFor).data('flexslider').animating && !$slide.hasClass(namespace + \"active-slide\")) {\n                  slider.direction = (slider.currentItem < target) ? \"next\" : \"prev\";                                  // 169\n                  slider.flexAnimate(target, slider.vars.pauseOnAction, false, true, true);                            // 170\n                }                                                                                                      // 171\n              });                                                                                                      // 172\n          }else{                                                                                                       // 173\n              el._slider = slider;                                                                                     // 174\n              slider.slides.each(function (){                                                                          // 175\n                  var that = this;                                                                                     // 176\n                  that._gesture = new MSGesture();                                                                     // 177\n                  that._gesture.target = that;                                                                         // 178\n                  that.addEventListener(\"MSPointerDown\", function (e){                                                 // 179\n                      e.preventDefault();                                                                              // 180\n                      if(e.currentTarget._gesture)                                                                     // 181\n                          e.currentTarget._gesture.addPointer(e.pointerId);                                            // 182\n                  }, false);                                                                                           // 183\n                  that.addEventListener(\"MSGestureTap\", function (e){                                                  // 184\n                      e.preventDefault();                                                                              // 185\n                      var $slide = $(this),                                                                            // 186\n                          target = $slide.index();                                                                     // 187\n                      if (!$(slider.vars.asNavFor).data('flexslider').animating && !$slide.hasClass('active')) {       // 188\n                          slider.direction = (slider.currentItem < target) ? \"next\" : \"prev\";                          // 189\n                          slider.flexAnimate(target, slider.vars.pauseOnAction, false, true, true);                    // 190\n                      }                                                                                                // 191\n                  });                                                                                                  // 192\n              });                                                                                                      // 193\n          }                                                                                                            // 194\n        }                                                                                                              // 195\n      },                                                                                                               // 196\n      controlNav: {                                                                                                    // 197\n        setup: function() {                                                                                            // 198\n          if (!slider.manualControls) {                                                                                // 199\n            methods.controlNav.setupPaging();                                                                          // 200\n          } else { // MANUALCONTROLS:                                                                                  // 201\n            methods.controlNav.setupManual();                                                                          // 202\n          }                                                                                                            // 203\n        },                                                                                                             // 204\n        setupPaging: function() {                                                                                      // 205\n          var type = (slider.vars.controlNav === \"thumbnails\") ? 'control-thumbs' : 'control-paging',                  // 206\n              j = 1,                                                                                                   // 207\n              item,                                                                                                    // 208\n              slide;                                                                                                   // 209\n                                                                                                                       // 210\n          slider.controlNavScaffold = $('<ol class=\"'+ namespace + 'control-nav ' + namespace + type + '\"></ol>');     // 211\n                                                                                                                       // 212\n          if (slider.pagingCount > 1) {                                                                                // 213\n            for (var i = 0; i < slider.pagingCount; i++) {                                                             // 214\n              slide = slider.slides.eq(i);                                                                             // 215\n              item = (slider.vars.controlNav === \"thumbnails\") ? '<img src=\"' + slide.attr( 'data-thumb' ) + '\"/>' : '<a>' + j + '</a>';\n              if ( 'thumbnails' === slider.vars.controlNav && true === slider.vars.thumbCaptions ) {                   // 217\n                var captn = slide.attr( 'data-thumbcaption' );                                                         // 218\n                if ( '' != captn && undefined != captn ) item += '<span class=\"' + namespace + 'caption\">' + captn + '</span>';\n              }                                                                                                        // 220\n              slider.controlNavScaffold.append('<li>' + item + '</li>');                                               // 221\n              j++;                                                                                                     // 222\n            }                                                                                                          // 223\n          }                                                                                                            // 224\n                                                                                                                       // 225\n          // CONTROLSCONTAINER:                                                                                        // 226\n          (slider.controlsContainer) ? $(slider.controlsContainer).append(slider.controlNavScaffold) : slider.append(slider.controlNavScaffold);\n          methods.controlNav.set();                                                                                    // 228\n                                                                                                                       // 229\n          methods.controlNav.active();                                                                                 // 230\n                                                                                                                       // 231\n          slider.controlNavScaffold.delegate('a, img', eventType, function(event) {                                    // 232\n            event.preventDefault();                                                                                    // 233\n                                                                                                                       // 234\n            if (watchedEvent === \"\" || watchedEvent === event.type) {                                                  // 235\n              var $this = $(this),                                                                                     // 236\n                  target = slider.controlNav.index($this);                                                             // 237\n                                                                                                                       // 238\n              if (!$this.hasClass(namespace + 'active')) {                                                             // 239\n                slider.direction = (target > slider.currentSlide) ? \"next\" : \"prev\";                                   // 240\n                slider.flexAnimate(target, slider.vars.pauseOnAction);                                                 // 241\n              }                                                                                                        // 242\n            }                                                                                                          // 243\n                                                                                                                       // 244\n            // setup flags to prevent event duplication                                                                // 245\n            if (watchedEvent === \"\") {                                                                                 // 246\n              watchedEvent = event.type;                                                                               // 247\n            }                                                                                                          // 248\n            methods.setToClearWatchedEvent();                                                                          // 249\n                                                                                                                       // 250\n          });                                                                                                          // 251\n        },                                                                                                             // 252\n        setupManual: function() {                                                                                      // 253\n          slider.controlNav = slider.manualControls;                                                                   // 254\n          methods.controlNav.active();                                                                                 // 255\n                                                                                                                       // 256\n          slider.controlNav.bind(eventType, function(event) {                                                          // 257\n            event.preventDefault();                                                                                    // 258\n                                                                                                                       // 259\n            if (watchedEvent === \"\" || watchedEvent === event.type) {                                                  // 260\n              var $this = $(this),                                                                                     // 261\n                  target = slider.controlNav.index($this);                                                             // 262\n                                                                                                                       // 263\n              if (!$this.hasClass(namespace + 'active')) {                                                             // 264\n                (target > slider.currentSlide) ? slider.direction = \"next\" : slider.direction = \"prev\";                // 265\n                slider.flexAnimate(target, slider.vars.pauseOnAction);                                                 // 266\n              }                                                                                                        // 267\n            }                                                                                                          // 268\n                                                                                                                       // 269\n            // setup flags to prevent event duplication                                                                // 270\n            if (watchedEvent === \"\") {                                                                                 // 271\n              watchedEvent = event.type;                                                                               // 272\n            }                                                                                                          // 273\n            methods.setToClearWatchedEvent();                                                                          // 274\n          });                                                                                                          // 275\n        },                                                                                                             // 276\n        set: function() {                                                                                              // 277\n          var selector = (slider.vars.controlNav === \"thumbnails\") ? 'img' : 'a';                                      // 278\n          slider.controlNav = $('.' + namespace + 'control-nav li ' + selector, (slider.controlsContainer) ? slider.controlsContainer : slider);\n        },                                                                                                             // 280\n        active: function() {                                                                                           // 281\n          slider.controlNav.removeClass(namespace + \"active\").eq(slider.animatingTo).addClass(namespace + \"active\");   // 282\n        },                                                                                                             // 283\n        update: function(action, pos) {                                                                                // 284\n          if (slider.pagingCount > 1 && action === \"add\") {                                                            // 285\n            slider.controlNavScaffold.append($('<li><a>' + slider.count + '</a></li>'));                               // 286\n          } else if (slider.pagingCount === 1) {                                                                       // 287\n            slider.controlNavScaffold.find('li').remove();                                                             // 288\n          } else {                                                                                                     // 289\n            slider.controlNav.eq(pos).closest('li').remove();                                                          // 290\n          }                                                                                                            // 291\n          methods.controlNav.set();                                                                                    // 292\n          (slider.pagingCount > 1 && slider.pagingCount !== slider.controlNav.length) ? slider.update(pos, action) : methods.controlNav.active();\n        }                                                                                                              // 294\n      },                                                                                                               // 295\n      directionNav: {                                                                                                  // 296\n        setup: function() {                                                                                            // 297\n          var directionNavScaffold = $('<ul class=\"' + namespace + 'direction-nav\"><li><a class=\"' + namespace + 'prev\" href=\"#\">' + slider.vars.prevText + '</a></li><li><a class=\"' + namespace + 'next\" href=\"#\">' + slider.vars.nextText + '</a></li></ul>');\n                                                                                                                       // 299\n          // CONTROLSCONTAINER:                                                                                        // 300\n          if (slider.controlsContainer) {                                                                              // 301\n            $(slider.controlsContainer).append(directionNavScaffold);                                                  // 302\n            slider.directionNav = $('.' + namespace + 'direction-nav li a', slider.controlsContainer);                 // 303\n          } else {                                                                                                     // 304\n            slider.append(directionNavScaffold);                                                                       // 305\n            slider.directionNav = $('.' + namespace + 'direction-nav li a', slider);                                   // 306\n          }                                                                                                            // 307\n                                                                                                                       // 308\n          methods.directionNav.update();                                                                               // 309\n                                                                                                                       // 310\n          slider.directionNav.bind(eventType, function(event) {                                                        // 311\n            event.preventDefault();                                                                                    // 312\n            var target;                                                                                                // 313\n                                                                                                                       // 314\n            if (watchedEvent === \"\" || watchedEvent === event.type) {                                                  // 315\n              target = ($(this).hasClass(namespace + 'next')) ? slider.getTarget('next') : slider.getTarget('prev');   // 316\n              slider.flexAnimate(target, slider.vars.pauseOnAction);                                                   // 317\n            }                                                                                                          // 318\n                                                                                                                       // 319\n            // setup flags to prevent event duplication                                                                // 320\n            if (watchedEvent === \"\") {                                                                                 // 321\n              watchedEvent = event.type;                                                                               // 322\n            }                                                                                                          // 323\n            methods.setToClearWatchedEvent();                                                                          // 324\n          });                                                                                                          // 325\n        },                                                                                                             // 326\n        update: function() {                                                                                           // 327\n          var disabledClass = namespace + 'disabled';                                                                  // 328\n          if (slider.pagingCount === 1) {                                                                              // 329\n            slider.directionNav.addClass(disabledClass).attr('tabindex', '-1');                                        // 330\n          } else if (!slider.vars.animationLoop) {                                                                     // 331\n            if (slider.animatingTo === 0) {                                                                            // 332\n              slider.directionNav.removeClass(disabledClass).filter('.' + namespace + \"prev\").addClass(disabledClass).attr('tabindex', '-1');\n            } else if (slider.animatingTo === slider.last) {                                                           // 334\n              slider.directionNav.removeClass(disabledClass).filter('.' + namespace + \"next\").addClass(disabledClass).attr('tabindex', '-1');\n            } else {                                                                                                   // 336\n              slider.directionNav.removeClass(disabledClass).removeAttr('tabindex');                                   // 337\n            }                                                                                                          // 338\n          } else {                                                                                                     // 339\n            slider.directionNav.removeClass(disabledClass).removeAttr('tabindex');                                     // 340\n          }                                                                                                            // 341\n        }                                                                                                              // 342\n      },                                                                                                               // 343\n      pausePlay: {                                                                                                     // 344\n        setup: function() {                                                                                            // 345\n          var pausePlayScaffold = $('<div class=\"' + namespace + 'pauseplay\"><a></a></div>');                          // 346\n                                                                                                                       // 347\n          // CONTROLSCONTAINER:                                                                                        // 348\n          if (slider.controlsContainer) {                                                                              // 349\n            slider.controlsContainer.append(pausePlayScaffold);                                                        // 350\n            slider.pausePlay = $('.' + namespace + 'pauseplay a', slider.controlsContainer);                           // 351\n          } else {                                                                                                     // 352\n            slider.append(pausePlayScaffold);                                                                          // 353\n            slider.pausePlay = $('.' + namespace + 'pauseplay a', slider);                                             // 354\n          }                                                                                                            // 355\n                                                                                                                       // 356\n          methods.pausePlay.update((slider.vars.slideshow) ? namespace + 'pause' : namespace + 'play');                // 357\n                                                                                                                       // 358\n          slider.pausePlay.bind(eventType, function(event) {                                                           // 359\n            event.preventDefault();                                                                                    // 360\n                                                                                                                       // 361\n            if (watchedEvent === \"\" || watchedEvent === event.type) {                                                  // 362\n              if ($(this).hasClass(namespace + 'pause')) {                                                             // 363\n                slider.manualPause = true;                                                                             // 364\n                slider.manualPlay = false;                                                                             // 365\n                slider.pause();                                                                                        // 366\n              } else {                                                                                                 // 367\n                slider.manualPause = false;                                                                            // 368\n                slider.manualPlay = true;                                                                              // 369\n                slider.play();                                                                                         // 370\n              }                                                                                                        // 371\n            }                                                                                                          // 372\n                                                                                                                       // 373\n            // setup flags to prevent event duplication                                                                // 374\n            if (watchedEvent === \"\") {                                                                                 // 375\n              watchedEvent = event.type;                                                                               // 376\n            }                                                                                                          // 377\n            methods.setToClearWatchedEvent();                                                                          // 378\n          });                                                                                                          // 379\n        },                                                                                                             // 380\n        update: function(state) {                                                                                      // 381\n          (state === \"play\") ? slider.pausePlay.removeClass(namespace + 'pause').addClass(namespace + 'play').html(slider.vars.playText) : slider.pausePlay.removeClass(namespace + 'play').addClass(namespace + 'pause').html(slider.vars.pauseText);\n        }                                                                                                              // 383\n      },                                                                                                               // 384\n      touch: function() {                                                                                              // 385\n        var startX,                                                                                                    // 386\n          startY,                                                                                                      // 387\n          offset,                                                                                                      // 388\n          cwidth,                                                                                                      // 389\n          dx,                                                                                                          // 390\n          startT,                                                                                                      // 391\n          scrolling = false,                                                                                           // 392\n          localX = 0,                                                                                                  // 393\n          localY = 0,                                                                                                  // 394\n          accDx = 0;                                                                                                   // 395\n                                                                                                                       // 396\n        if(!msGesture){                                                                                                // 397\n            el.addEventListener('touchstart', onTouchStart, false);                                                    // 398\n                                                                                                                       // 399\n            function onTouchStart(e) {                                                                                 // 400\n              if (slider.animating) {                                                                                  // 401\n                e.preventDefault();                                                                                    // 402\n              } else if ( ( window.navigator.msPointerEnabled ) || e.touches.length === 1 ) {                          // 403\n                slider.pause();                                                                                        // 404\n                // CAROUSEL:                                                                                           // 405\n                cwidth = (vertical) ? slider.h : slider. w;                                                            // 406\n                startT = Number(new Date());                                                                           // 407\n                // CAROUSEL:                                                                                           // 408\n                                                                                                                       // 409\n                // Local vars for X and Y points.                                                                      // 410\n                localX = e.touches[0].pageX;                                                                           // 411\n                localY = e.touches[0].pageY;                                                                           // 412\n                                                                                                                       // 413\n                offset = (carousel && reverse && slider.animatingTo === slider.last) ? 0 :                             // 414\n                         (carousel && reverse) ? slider.limit - (((slider.itemW + slider.vars.itemMargin) * slider.move) * slider.animatingTo) :\n                         (carousel && slider.currentSlide === slider.last) ? slider.limit :                            // 416\n                         (carousel) ? ((slider.itemW + slider.vars.itemMargin) * slider.move) * slider.currentSlide :  // 417\n                         (reverse) ? (slider.last - slider.currentSlide + slider.cloneOffset) * cwidth : (slider.currentSlide + slider.cloneOffset) * cwidth;\n                startX = (vertical) ? localY : localX;                                                                 // 419\n                startY = (vertical) ? localX : localY;                                                                 // 420\n                                                                                                                       // 421\n                el.addEventListener('touchmove', onTouchMove, false);                                                  // 422\n                el.addEventListener('touchend', onTouchEnd, false);                                                    // 423\n              }                                                                                                        // 424\n            }                                                                                                          // 425\n                                                                                                                       // 426\n            function onTouchMove(e) {                                                                                  // 427\n              // Local vars for X and Y points.                                                                        // 428\n                                                                                                                       // 429\n              localX = e.touches[0].pageX;                                                                             // 430\n              localY = e.touches[0].pageY;                                                                             // 431\n                                                                                                                       // 432\n              dx = (vertical) ? startX - localY : startX - localX;                                                     // 433\n              scrolling = (vertical) ? (Math.abs(dx) < Math.abs(localX - startY)) : (Math.abs(dx) < Math.abs(localY - startY));\n                                                                                                                       // 435\n              var fxms = 500;                                                                                          // 436\n                                                                                                                       // 437\n              if ( ! scrolling || Number( new Date() ) - startT > fxms ) {                                             // 438\n                e.preventDefault();                                                                                    // 439\n                if (!fade && slider.transitions) {                                                                     // 440\n                  if (!slider.vars.animationLoop) {                                                                    // 441\n                    dx = dx/((slider.currentSlide === 0 && dx < 0 || slider.currentSlide === slider.last && dx > 0) ? (Math.abs(dx)/cwidth+2) : 1);\n                  }                                                                                                    // 443\n                  slider.setProps(offset + dx, \"setTouch\");                                                            // 444\n                }                                                                                                      // 445\n              }                                                                                                        // 446\n            }                                                                                                          // 447\n                                                                                                                       // 448\n            function onTouchEnd(e) {                                                                                   // 449\n              // finish the touch by undoing the touch session                                                         // 450\n              el.removeEventListener('touchmove', onTouchMove, false);                                                 // 451\n                                                                                                                       // 452\n              if (slider.animatingTo === slider.currentSlide && !scrolling && !(dx === null)) {                        // 453\n                var updateDx = (reverse) ? -dx : dx,                                                                   // 454\n                    target = (updateDx > 0) ? slider.getTarget('next') : slider.getTarget('prev');                     // 455\n                                                                                                                       // 456\n                if (slider.canAdvance(target) && (Number(new Date()) - startT < 550 && Math.abs(updateDx) > 50 || Math.abs(updateDx) > cwidth/2)) {\n                  slider.flexAnimate(target, slider.vars.pauseOnAction);                                               // 458\n                } else {                                                                                               // 459\n                  if (!fade) slider.flexAnimate(slider.currentSlide, slider.vars.pauseOnAction, true);                 // 460\n                }                                                                                                      // 461\n              }                                                                                                        // 462\n              el.removeEventListener('touchend', onTouchEnd, false);                                                   // 463\n                                                                                                                       // 464\n              startX = null;                                                                                           // 465\n              startY = null;                                                                                           // 466\n              dx = null;                                                                                               // 467\n              offset = null;                                                                                           // 468\n            }                                                                                                          // 469\n        }else{                                                                                                         // 470\n            el.style.msTouchAction = \"none\";                                                                           // 471\n            el._gesture = new MSGesture();                                                                             // 472\n            el._gesture.target = el;                                                                                   // 473\n            el.addEventListener(\"MSPointerDown\", onMSPointerDown, false);                                              // 474\n            el._slider = slider;                                                                                       // 475\n            el.addEventListener(\"MSGestureChange\", onMSGestureChange, false);                                          // 476\n            el.addEventListener(\"MSGestureEnd\", onMSGestureEnd, false);                                                // 477\n                                                                                                                       // 478\n            function onMSPointerDown(e){                                                                               // 479\n                e.stopPropagation();                                                                                   // 480\n                if (slider.animating) {                                                                                // 481\n                    e.preventDefault();                                                                                // 482\n                }else{                                                                                                 // 483\n                    slider.pause();                                                                                    // 484\n                    el._gesture.addPointer(e.pointerId);                                                               // 485\n                    accDx = 0;                                                                                         // 486\n                    cwidth = (vertical) ? slider.h : slider. w;                                                        // 487\n                    startT = Number(new Date());                                                                       // 488\n                    // CAROUSEL:                                                                                       // 489\n                                                                                                                       // 490\n                    offset = (carousel && reverse && slider.animatingTo === slider.last) ? 0 :                         // 491\n                        (carousel && reverse) ? slider.limit - (((slider.itemW + slider.vars.itemMargin) * slider.move) * slider.animatingTo) :\n                            (carousel && slider.currentSlide === slider.last) ? slider.limit :                         // 493\n                                (carousel) ? ((slider.itemW + slider.vars.itemMargin) * slider.move) * slider.currentSlide :\n                                    (reverse) ? (slider.last - slider.currentSlide + slider.cloneOffset) * cwidth : (slider.currentSlide + slider.cloneOffset) * cwidth;\n                }                                                                                                      // 496\n            }                                                                                                          // 497\n                                                                                                                       // 498\n            function onMSGestureChange(e) {                                                                            // 499\n                e.stopPropagation();                                                                                   // 500\n                var slider = e.target._slider;                                                                         // 501\n                if(!slider){                                                                                           // 502\n                    return;                                                                                            // 503\n                }                                                                                                      // 504\n                var transX = -e.translationX,                                                                          // 505\n                    transY = -e.translationY;                                                                          // 506\n                                                                                                                       // 507\n                //Accumulate translations.                                                                             // 508\n                accDx = accDx + ((vertical) ? transY : transX);                                                        // 509\n                dx = accDx;                                                                                            // 510\n                scrolling = (vertical) ? (Math.abs(accDx) < Math.abs(-transX)) : (Math.abs(accDx) < Math.abs(-transY));\n                                                                                                                       // 512\n                if(e.detail === e.MSGESTURE_FLAG_INERTIA){                                                             // 513\n                    setImmediate(function (){                                                                          // 514\n                        el._gesture.stop();                                                                            // 515\n                    });                                                                                                // 516\n                                                                                                                       // 517\n                    return;                                                                                            // 518\n                }                                                                                                      // 519\n                                                                                                                       // 520\n                if (!scrolling || Number(new Date()) - startT > 500) {                                                 // 521\n                    e.preventDefault();                                                                                // 522\n                    if (!fade && slider.transitions) {                                                                 // 523\n                        if (!slider.vars.animationLoop) {                                                              // 524\n                            dx = accDx / ((slider.currentSlide === 0 && accDx < 0 || slider.currentSlide === slider.last && accDx > 0) ? (Math.abs(accDx) / cwidth + 2) : 1);\n                        }                                                                                              // 526\n                        slider.setProps(offset + dx, \"setTouch\");                                                      // 527\n                    }                                                                                                  // 528\n                }                                                                                                      // 529\n            }                                                                                                          // 530\n                                                                                                                       // 531\n            function onMSGestureEnd(e) {                                                                               // 532\n                e.stopPropagation();                                                                                   // 533\n                var slider = e.target._slider;                                                                         // 534\n                if(!slider){                                                                                           // 535\n                    return;                                                                                            // 536\n                }                                                                                                      // 537\n                if (slider.animatingTo === slider.currentSlide && !scrolling && !(dx === null)) {                      // 538\n                    var updateDx = (reverse) ? -dx : dx,                                                               // 539\n                        target = (updateDx > 0) ? slider.getTarget('next') : slider.getTarget('prev');                 // 540\n                                                                                                                       // 541\n                    if (slider.canAdvance(target) && (Number(new Date()) - startT < 550 && Math.abs(updateDx) > 50 || Math.abs(updateDx) > cwidth/2)) {\n                        slider.flexAnimate(target, slider.vars.pauseOnAction);                                         // 543\n                    } else {                                                                                           // 544\n                        if (!fade) slider.flexAnimate(slider.currentSlide, slider.vars.pauseOnAction, true);           // 545\n                    }                                                                                                  // 546\n                }                                                                                                      // 547\n                                                                                                                       // 548\n                startX = null;                                                                                         // 549\n                startY = null;                                                                                         // 550\n                dx = null;                                                                                             // 551\n                offset = null;                                                                                         // 552\n                accDx = 0;                                                                                             // 553\n            }                                                                                                          // 554\n        }                                                                                                              // 555\n      },                                                                                                               // 556\n      resize: function() {                                                                                             // 557\n        if (!slider.animating && slider.is(':visible')) {                                                              // 558\n          if (!carousel) slider.doMath();                                                                              // 559\n                                                                                                                       // 560\n          if (fade) {                                                                                                  // 561\n            // SMOOTH HEIGHT:                                                                                          // 562\n            methods.smoothHeight();                                                                                    // 563\n          } else if (carousel) { //CAROUSEL:                                                                           // 564\n            slider.slides.width(slider.computedW);                                                                     // 565\n            slider.update(slider.pagingCount);                                                                         // 566\n            slider.setProps();                                                                                         // 567\n          }                                                                                                            // 568\n          else if (vertical) { //VERTICAL:                                                                             // 569\n            slider.viewport.height(slider.h);                                                                          // 570\n            slider.setProps(slider.h, \"setTotal\");                                                                     // 571\n          } else {                                                                                                     // 572\n            // SMOOTH HEIGHT:                                                                                          // 573\n            if (slider.vars.smoothHeight) methods.smoothHeight();                                                      // 574\n            slider.newSlides.width(slider.computedW);                                                                  // 575\n            slider.setProps(slider.computedW, \"setTotal\");                                                             // 576\n          }                                                                                                            // 577\n        }                                                                                                              // 578\n      },                                                                                                               // 579\n      smoothHeight: function(dur) {                                                                                    // 580\n        if (!vertical || fade) {                                                                                       // 581\n          var $obj = (fade) ? slider : slider.viewport;                                                                // 582\n          (dur) ? $obj.animate({\"height\": slider.slides.eq(slider.animatingTo).height()}, dur) : $obj.height(slider.slides.eq(slider.animatingTo).height());\n        }                                                                                                              // 584\n      },                                                                                                               // 585\n      sync: function(action) {                                                                                         // 586\n        var $obj = $(slider.vars.sync).data(\"flexslider\"),                                                             // 587\n            target = slider.animatingTo;                                                                               // 588\n                                                                                                                       // 589\n        switch (action) {                                                                                              // 590\n          case \"animate\": $obj.flexAnimate(target, slider.vars.pauseOnAction, false, true); break;                     // 591\n          case \"play\": if (!$obj.playing && !$obj.asNav) { $obj.play(); } break;                                       // 592\n          case \"pause\": $obj.pause(); break;                                                                           // 593\n        }                                                                                                              // 594\n      },                                                                                                               // 595\n      uniqueID: function($clone) {                                                                                     // 596\n        // Append _clone to current level and children elements with id attributes                                     // 597\n        $clone.filter( '[id]' ).add($clone.find( '[id]' )).each(function() {                                           // 598\n          var $this = $(this);                                                                                         // 599\n          $this.attr( 'id', $this.attr( 'id' ) + '_clone' );                                                           // 600\n        });                                                                                                            // 601\n        return $clone;                                                                                                 // 602\n      },                                                                                                               // 603\n      pauseInvisible: {                                                                                                // 604\n        visProp: null,                                                                                                 // 605\n        init: function() {                                                                                             // 606\n          var prefixes = ['webkit','moz','ms','o'];                                                                    // 607\n                                                                                                                       // 608\n          if ('hidden' in document) return 'hidden';                                                                   // 609\n          for (var i = 0; i < prefixes.length; i++) {                                                                  // 610\n            if ((prefixes[i] + 'Hidden') in document)                                                                  // 611\n            methods.pauseInvisible.visProp = prefixes[i] + 'Hidden';                                                   // 612\n          }                                                                                                            // 613\n          if (methods.pauseInvisible.visProp) {                                                                        // 614\n            var evtname = methods.pauseInvisible.visProp.replace(/[H|h]idden/,'') + 'visibilitychange';                // 615\n            document.addEventListener(evtname, function() {                                                            // 616\n              if (methods.pauseInvisible.isHidden()) {                                                                 // 617\n                if(slider.startTimeout) clearTimeout(slider.startTimeout); //If clock is ticking, stop timer and prevent from starting while invisible\n                else slider.pause(); //Or just pause                                                                   // 619\n              }                                                                                                        // 620\n              else {                                                                                                   // 621\n                if(slider.started) slider.play(); //Initiated before, just play                                        // 622\n                else (slider.vars.initDelay > 0) ? setTimeout(slider.play, slider.vars.initDelay) : slider.play(); //Didn't init before: simply init or wait for it\n              }                                                                                                        // 624\n            });                                                                                                        // 625\n          }                                                                                                            // 626\n        },                                                                                                             // 627\n        isHidden: function() {                                                                                         // 628\n          return document[methods.pauseInvisible.visProp] || false;                                                    // 629\n        }                                                                                                              // 630\n      },                                                                                                               // 631\n      setToClearWatchedEvent: function() {                                                                             // 632\n        clearTimeout(watchedEventClearTimer);                                                                          // 633\n        watchedEventClearTimer = setTimeout(function() {                                                               // 634\n          watchedEvent = \"\";                                                                                           // 635\n        }, 3000);                                                                                                      // 636\n      }                                                                                                                // 637\n    };                                                                                                                 // 638\n                                                                                                                       // 639\n    // public methods                                                                                                  // 640\n    slider.flexAnimate = function(target, pause, override, withSync, fromNav) {                                        // 641\n      if (!slider.vars.animationLoop && target !== slider.currentSlide) {                                              // 642\n        slider.direction = (target > slider.currentSlide) ? \"next\" : \"prev\";                                           // 643\n      }                                                                                                                // 644\n                                                                                                                       // 645\n      if (asNav && slider.pagingCount === 1) slider.direction = (slider.currentItem < target) ? \"next\" : \"prev\";       // 646\n                                                                                                                       // 647\n      if (!slider.animating && (slider.canAdvance(target, fromNav) || override) && slider.is(\":visible\")) {            // 648\n        if (asNav && withSync) {                                                                                       // 649\n          var master = $(slider.vars.asNavFor).data('flexslider');                                                     // 650\n          slider.atEnd = target === 0 || target === slider.count - 1;                                                  // 651\n          master.flexAnimate(target, true, false, true, fromNav);                                                      // 652\n          slider.direction = (slider.currentItem < target) ? \"next\" : \"prev\";                                          // 653\n          master.direction = slider.direction;                                                                         // 654\n                                                                                                                       // 655\n          if (Math.ceil((target + 1)/slider.visible) - 1 !== slider.currentSlide && target !== 0) {                    // 656\n            slider.currentItem = target;                                                                               // 657\n            slider.slides.removeClass(namespace + \"active-slide\").eq(target).addClass(namespace + \"active-slide\");     // 658\n            target = Math.floor(target/slider.visible);                                                                // 659\n          } else {                                                                                                     // 660\n            slider.currentItem = target;                                                                               // 661\n            slider.slides.removeClass(namespace + \"active-slide\").eq(target).addClass(namespace + \"active-slide\");     // 662\n            return false;                                                                                              // 663\n          }                                                                                                            // 664\n        }                                                                                                              // 665\n                                                                                                                       // 666\n        slider.animating = true;                                                                                       // 667\n        slider.animatingTo = target;                                                                                   // 668\n                                                                                                                       // 669\n        // SLIDESHOW:                                                                                                  // 670\n        if (pause) slider.pause();                                                                                     // 671\n                                                                                                                       // 672\n        // API: before() animation Callback                                                                            // 673\n        slider.vars.before(slider);                                                                                    // 674\n                                                                                                                       // 675\n        // SYNC:                                                                                                       // 676\n        if (slider.syncExists && !fromNav) methods.sync(\"animate\");                                                    // 677\n                                                                                                                       // 678\n        // CONTROLNAV                                                                                                  // 679\n        if (slider.vars.controlNav) methods.controlNav.active();                                                       // 680\n                                                                                                                       // 681\n        // !CAROUSEL:                                                                                                  // 682\n        // CANDIDATE: slide active class (for add/remove slide)                                                        // 683\n        if (!carousel) slider.slides.removeClass(namespace + 'active-slide').eq(target).addClass(namespace + 'active-slide');\n                                                                                                                       // 685\n        // INFINITE LOOP:                                                                                              // 686\n        // CANDIDATE: atEnd                                                                                            // 687\n        slider.atEnd = target === 0 || target === slider.last;                                                         // 688\n                                                                                                                       // 689\n        // DIRECTIONNAV:                                                                                               // 690\n        if (slider.vars.directionNav) methods.directionNav.update();                                                   // 691\n                                                                                                                       // 692\n        if (target === slider.last) {                                                                                  // 693\n          // API: end() of cycle Callback                                                                              // 694\n          slider.vars.end(slider);                                                                                     // 695\n          // SLIDESHOW && !INFINITE LOOP:                                                                              // 696\n          if (!slider.vars.animationLoop) slider.pause();                                                              // 697\n        }                                                                                                              // 698\n                                                                                                                       // 699\n        // SLIDE:                                                                                                      // 700\n        if (!fade) {                                                                                                   // 701\n          var dimension = (vertical) ? slider.slides.filter(':first').height() : slider.computedW,                     // 702\n              margin, slideString, calcNext;                                                                           // 703\n                                                                                                                       // 704\n          // INFINITE LOOP / REVERSE:                                                                                  // 705\n          if (carousel) {                                                                                              // 706\n            //margin = (slider.vars.itemWidth > slider.w) ? slider.vars.itemMargin * 2 : slider.vars.itemMargin;       // 707\n            margin = slider.vars.itemMargin;                                                                           // 708\n            calcNext = ((slider.itemW + margin) * slider.move) * slider.animatingTo;                                   // 709\n            slideString = (calcNext > slider.limit && slider.visible !== 1) ? slider.limit : calcNext;                 // 710\n          } else if (slider.currentSlide === 0 && target === slider.count - 1 && slider.vars.animationLoop && slider.direction !== \"next\") {\n            slideString = (reverse) ? (slider.count + slider.cloneOffset) * dimension : 0;                             // 712\n          } else if (slider.currentSlide === slider.last && target === 0 && slider.vars.animationLoop && slider.direction !== \"prev\") {\n            slideString = (reverse) ? 0 : (slider.count + 1) * dimension;                                              // 714\n          } else {                                                                                                     // 715\n            slideString = (reverse) ? ((slider.count - 1) - target + slider.cloneOffset) * dimension : (target + slider.cloneOffset) * dimension;\n          }                                                                                                            // 717\n          slider.setProps(slideString, \"\", slider.vars.animationSpeed);                                                // 718\n          if (slider.transitions) {                                                                                    // 719\n            if (!slider.vars.animationLoop || !slider.atEnd) {                                                         // 720\n              slider.animating = false;                                                                                // 721\n              slider.currentSlide = slider.animatingTo;                                                                // 722\n            }                                                                                                          // 723\n                                                                                                                       // 724\n            // Unbind previous transitionEnd events and re-bind new transitionEnd event                                // 725\n            slider.container.unbind(\"webkitTransitionEnd transitionend\");                                              // 726\n            slider.container.bind(\"webkitTransitionEnd transitionend\", function() {                                    // 727\n              clearTimeout(slider.ensureAnimationEnd);                                                                 // 728\n              slider.wrapup(dimension);                                                                                // 729\n            });                                                                                                        // 730\n                                                                                                                       // 731\n            // Insurance for the ever-so-fickle transitionEnd event                                                    // 732\n            clearTimeout(slider.ensureAnimationEnd);                                                                   // 733\n            slider.ensureAnimationEnd = setTimeout(function() {                                                        // 734\n              slider.wrapup(dimension);                                                                                // 735\n            }, slider.vars.animationSpeed + 100);                                                                      // 736\n                                                                                                                       // 737\n          } else {                                                                                                     // 738\n            slider.container.animate(slider.args, slider.vars.animationSpeed, slider.vars.easing, function(){          // 739\n              slider.wrapup(dimension);                                                                                // 740\n            });                                                                                                        // 741\n          }                                                                                                            // 742\n        } else { // FADE:                                                                                              // 743\n          if (!touch) {                                                                                                // 744\n            //slider.slides.eq(slider.currentSlide).fadeOut(slider.vars.animationSpeed, slider.vars.easing);           // 745\n            //slider.slides.eq(target).fadeIn(slider.vars.animationSpeed, slider.vars.easing, slider.wrapup);          // 746\n                                                                                                                       // 747\n            slider.slides.eq(slider.currentSlide).css({\"zIndex\": 1}).animate({\"opacity\": 0}, slider.vars.animationSpeed, slider.vars.easing);\n            slider.slides.eq(target).css({\"zIndex\": 2}).animate({\"opacity\": 1}, slider.vars.animationSpeed, slider.vars.easing, slider.wrapup);\n                                                                                                                       // 750\n          } else {                                                                                                     // 751\n            slider.slides.eq(slider.currentSlide).css({ \"opacity\": 0, \"zIndex\": 1 });                                  // 752\n            slider.slides.eq(target).css({ \"opacity\": 1, \"zIndex\": 2 });                                               // 753\n            slider.wrapup(dimension);                                                                                  // 754\n          }                                                                                                            // 755\n        }                                                                                                              // 756\n        // SMOOTH HEIGHT:                                                                                              // 757\n        if (slider.vars.smoothHeight) methods.smoothHeight(slider.vars.animationSpeed);                                // 758\n      }                                                                                                                // 759\n    };                                                                                                                 // 760\n    slider.wrapup = function(dimension) {                                                                              // 761\n      // SLIDE:                                                                                                        // 762\n      if (!fade && !carousel) {                                                                                        // 763\n        if (slider.currentSlide === 0 && slider.animatingTo === slider.last && slider.vars.animationLoop) {            // 764\n          slider.setProps(dimension, \"jumpEnd\");                                                                       // 765\n        } else if (slider.currentSlide === slider.last && slider.animatingTo === 0 && slider.vars.animationLoop) {     // 766\n          slider.setProps(dimension, \"jumpStart\");                                                                     // 767\n        }                                                                                                              // 768\n      }                                                                                                                // 769\n      slider.animating = false;                                                                                        // 770\n      slider.currentSlide = slider.animatingTo;                                                                        // 771\n      // API: after() animation Callback                                                                               // 772\n      slider.vars.after(slider);                                                                                       // 773\n    };                                                                                                                 // 774\n                                                                                                                       // 775\n    // SLIDESHOW:                                                                                                      // 776\n    slider.animateSlides = function() {                                                                                // 777\n      if (!slider.animating && focused ) slider.flexAnimate(slider.getTarget(\"next\"));                                 // 778\n    };                                                                                                                 // 779\n    // SLIDESHOW:                                                                                                      // 780\n    slider.pause = function() {                                                                                        // 781\n      clearInterval(slider.animatedSlides);                                                                            // 782\n      slider.animatedSlides = null;                                                                                    // 783\n      slider.playing = false;                                                                                          // 784\n      // PAUSEPLAY:                                                                                                    // 785\n      if (slider.vars.pausePlay) methods.pausePlay.update(\"play\");                                                     // 786\n      // SYNC:                                                                                                         // 787\n      if (slider.syncExists) methods.sync(\"pause\");                                                                    // 788\n    };                                                                                                                 // 789\n    // SLIDESHOW:                                                                                                      // 790\n    slider.play = function() {                                                                                         // 791\n      if (slider.playing) clearInterval(slider.animatedSlides);                                                        // 792\n      slider.animatedSlides = slider.animatedSlides || setInterval(slider.animateSlides, slider.vars.slideshowSpeed);  // 793\n      slider.started = slider.playing = true;                                                                          // 794\n      // PAUSEPLAY:                                                                                                    // 795\n      if (slider.vars.pausePlay) methods.pausePlay.update(\"pause\");                                                    // 796\n      // SYNC:                                                                                                         // 797\n      if (slider.syncExists) methods.sync(\"play\");                                                                     // 798\n    };                                                                                                                 // 799\n    // STOP:                                                                                                           // 800\n    slider.stop = function () {                                                                                        // 801\n      slider.pause();                                                                                                  // 802\n      slider.stopped = true;                                                                                           // 803\n    };                                                                                                                 // 804\n    slider.canAdvance = function(target, fromNav) {                                                                    // 805\n      // ASNAV:                                                                                                        // 806\n      var last = (asNav) ? slider.pagingCount - 1 : slider.last;                                                       // 807\n      return (fromNav) ? true :                                                                                        // 808\n             (asNav && slider.currentItem === slider.count - 1 && target === 0 && slider.direction === \"prev\") ? true :\n             (asNav && slider.currentItem === 0 && target === slider.pagingCount - 1 && slider.direction !== \"next\") ? false :\n             (target === slider.currentSlide && !asNav) ? false :                                                      // 811\n             (slider.vars.animationLoop) ? true :                                                                      // 812\n             (slider.atEnd && slider.currentSlide === 0 && target === last && slider.direction !== \"next\") ? false :   // 813\n             (slider.atEnd && slider.currentSlide === last && target === 0 && slider.direction === \"next\") ? false :   // 814\n             true;                                                                                                     // 815\n    };                                                                                                                 // 816\n    slider.getTarget = function(dir) {                                                                                 // 817\n      slider.direction = dir;                                                                                          // 818\n      if (dir === \"next\") {                                                                                            // 819\n        return (slider.currentSlide === slider.last) ? 0 : slider.currentSlide + 1;                                    // 820\n      } else {                                                                                                         // 821\n        return (slider.currentSlide === 0) ? slider.last : slider.currentSlide - 1;                                    // 822\n      }                                                                                                                // 823\n    };                                                                                                                 // 824\n                                                                                                                       // 825\n    // SLIDE:                                                                                                          // 826\n    slider.setProps = function(pos, special, dur) {                                                                    // 827\n      var target = (function() {                                                                                       // 828\n        var posCheck = (pos) ? pos : ((slider.itemW + slider.vars.itemMargin) * slider.move) * slider.animatingTo,     // 829\n            posCalc = (function() {                                                                                    // 830\n              if (carousel) {                                                                                          // 831\n                return (special === \"setTouch\") ? pos :                                                                // 832\n                       (reverse && slider.animatingTo === slider.last) ? 0 :                                           // 833\n                       (reverse) ? slider.limit - (((slider.itemW + slider.vars.itemMargin) * slider.move) * slider.animatingTo) :\n                       (slider.animatingTo === slider.last) ? slider.limit : posCheck;                                 // 835\n              } else {                                                                                                 // 836\n                switch (special) {                                                                                     // 837\n                  case \"setTotal\": return (reverse) ? ((slider.count - 1) - slider.currentSlide + slider.cloneOffset) * pos : (slider.currentSlide + slider.cloneOffset) * pos;\n                  case \"setTouch\": return (reverse) ? pos : pos;                                                       // 839\n                  case \"jumpEnd\": return (reverse) ? pos : slider.count * pos;                                         // 840\n                  case \"jumpStart\": return (reverse) ? slider.count * pos : pos;                                       // 841\n                  default: return pos;                                                                                 // 842\n                }                                                                                                      // 843\n              }                                                                                                        // 844\n            }());                                                                                                      // 845\n                                                                                                                       // 846\n            return (posCalc * -1) + \"px\";                                                                              // 847\n          }());                                                                                                        // 848\n                                                                                                                       // 849\n      if (slider.transitions) {                                                                                        // 850\n        target = (vertical) ? \"translate3d(0,\" + target + \",0)\" : \"translate3d(\" + target + \",0,0)\";                   // 851\n        dur = (dur !== undefined) ? (dur/1000) + \"s\" : \"0s\";                                                           // 852\n        slider.container.css(\"-\" + slider.pfx + \"-transition-duration\", dur);                                          // 853\n         slider.container.css(\"transition-duration\", dur);                                                             // 854\n      }                                                                                                                // 855\n                                                                                                                       // 856\n      slider.args[slider.prop] = target;                                                                               // 857\n      if (slider.transitions || dur === undefined) slider.container.css(slider.args);                                  // 858\n                                                                                                                       // 859\n      slider.container.css('transform',target);                                                                        // 860\n    };                                                                                                                 // 861\n                                                                                                                       // 862\n    slider.setup = function(type) {                                                                                    // 863\n      // SLIDE:                                                                                                        // 864\n      if (!fade) {                                                                                                     // 865\n        var sliderOffset, arr;                                                                                         // 866\n                                                                                                                       // 867\n        if (type === \"init\") {                                                                                         // 868\n          slider.viewport = $('<div class=\"' + namespace + 'viewport\"></div>').css({\"overflow\": \"hidden\", \"position\": \"relative\"}).appendTo(slider).append(slider.container);\n          // INFINITE LOOP:                                                                                            // 870\n          slider.cloneCount = 0;                                                                                       // 871\n          slider.cloneOffset = 0;                                                                                      // 872\n          // REVERSE:                                                                                                  // 873\n          if (reverse) {                                                                                               // 874\n            arr = $.makeArray(slider.slides).reverse();                                                                // 875\n            slider.slides = $(arr);                                                                                    // 876\n            slider.container.empty().append(slider.slides);                                                            // 877\n          }                                                                                                            // 878\n        }                                                                                                              // 879\n        // INFINITE LOOP && !CAROUSEL:                                                                                 // 880\n        if (slider.vars.animationLoop && !carousel) {                                                                  // 881\n          slider.cloneCount = 2;                                                                                       // 882\n          slider.cloneOffset = 1;                                                                                      // 883\n          // clear out old clones                                                                                      // 884\n          if (type !== \"init\") slider.container.find('.clone').remove();                                               // 885\n          slider.container.append(methods.uniqueID(slider.slides.first().clone().addClass('clone')).attr('aria-hidden', 'true'))\n                          .prepend(methods.uniqueID(slider.slides.last().clone().addClass('clone')).attr('aria-hidden', 'true'));\n        }                                                                                                              // 888\n        slider.newSlides = $(slider.vars.selector, slider);                                                            // 889\n                                                                                                                       // 890\n        sliderOffset = (reverse) ? slider.count - 1 - slider.currentSlide + slider.cloneOffset : slider.currentSlide + slider.cloneOffset;\n        // VERTICAL:                                                                                                   // 892\n        if (vertical && !carousel) {                                                                                   // 893\n          slider.container.height((slider.count + slider.cloneCount) * 200 + \"%\").css(\"position\", \"absolute\").width(\"100%\");\n          setTimeout(function(){                                                                                       // 895\n            slider.newSlides.css({\"display\": \"block\"});                                                                // 896\n            slider.doMath();                                                                                           // 897\n            slider.viewport.height(slider.h);                                                                          // 898\n            slider.setProps(sliderOffset * slider.h, \"init\");                                                          // 899\n          }, (type === \"init\") ? 100 : 0);                                                                             // 900\n        } else {                                                                                                       // 901\n          slider.container.width((slider.count + slider.cloneCount) * 200 + \"%\");                                      // 902\n          slider.setProps(sliderOffset * slider.computedW, \"init\");                                                    // 903\n          setTimeout(function(){                                                                                       // 904\n            slider.doMath();                                                                                           // 905\n            slider.newSlides.css({\"width\": slider.computedW, \"float\": \"left\", \"display\": \"block\"});                    // 906\n            // SMOOTH HEIGHT:                                                                                          // 907\n            if (slider.vars.smoothHeight) methods.smoothHeight();                                                      // 908\n          }, (type === \"init\") ? 100 : 0);                                                                             // 909\n        }                                                                                                              // 910\n      } else { // FADE:                                                                                                // 911\n        slider.slides.css({\"width\": \"100%\", \"float\": \"left\", \"marginRight\": \"-100%\", \"position\": \"relative\"});         // 912\n        if (type === \"init\") {                                                                                         // 913\n          if (!touch) {                                                                                                // 914\n            //slider.slides.eq(slider.currentSlide).fadeIn(slider.vars.animationSpeed, slider.vars.easing);            // 915\n            if (slider.vars.fadeFirstSlide == false) {                                                                 // 916\n              slider.slides.css({ \"opacity\": 0, \"display\": \"block\", \"zIndex\": 1 }).eq(slider.currentSlide).css({\"zIndex\": 2}).css({\"opacity\": 1});\n            } else {                                                                                                   // 918\n              slider.slides.css({ \"opacity\": 0, \"display\": \"block\", \"zIndex\": 1 }).eq(slider.currentSlide).css({\"zIndex\": 2}).animate({\"opacity\": 1},slider.vars.animationSpeed,slider.vars.easing);\n            }                                                                                                          // 920\n          } else {                                                                                                     // 921\n            slider.slides.css({ \"opacity\": 0, \"display\": \"block\", \"webkitTransition\": \"opacity \" + slider.vars.animationSpeed / 1000 + \"s ease\", \"zIndex\": 1 }).eq(slider.currentSlide).css({ \"opacity\": 1, \"zIndex\": 2});\n          }                                                                                                            // 923\n        }                                                                                                              // 924\n        // SMOOTH HEIGHT:                                                                                              // 925\n        if (slider.vars.smoothHeight) methods.smoothHeight();                                                          // 926\n      }                                                                                                                // 927\n      // !CAROUSEL:                                                                                                    // 928\n      // CANDIDATE: active slide                                                                                       // 929\n      if (!carousel) slider.slides.removeClass(namespace + \"active-slide\").eq(slider.currentSlide).addClass(namespace + \"active-slide\");\n                                                                                                                       // 931\n      //FlexSlider: init() Callback                                                                                    // 932\n      slider.vars.init(slider);                                                                                        // 933\n    };                                                                                                                 // 934\n                                                                                                                       // 935\n    slider.doMath = function() {                                                                                       // 936\n      var slide = slider.slides.first(),                                                                               // 937\n          slideMargin = slider.vars.itemMargin,                                                                        // 938\n          minItems = slider.vars.minItems,                                                                             // 939\n          maxItems = slider.vars.maxItems;                                                                             // 940\n                                                                                                                       // 941\n      slider.w = (slider.viewport===undefined) ? slider.width() : slider.viewport.width();                             // 942\n      slider.h = slide.height();                                                                                       // 943\n      slider.boxPadding = slide.outerWidth() - slide.width();                                                          // 944\n                                                                                                                       // 945\n      // CAROUSEL:                                                                                                     // 946\n      if (carousel) {                                                                                                  // 947\n        slider.itemT = slider.vars.itemWidth + slideMargin;                                                            // 948\n        slider.minW = (minItems) ? minItems * slider.itemT : slider.w;                                                 // 949\n        slider.maxW = (maxItems) ? (maxItems * slider.itemT) - slideMargin : slider.w;                                 // 950\n        slider.itemW = (slider.minW > slider.w) ? (slider.w - (slideMargin * (minItems - 1)))/minItems :               // 951\n                       (slider.maxW < slider.w) ? (slider.w - (slideMargin * (maxItems - 1)))/maxItems :               // 952\n                       (slider.vars.itemWidth > slider.w) ? slider.w : slider.vars.itemWidth;                          // 953\n                                                                                                                       // 954\n        slider.visible = Math.floor(slider.w/(slider.itemW));                                                          // 955\n        slider.move = (slider.vars.move > 0 && slider.vars.move < slider.visible ) ? slider.vars.move : slider.visible;\n        slider.pagingCount = Math.ceil(((slider.count - slider.visible)/slider.move) + 1);                             // 957\n        slider.last =  slider.pagingCount - 1;                                                                         // 958\n        slider.limit = (slider.pagingCount === 1) ? 0 :                                                                // 959\n                       (slider.vars.itemWidth > slider.w) ? (slider.itemW * (slider.count - 1)) + (slideMargin * (slider.count - 1)) : ((slider.itemW + slideMargin) * slider.count) - slider.w - slideMargin;\n      } else {                                                                                                         // 961\n        slider.itemW = slider.w;                                                                                       // 962\n        slider.pagingCount = slider.count;                                                                             // 963\n        slider.last = slider.count - 1;                                                                                // 964\n      }                                                                                                                // 965\n      slider.computedW = slider.itemW - slider.boxPadding;                                                             // 966\n    };                                                                                                                 // 967\n                                                                                                                       // 968\n    slider.update = function(pos, action) {                                                                            // 969\n      slider.doMath();                                                                                                 // 970\n                                                                                                                       // 971\n      // update currentSlide and slider.animatingTo if necessary                                                       // 972\n      if (!carousel) {                                                                                                 // 973\n        if (pos < slider.currentSlide) {                                                                               // 974\n          slider.currentSlide += 1;                                                                                    // 975\n        } else if (pos <= slider.currentSlide && pos !== 0) {                                                          // 976\n          slider.currentSlide -= 1;                                                                                    // 977\n        }                                                                                                              // 978\n        slider.animatingTo = slider.currentSlide;                                                                      // 979\n      }                                                                                                                // 980\n                                                                                                                       // 981\n      // update controlNav                                                                                             // 982\n      if (slider.vars.controlNav && !slider.manualControls) {                                                          // 983\n        if ((action === \"add\" && !carousel) || slider.pagingCount > slider.controlNav.length) {                        // 984\n          methods.controlNav.update(\"add\");                                                                            // 985\n        } else if ((action === \"remove\" && !carousel) || slider.pagingCount < slider.controlNav.length) {              // 986\n          if (carousel && slider.currentSlide > slider.last) {                                                         // 987\n            slider.currentSlide -= 1;                                                                                  // 988\n            slider.animatingTo -= 1;                                                                                   // 989\n          }                                                                                                            // 990\n          methods.controlNav.update(\"remove\", slider.last);                                                            // 991\n        }                                                                                                              // 992\n      }                                                                                                                // 993\n      // update directionNav                                                                                           // 994\n      if (slider.vars.directionNav) methods.directionNav.update();                                                     // 995\n                                                                                                                       // 996\n    };                                                                                                                 // 997\n                                                                                                                       // 998\n    slider.addSlide = function(obj, pos) {                                                                             // 999\n      var $obj = $(obj);                                                                                               // 1000\n                                                                                                                       // 1001\n      slider.count += 1;                                                                                               // 1002\n      slider.last = slider.count - 1;                                                                                  // 1003\n                                                                                                                       // 1004\n      // append new slide                                                                                              // 1005\n      if (vertical && reverse) {                                                                                       // 1006\n        (pos !== undefined) ? slider.slides.eq(slider.count - pos).after($obj) : slider.container.prepend($obj);       // 1007\n      } else {                                                                                                         // 1008\n        (pos !== undefined) ? slider.slides.eq(pos).before($obj) : slider.container.append($obj);                      // 1009\n      }                                                                                                                // 1010\n                                                                                                                       // 1011\n      // update currentSlide, animatingTo, controlNav, and directionNav                                                // 1012\n      slider.update(pos, \"add\");                                                                                       // 1013\n                                                                                                                       // 1014\n      // update slider.slides                                                                                          // 1015\n      slider.slides = $(slider.vars.selector + ':not(.clone)', slider);                                                // 1016\n      // re-setup the slider to accomdate new slide                                                                    // 1017\n      slider.setup();                                                                                                  // 1018\n                                                                                                                       // 1019\n      //FlexSlider: added() Callback                                                                                   // 1020\n      slider.vars.added(slider);                                                                                       // 1021\n    };                                                                                                                 // 1022\n    slider.removeSlide = function(obj) {                                                                               // 1023\n      var pos = (isNaN(obj)) ? slider.slides.index($(obj)) : obj;                                                      // 1024\n                                                                                                                       // 1025\n      // update count                                                                                                  // 1026\n      slider.count -= 1;                                                                                               // 1027\n      slider.last = slider.count - 1;                                                                                  // 1028\n                                                                                                                       // 1029\n      // remove slide                                                                                                  // 1030\n      if (isNaN(obj)) {                                                                                                // 1031\n        $(obj, slider.slides).remove();                                                                                // 1032\n      } else {                                                                                                         // 1033\n        (vertical && reverse) ? slider.slides.eq(slider.last).remove() : slider.slides.eq(obj).remove();               // 1034\n      }                                                                                                                // 1035\n                                                                                                                       // 1036\n      // update currentSlide, animatingTo, controlNav, and directionNav                                                // 1037\n      slider.doMath();                                                                                                 // 1038\n      slider.update(pos, \"remove\");                                                                                    // 1039\n                                                                                                                       // 1040\n      // update slider.slides                                                                                          // 1041\n      slider.slides = $(slider.vars.selector + ':not(.clone)', slider);                                                // 1042\n      // re-setup the slider to accomdate new slide                                                                    // 1043\n      slider.setup();                                                                                                  // 1044\n                                                                                                                       // 1045\n      // FlexSlider: removed() Callback                                                                                // 1046\n      slider.vars.removed(slider);                                                                                     // 1047\n    };                                                                                                                 // 1048\n                                                                                                                       // 1049\n    //FlexSlider: Initialize                                                                                           // 1050\n    methods.init();                                                                                                    // 1051\n  };                                                                                                                   // 1052\n                                                                                                                       // 1053\n  // Ensure the slider isn't focussed if the window loses focus.                                                       // 1054\n  $( window ).blur( function ( e ) {                                                                                   // 1055\n    focused = false;                                                                                                   // 1056\n  }).focus( function ( e ) {                                                                                           // 1057\n    focused = true;                                                                                                    // 1058\n  });                                                                                                                  // 1059\n                                                                                                                       // 1060\n  //FlexSlider: Default Settings                                                                                       // 1061\n  $.flexslider.defaults = {                                                                                            // 1062\n    namespace: \"flex-\",             //{NEW} String: Prefix string attached to the class of every element generated by the plugin\n    selector: \".slides > li\",       //{NEW} Selector: Must match a simple pattern. '{container} > {slide}' -- Ignore pattern at your own peril\n    animation: \"fade\",              //String: Select your animation type, \"fade\" or \"slide\"                            // 1065\n    easing: \"swing\",                //{NEW} String: Determines the easing method used in jQuery transitions. jQuery easing plugin is supported!\n    direction: \"horizontal\",        //String: Select the sliding direction, \"horizontal\" or \"vertical\"                 // 1067\n    reverse: false,                 //{NEW} Boolean: Reverse the animation direction                                   // 1068\n    animationLoop: true,            //Boolean: Should the animation loop? If false, directionNav will received \"disable\" classes at either end\n    smoothHeight: false,            //{NEW} Boolean: Allow height of the slider to animate smoothly in horizontal mode // 1070\n    startAt: 0,                     //Integer: The slide that the slider should start on. Array notation (0 = first slide)\n    slideshow: true,                //Boolean: Animate slider automatically                                            // 1072\n    slideshowSpeed: 7000,           //Integer: Set the speed of the slideshow cycling, in milliseconds                 // 1073\n    animationSpeed: 600,            //Integer: Set the speed of animations, in milliseconds                            // 1074\n    initDelay: 0,                   //{NEW} Integer: Set an initialization delay, in milliseconds                      // 1075\n    randomize: false,               //Boolean: Randomize slide order                                                   // 1076\n    fadeFirstSlide: true,           //Boolean: Fade in the first slide when animation type is \"fade\"                   // 1077\n    thumbCaptions: false,           //Boolean: Whether or not to put captions on thumbnails when using the \"thumbnails\" controlNav.\n                                                                                                                       // 1079\n    // Usability features                                                                                              // 1080\n    pauseOnAction: true,            //Boolean: Pause the slideshow when interacting with control elements, highly recommended.\n    pauseOnHover: false,            //Boolean: Pause the slideshow when hovering over slider, then resume when no longer hovering\n    pauseInvisible: true,   \t\t//{NEW} Boolean: Pause the slideshow when tab is invisible, resume when visible. Provides better UX, lower CPU usage.\n    useCSS: true,                   //{NEW} Boolean: Slider will use CSS3 transitions if available                     // 1084\n    touch: true,                    //{NEW} Boolean: Allow touch swipe navigation of the slider on touch-enabled devices\n    video: false,                   //{NEW} Boolean: If using video in the slider, will prevent CSS3 3D Transforms to avoid graphical glitches\n                                                                                                                       // 1087\n    // Primary Controls                                                                                                // 1088\n    controlNav: true,               //Boolean: Create navigation for paging control of each slide? Note: Leave true for manualControls usage\n    directionNav: true,             //Boolean: Create navigation for previous/next navigation? (true/false)            // 1090\n    prevText: \"Previous\",           //String: Set the text for the \"previous\" directionNav item                        // 1091\n    nextText: \"Next\",               //String: Set the text for the \"next\" directionNav item                            // 1092\n                                                                                                                       // 1093\n    // Secondary Navigation                                                                                            // 1094\n    keyboard: true,                 //Boolean: Allow slider navigating via keyboard left/right keys                    // 1095\n    multipleKeyboard: false,        //{NEW} Boolean: Allow keyboard navigation to affect multiple sliders. Default behavior cuts out keyboard navigation with more than one slider present.\n    mousewheel: false,              //{UPDATED} Boolean: Requires jquery.mousewheel.js (https://github.com/brandonaaron/jquery-mousewheel) - Allows slider navigating via mousewheel\n    pausePlay: false,               //Boolean: Create pause/play dynamic element                                       // 1098\n    pauseText: \"Pause\",             //String: Set the text for the \"pause\" pausePlay item                              // 1099\n    playText: \"Play\",               //String: Set the text for the \"play\" pausePlay item                               // 1100\n                                                                                                                       // 1101\n    // Special properties                                                                                              // 1102\n    controlsContainer: \"\",          //{UPDATED} jQuery Object/Selector: Declare which container the navigation elements should be appended too. Default container is the FlexSlider element. Example use would be $(\".flexslider-container\"). Property is ignored if given element is not found.\n    manualControls: \"\",             //{UPDATED} jQuery Object/Selector: Declare custom control navigation. Examples would be $(\".flex-control-nav li\") or \"#tabs-nav li img\", etc. The number of elements in your controlNav should match the number of slides/tabs.\n    sync: \"\",                       //{NEW} Selector: Mirror the actions performed on this slider with another slider. Use with care.\n    asNavFor: \"\",                   //{NEW} Selector: Internal property exposed for turning the slider into a thumbnail navigation for another slider\n                                                                                                                       // 1107\n    // Carousel Options                                                                                                // 1108\n    itemWidth: 0,                   //{NEW} Integer: Box-model width of individual carousel items, including horizontal borders and padding.\n    itemMargin: 0,                  //{NEW} Integer: Margin between carousel items.                                    // 1110\n    minItems: 1,                    //{NEW} Integer: Minimum number of carousel items that should be visible. Items will resize fluidly when below this.\n    maxItems: 0,                    //{NEW} Integer: Maxmimum number of carousel items that should be visible. Items will resize fluidly when above this limit.\n    move: 0,                        //{NEW} Integer: Number of carousel items that should move on animation. If 0, slider will move all visible items.\n    allowOneSlide: true,           //{NEW} Boolean: Whether or not to allow a slider comprised of a single slide       // 1114\n                                                                                                                       // 1115\n    // Callback API                                                                                                    // 1116\n    start: function(){},            //Callback: function(slider) - Fires when the slider loads the first slide         // 1117\n    before: function(){},           //Callback: function(slider) - Fires asynchronously with each slider animation     // 1118\n    after: function(){},            //Callback: function(slider) - Fires after each slider animation completes         // 1119\n    end: function(){},              //Callback: function(slider) - Fires when the slider reaches the last slide (asynchronous)\n    added: function(){},            //{NEW} Callback: function(slider) - Fires after a slide is added                  // 1121\n    removed: function(){},           //{NEW} Callback: function(slider) - Fires after a slide is removed               // 1122\n    init: function() {}             //{NEW} Callback: function(slider) - Fires after the slider is initially setup     // 1123\n  };                                                                                                                   // 1124\n                                                                                                                       // 1125\n  //FlexSlider: Plugin Function                                                                                        // 1126\n  $.fn.flexslider = function(options) {                                                                                // 1127\n    if (options === undefined) options = {};                                                                           // 1128\n                                                                                                                       // 1129\n    if (typeof options === \"object\") {                                                                                 // 1130\n      return this.each(function() {                                                                                    // 1131\n        var $this = $(this),                                                                                           // 1132\n            selector = (options.selector) ? options.selector : \".slides > li\",                                         // 1133\n            $slides = $this.find(selector);                                                                            // 1134\n                                                                                                                       // 1135\n      if ( ( $slides.length === 1 && options.allowOneSlide === true ) || $slides.length === 0 ) {                      // 1136\n          $slides.fadeIn(400);                                                                                         // 1137\n          if (options.start) options.start($this);                                                                     // 1138\n        } else if ($this.data('flexslider') === undefined) {                                                           // 1139\n          new $.flexslider(this, options);                                                                             // 1140\n        }                                                                                                              // 1141\n      });                                                                                                              // 1142\n    } else {                                                                                                           // 1143\n      // Helper strings to quickly perform functions on the slider                                                     // 1144\n      var $slider = $(this).data('flexslider');                                                                        // 1145\n      switch (options) {                                                                                               // 1146\n        case \"play\": $slider.play(); break;                                                                            // 1147\n        case \"pause\": $slider.pause(); break;                                                                          // 1148\n        case \"stop\": $slider.stop(); break;                                                                            // 1149\n        case \"next\": $slider.flexAnimate($slider.getTarget(\"next\"), true); break;                                      // 1150\n        case \"prev\":                                                                                                   // 1151\n        case \"previous\": $slider.flexAnimate($slider.getTarget(\"prev\"), true); break;                                  // 1152\n        default: if (typeof options === \"number\") $slider.flexAnimate(options, true);                                  // 1153\n      }                                                                                                                // 1154\n    }                                                                                                                  // 1155\n  };                                                                                                                   // 1156\n})(jQuery);                                                                                                            // 1157\n                                                                                                                       // 1158\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                     // 1168\n}).call(this);                                                       // 1169\n                                                                     // 1170\n///////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['johannesma:meteor-flexslider'] = {};\n\n})();\n","servePath":"/packages/johannesma_meteor-flexslider.js","sourceMap":{"version":3,"sources":["/packages/johannesma_meteor-flexslider/packages/johannesma_meteor-flexslider.js"],"names":[],"mappingsfile":"/packages/johannesma_meteor-flexslider.js","sourcesContent":["(function () {\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/johannesma:meteor-flexslider/jquery.flexslider.js                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/*                                                                                                                     // 1\n * jQuery FlexSlider v2.2.2                                                                                            // 2\n * Copyright 2012 WooThemes                                                                                            // 3\n * Contributing Author: Tyler Smith                                                                                    // 4\n */                                                                                                                    // 5\n;                                                                                                                      // 6\n(function ($) {                                                                                                        // 7\n                                                                                                                       // 8\n  //FlexSlider: Object Instance                                                                                        // 9\n  $.flexslider = function(el, options) {                                                                               // 10\n    var slider = $(el);                                                                                                // 11\n                                                                                                                       // 12\n    // making variables public                                                                                         // 13\n    slider.vars = $.extend({}, $.flexslider.defaults, options);                                                        // 14\n                                                                                                                       // 15\n    var namespace = slider.vars.namespace,                                                                             // 16\n        msGesture = window.navigator && window.navigator.msPointerEnabled && window.MSGesture,                         // 17\n        touch = (( \"ontouchstart\" in window ) || msGesture || window.DocumentTouch && document instanceof DocumentTouch) && slider.vars.touch,\n        // depricating this idea, as devices are being released with both of these events                              // 19\n        //eventType = (touch) ? \"touchend\" : \"click\",                                                                  // 20\n        eventType = \"click touchend MSPointerUp keyup\",                                                                // 21\n        watchedEvent = \"\",                                                                                             // 22\n        watchedEventClearTimer,                                                                                        // 23\n        vertical = slider.vars.direction === \"vertical\",                                                               // 24\n        reverse = slider.vars.reverse,                                                                                 // 25\n        carousel = (slider.vars.itemWidth > 0),                                                                        // 26\n        fade = slider.vars.animation === \"fade\",                                                                       // 27\n        asNav = slider.vars.asNavFor !== \"\",                                                                           // 28\n        methods = {},                                                                                                  // 29\n        focused = true;                                                                                                // 30\n                                                                                                                       // 31\n    // Store a reference to the slider object                                                                          // 32\n    $.data(el, \"flexslider\", slider);                                                                                  // 33\n                                                                                                                       // 34\n    // Private slider methods                                                                                          // 35\n    methods = {                                                                                                        // 36\n      init: function() {                                                                                               // 37\n        slider.animating = false;                                                                                      // 38\n        // Get current slide and make sure it is a number                                                              // 39\n        slider.currentSlide = parseInt( ( slider.vars.startAt ? slider.vars.startAt : 0), 10 );                        // 40\n        if ( isNaN( slider.currentSlide ) ) slider.currentSlide = 0;                                                   // 41\n        slider.animatingTo = slider.currentSlide;                                                                      // 42\n        slider.atEnd = (slider.currentSlide === 0 || slider.currentSlide === slider.last);                             // 43\n        slider.containerSelector = slider.vars.selector.substr(0,slider.vars.selector.search(' '));                    // 44\n        slider.slides = $(slider.vars.selector, slider);                                                               // 45\n        slider.container = $(slider.containerSelector, slider);                                                        // 46\n        slider.count = slider.slides.length;                                                                           // 47\n        // SYNC:                                                                                                       // 48\n        slider.syncExists = $(slider.vars.sync).length > 0;                                                            // 49\n        // SLIDE:                                                                                                      // 50\n        if (slider.vars.animation === \"slide\") slider.vars.animation = \"swing\";                                        // 51\n        slider.prop = (vertical) ? \"top\" : \"marginLeft\";                                                               // 52\n        slider.args = {};                                                                                              // 53\n        // SLIDESHOW:                                                                                                  // 54\n        slider.manualPause = false;                                                                                    // 55\n        slider.stopped = false;                                                                                        // 56\n        //PAUSE WHEN INVISIBLE                                                                                         // 57\n        slider.started = false;                                                                                        // 58\n        slider.startTimeout = null;                                                                                    // 59\n        // TOUCH/USECSS:                                                                                               // 60\n        slider.transitions = !slider.vars.video && !fade && slider.vars.useCSS && (function() {                        // 61\n          var obj = document.createElement('div'),                                                                     // 62\n              props = ['perspectiveProperty', 'WebkitPerspective', 'MozPerspective', 'OPerspective', 'msPerspective']; // 63\n          for (var i in props) {                                                                                       // 64\n            if ( obj.style[ props[i] ] !== undefined ) {                                                               // 65\n              slider.pfx = props[i].replace('Perspective','').toLowerCase();                                           // 66\n              slider.prop = \"-\" + slider.pfx + \"-transform\";                                                           // 67\n              return true;                                                                                             // 68\n            }                                                                                                          // 69\n          }                                                                                                            // 70\n          return false;                                                                                                // 71\n        }());                                                                                                          // 72\n        slider.ensureAnimationEnd = '';                                                                                // 73\n        // CONTROLSCONTAINER:                                                                                          // 74\n        if (slider.vars.controlsContainer !== \"\") slider.controlsContainer = $(slider.vars.controlsContainer).length > 0 && $(slider.vars.controlsContainer);\n        // MANUAL:                                                                                                     // 76\n        if (slider.vars.manualControls !== \"\") slider.manualControls = $(slider.vars.manualControls).length > 0 && $(slider.vars.manualControls);\n                                                                                                                       // 78\n        // RANDOMIZE:                                                                                                  // 79\n        if (slider.vars.randomize) {                                                                                   // 80\n          slider.slides.sort(function() { return (Math.round(Math.random())-0.5); });                                  // 81\n          slider.container.empty().append(slider.slides);                                                              // 82\n        }                                                                                                              // 83\n                                                                                                                       // 84\n        slider.doMath();                                                                                               // 85\n                                                                                                                       // 86\n        // INIT                                                                                                        // 87\n        slider.setup(\"init\");                                                                                          // 88\n                                                                                                                       // 89\n        // CONTROLNAV:                                                                                                 // 90\n        if (slider.vars.controlNav) methods.controlNav.setup();                                                        // 91\n                                                                                                                       // 92\n        // DIRECTIONNAV:                                                                                               // 93\n        if (slider.vars.directionNav) methods.directionNav.setup();                                                    // 94\n                                                                                                                       // 95\n        // KEYBOARD:                                                                                                   // 96\n        if (slider.vars.keyboard && ($(slider.containerSelector).length === 1 || slider.vars.multipleKeyboard)) {      // 97\n          $(document).bind('keyup', function(event) {                                                                  // 98\n            var keycode = event.keyCode;                                                                               // 99\n            if (!slider.animating && (keycode === 39 || keycode === 37)) {                                             // 100\n              var target = (keycode === 39) ? slider.getTarget('next') :                                               // 101\n                           (keycode === 37) ? slider.getTarget('prev') : false;                                        // 102\n              slider.flexAnimate(target, slider.vars.pauseOnAction);                                                   // 103\n            }                                                                                                          // 104\n          });                                                                                                          // 105\n        }                                                                                                              // 106\n        // MOUSEWHEEL:                                                                                                 // 107\n        if (slider.vars.mousewheel) {                                                                                  // 108\n          slider.bind('mousewheel', function(event, delta, deltaX, deltaY) {                                           // 109\n            event.preventDefault();                                                                                    // 110\n            var target = (delta < 0) ? slider.getTarget('next') : slider.getTarget('prev');                            // 111\n            slider.flexAnimate(target, slider.vars.pauseOnAction);                                                     // 112\n          });                                                                                                          // 113\n        }                                                                                                              // 114\n                                                                                                                       // 115\n        // PAUSEPLAY                                                                                                   // 116\n        if (slider.vars.pausePlay) methods.pausePlay.setup();                                                          // 117\n                                                                                                                       // 118\n        //PAUSE WHEN INVISIBLE                                                                                         // 119\n        if (slider.vars.slideshow && slider.vars.pauseInvisible) methods.pauseInvisible.init();                        // 120\n                                                                                                                       // 121\n        // SLIDSESHOW                                                                                                  // 122\n        if (slider.vars.slideshow) {                                                                                   // 123\n          if (slider.vars.pauseOnHover) {                                                                              // 124\n            slider.hover(function() {                                                                                  // 125\n              if (!slider.manualPlay && !slider.manualPause) slider.pause();                                           // 126\n            }, function() {                                                                                            // 127\n              if (!slider.manualPause && !slider.manualPlay && !slider.stopped) slider.play();                         // 128\n            });                                                                                                        // 129\n          }                                                                                                            // 130\n          // initialize animation                                                                                      // 131\n          //If we're visible, or we don't use PageVisibility API                                                       // 132\n          if(!slider.vars.pauseInvisible || !methods.pauseInvisible.isHidden()) {                                      // 133\n            (slider.vars.initDelay > 0) ? slider.startTimeout = setTimeout(slider.play, slider.vars.initDelay) : slider.play();\n          }                                                                                                            // 135\n        }                                                                                                              // 136\n                                                                                                                       // 137\n        // ASNAV:                                                                                                      // 138\n        if (asNav) methods.asNav.setup();                                                                              // 139\n                                                                                                                       // 140\n        // TOUCH                                                                                                       // 141\n        if (touch && slider.vars.touch) methods.touch();                                                               // 142\n                                                                                                                       // 143\n        // FADE&&SMOOTHHEIGHT || SLIDE:                                                                                // 144\n        if (!fade || (fade && slider.vars.smoothHeight)) $(window).bind(\"resize orientationchange focus\", methods.resize);\n                                                                                                                       // 146\n        slider.find(\"img\").attr(\"draggable\", \"false\");                                                                 // 147\n                                                                                                                       // 148\n        // API: start() Callback                                                                                       // 149\n        setTimeout(function(){                                                                                         // 150\n          slider.vars.start(slider);                                                                                   // 151\n        }, 200);                                                                                                       // 152\n      },                                                                                                               // 153\n      asNav: {                                                                                                         // 154\n        setup: function() {                                                                                            // 155\n          slider.asNav = true;                                                                                         // 156\n          slider.animatingTo = Math.floor(slider.currentSlide/slider.move);                                            // 157\n          slider.currentItem = slider.currentSlide;                                                                    // 158\n          slider.slides.removeClass(namespace + \"active-slide\").eq(slider.currentItem).addClass(namespace + \"active-slide\");\n          if(!msGesture){                                                                                              // 160\n              slider.slides.on(eventType, function(e){                                                                 // 161\n                e.preventDefault();                                                                                    // 162\n                var $slide = $(this),                                                                                  // 163\n                    target = $slide.index();                                                                           // 164\n                var posFromLeft = $slide.offset().left - $(slider).scrollLeft(); // Find position of slide relative to left of slider container\n                if( posFromLeft <= 0 && $slide.hasClass( namespace + 'active-slide' ) ) {                              // 166\n                  slider.flexAnimate(slider.getTarget(\"prev\"), true);                                                  // 167\n                } else if (!$(slider.vars.asNavFor).data('flexslider').animating && !$slide.hasClass(namespace + \"active-slide\")) {\n                  slider.direction = (slider.currentItem < target) ? \"next\" : \"prev\";                                  // 169\n                  slider.flexAnimate(target, slider.vars.pauseOnAction, false, true, true);                            // 170\n                }                                                                                                      // 171\n              });                                                                                                      // 172\n          }else{                                                                                                       // 173\n              el._slider = slider;                                                                                     // 174\n              slider.slides.each(function (){                                                                          // 175\n                  var that = this;                                                                                     // 176\n                  that._gesture = new MSGesture();                                                                     // 177\n                  that._gesture.target = that;                                                                         // 178\n                  that.addEventListener(\"MSPointerDown\", function (e){                                                 // 179\n                      e.preventDefault();                                                                              // 180\n                      if(e.currentTarget._gesture)                                                                     // 181\n                          e.currentTarget._gesture.addPointer(e.pointerId);                                            // 182\n                  }, false);                                                                                           // 183\n                  that.addEventListener(\"MSGestureTap\", function (e){                                                  // 184\n                      e.preventDefault();                                                                              // 185\n                      var $slide = $(this),                                                                            // 186\n                          target = $slide.index();                                                                     // 187\n                      if (!$(slider.vars.asNavFor).data('flexslider').animating && !$slide.hasClass('active')) {       // 188\n                          slider.direction = (slider.currentItem < target) ? \"next\" : \"prev\";                          // 189\n                          slider.flexAnimate(target, slider.vars.pauseOnAction, false, true, true);                    // 190\n                      }                                                                                                // 191\n                  });                                                                                                  // 192\n              });                                                                                                      // 193\n          }                                                                                                            // 194\n        }                                                                                                              // 195\n      },                                                                                                               // 196\n      controlNav: {                                                                                                    // 197\n        setup: function() {                                                                                            // 198\n          if (!slider.manualControls) {                                                                                // 199\n            methods.controlNav.setupPaging();                                                                          // 200\n          } else { // MANUALCONTROLS:                                                                                  // 201\n            methods.controlNav.setupManual();                                                                          // 202\n          }                                                                                                            // 203\n        },                                                                                                             // 204\n        setupPaging: function() {                                                                                      // 205\n          var type = (slider.vars.controlNav === \"thumbnails\") ? 'control-thumbs' : 'control-paging',                  // 206\n              j = 1,                                                                                                   // 207\n              item,                                                                                                    // 208\n              slide;                                                                                                   // 209\n                                                                                                                       // 210\n          slider.controlNavScaffold = $('<ol class=\"'+ namespace + 'control-nav ' + namespace + type + '\"></ol>');     // 211\n                                                                                                                       // 212\n          if (slider.pagingCount > 1) {                                                                                // 213\n            for (var i = 0; i < slider.pagingCount; i++) {                                                             // 214\n              slide = slider.slides.eq(i);                                                                             // 215\n              item = (slider.vars.controlNav === \"thumbnails\") ? '<img src=\"' + slide.attr( 'data-thumb' ) + '\"/>' : '<a>' + j + '</a>';\n              if ( 'thumbnails' === slider.vars.controlNav && true === slider.vars.thumbCaptions ) {                   // 217\n                var captn = slide.attr( 'data-thumbcaption' );                                                         // 218\n                if ( '' != captn && undefined != captn ) item += '<span class=\"' + namespace + 'caption\">' + captn + '</span>';\n              }                                                                                                        // 220\n              slider.controlNavScaffold.append('<li>' + item + '</li>');                                               // 221\n              j++;                                                                                                     // 222\n            }                                                                                                          // 223\n          }                                                                                                            // 224\n                                                                                                                       // 225\n          // CONTROLSCONTAINER:                                                                                        // 226\n          (slider.controlsContainer) ? $(slider.controlsContainer).append(slider.controlNavScaffold) : slider.append(slider.controlNavScaffold);\n          methods.controlNav.set();                                                                                    // 228\n                                                                                                                       // 229\n          methods.controlNav.active();                                                                                 // 230\n                                                                                                                       // 231\n          slider.controlNavScaffold.delegate('a, img', eventType, function(event) {                                    // 232\n            event.preventDefault();                                                                                    // 233\n                                                                                                                       // 234\n            if (watchedEvent === \"\" || watchedEvent === event.type) {                                                  // 235\n              var $this = $(this),                                                                                     // 236\n                  target = slider.controlNav.index($this);                                                             // 237\n                                                                                                                       // 238\n              if (!$this.hasClass(namespace + 'active')) {                                                             // 239\n                slider.direction = (target > slider.currentSlide) ? \"next\" : \"prev\";                                   // 240\n                slider.flexAnimate(target, slider.vars.pauseOnAction);                                                 // 241\n              }                                                                                                        // 242\n            }                                                                                                          // 243\n                                                                                                                       // 244\n            // setup flags to prevent event duplication                                                                // 245\n            if (watchedEvent === \"\") {                                                                                 // 246\n              watchedEvent = event.type;                                                                               // 247\n            }                                                                                                          // 248\n            methods.setToClearWatchedEvent();                                                                          // 249\n                                                                                                                       // 250\n          });                                                                                                          // 251\n        },                                                                                                             // 252\n        setupManual: function() {                                                                                      // 253\n          slider.controlNav = slider.manualControls;                                                                   // 254\n          methods.controlNav.active();                                                                                 // 255\n                                                                                                                       // 256\n          slider.controlNav.bind(eventType, function(event) {                                                          // 257\n            event.preventDefault();                                                                                    // 258\n                                                                                                                       // 259\n            if (watchedEvent === \"\" || watchedEvent === event.type) {                                                  // 260\n              var $this = $(this),                                                                                     // 261\n                  target = slider.controlNav.index($this);                                                             // 262\n                                                                                                                       // 263\n              if (!$this.hasClass(namespace + 'active')) {                                                             // 264\n                (target > slider.currentSlide) ? slider.direction = \"next\" : slider.direction = \"prev\";                // 265\n                slider.flexAnimate(target, slider.vars.pauseOnAction);                                                 // 266\n              }                                                                                                        // 267\n            }                                                                                                          // 268\n                                                                                                                       // 269\n            // setup flags to prevent event duplication                                                                // 270\n            if (watchedEvent === \"\") {                                                                                 // 271\n              watchedEvent = event.type;                                                                               // 272\n            }                                                                                                          // 273\n            methods.setToClearWatchedEvent();                                                                          // 274\n          });                                                                                                          // 275\n        },                                                                                                             // 276\n        set: function() {                                                                                              // 277\n          var selector = (slider.vars.controlNav === \"thumbnails\") ? 'img' : 'a';                                      // 278\n          slider.controlNav = $('.' + namespace + 'control-nav li ' + selector, (slider.controlsContainer) ? slider.controlsContainer : slider);\n        },                                                                                                             // 280\n        active: function() {                                                                                           // 281\n          slider.controlNav.removeClass(namespace + \"active\").eq(slider.animatingTo).addClass(namespace + \"active\");   // 282\n        },                                                                                                             // 283\n        update: function(action, pos) {                                                                                // 284\n          if (slider.pagingCount > 1 && action === \"add\") {                                                            // 285\n            slider.controlNavScaffold.append($('<li><a>' + slider.count + '</a></li>'));                               // 286\n          } else if (slider.pagingCount === 1) {                                                                       // 287\n            slider.controlNavScaffold.find('li').remove();                                                             // 288\n          } else {                                                                                                     // 289\n            slider.controlNav.eq(pos).closest('li').remove();                                                          // 290\n          }                                                                                                            // 291\n          methods.controlNav.set();                                                                                    // 292\n          (slider.pagingCount > 1 && slider.pagingCount !== slider.controlNav.length) ? slider.update(pos, action) : methods.controlNav.active();\n        }                                                                                                              // 294\n      },                                                                                                               // 295\n      directionNav: {                                                                                                  // 296\n        setup: function() {                                                                                            // 297\n          var directionNavScaffold = $('<ul class=\"' + namespace + 'direction-nav\"><li><a class=\"' + namespace + 'prev\" href=\"#\">' + slider.vars.prevText + '</a></li><li><a class=\"' + namespace + 'next\" href=\"#\">' + slider.vars.nextText + '</a></li></ul>');\n                                                                                                                       // 299\n          // CONTROLSCONTAINER:                                                                                        // 300\n          if (slider.controlsContainer) {                                                                              // 301\n            $(slider.controlsContainer).append(directionNavScaffold);                                                  // 302\n            slider.directionNav = $('.' + namespace + 'direction-nav li a', slider.controlsContainer);                 // 303\n          } else {                                                                                                     // 304\n            slider.append(directionNavScaffold);                                                                       // 305\n            slider.directionNav = $('.' + namespace + 'direction-nav li a', slider);                                   // 306\n          }                                                                                                            // 307\n                                                                                                                       // 308\n          methods.directionNav.update();                                                                               // 309\n                                                                                                                       // 310\n          slider.directionNav.bind(eventType, function(event) {                                                        // 311\n            event.preventDefault();                                                                                    // 312\n            var target;                                                                                                // 313\n                                                                                                                       // 314\n            if (watchedEvent === \"\" || watchedEvent === event.type) {                                                  // 315\n              target = ($(this).hasClass(namespace + 'next')) ? slider.getTarget('next') : slider.getTarget('prev');   // 316\n              slider.flexAnimate(target, slider.vars.pauseOnAction);                                                   // 317\n            }                                                                                                          // 318\n                                                                                                                       // 319\n            // setup flags to prevent event duplication                                                                // 320\n            if (watchedEvent === \"\") {                                                                                 // 321\n              watchedEvent = event.type;                                                                               // 322\n            }                                                                                                          // 323\n            methods.setToClearWatchedEvent();                                                                          // 324\n          });                                                                                                          // 325\n        },                                                                                                             // 326\n        update: function() {                                                                                           // 327\n          var disabledClass = namespace + 'disabled';                                                                  // 328\n          if (slider.pagingCount === 1) {                                                                              // 329\n            slider.directionNav.addClass(disabledClass).attr('tabindex', '-1');                                        // 330\n          } else if (!slider.vars.animationLoop) {                                                                     // 331\n            if (slider.animatingTo === 0) {                                                                            // 332\n              slider.directionNav.removeClass(disabledClass).filter('.' + namespace + \"prev\").addClass(disabledClass).attr('tabindex', '-1');\n            } else if (slider.animatingTo === slider.last) {                                                           // 334\n              slider.directionNav.removeClass(disabledClass).filter('.' + namespace + \"next\").addClass(disabledClass).attr('tabindex', '-1');\n            } else {                                                                                                   // 336\n              slider.directionNav.removeClass(disabledClass).removeAttr('tabindex');                                   // 337\n            }                                                                                                          // 338\n          } else {                                                                                                     // 339\n            slider.directionNav.removeClass(disabledClass).removeAttr('tabindex');                                     // 340\n          }                                                                                                            // 341\n        }                                                                                                              // 342\n      },                                                                                                               // 343\n      pausePlay: {                                                                                                     // 344\n        setup: function() {                                                                                            // 345\n          var pausePlayScaffold = $('<div class=\"' + namespace + 'pauseplay\"><a></a></div>');                          // 346\n                                                                                                                       // 347\n          // CONTROLSCONTAINER:                                                                                        // 348\n          if (slider.controlsContainer) {                                                                              // 349\n            slider.controlsContainer.append(pausePlayScaffold);                                                        // 350\n            slider.pausePlay = $('.' + namespace + 'pauseplay a', slider.controlsContainer);                           // 351\n          } else {                                                                                                     // 352\n            slider.append(pausePlayScaffold);                                                                          // 353\n            slider.pausePlay = $('.' + namespace + 'pauseplay a', slider);                                             // 354\n          }                                                                                                            // 355\n                                                                                                                       // 356\n          methods.pausePlay.update((slider.vars.slideshow) ? namespace + 'pause' : namespace + 'play');                // 357\n                                                                                                                       // 358\n          slider.pausePlay.bind(eventType, function(event) {                                                           // 359\n            event.preventDefault();                                                                                    // 360\n                                                                                                                       // 361\n            if (watchedEvent === \"\" || watchedEvent === event.type) {                                                  // 362\n              if ($(this).hasClass(namespace + 'pause')) {                                                             // 363\n                slider.manualPause = true;                                                                             // 364\n                slider.manualPlay = false;                                                                             // 365\n                slider.pause();                                                                                        // 366\n              } else {                                                                                                 // 367\n                slider.manualPause = false;                                                                            // 368\n                slider.manualPlay = true;                                                                              // 369\n                slider.play();                                                                                         // 370\n              }                                                                                                        // 371\n            }                                                                                                          // 372\n                                                                                                                       // 373\n            // setup flags to prevent event duplication                                                                // 374\n            if (watchedEvent === \"\") {                                                                                 // 375\n              watchedEvent = event.type;                                                                               // 376\n            }                                                                                                          // 377\n            methods.setToClearWatchedEvent();                                                                          // 378\n          });                                                                                                          // 379\n        },                                                                                                             // 380\n        update: function(state) {                                                                                      // 381\n          (state === \"play\") ? slider.pausePlay.removeClass(namespace + 'pause').addClass(namespace + 'play').html(slider.vars.playText) : slider.pausePlay.removeClass(namespace + 'play').addClass(namespace + 'pause').html(slider.vars.pauseText);\n        }                                                                                                              // 383\n      },                                                                                                               // 384\n      touch: function() {                                                                                              // 385\n        var startX,                                                                                                    // 386\n          startY,                                                                                                      // 387\n          offset,                                                                                                      // 388\n          cwidth,                                                                                                      // 389\n          dx,                                                                                                          // 390\n          startT,                                                                                                      // 391\n          scrolling = false,                                                                                           // 392\n          localX = 0,                                                                                                  // 393\n          localY = 0,                                                                                                  // 394\n          accDx = 0;                                                                                                   // 395\n                                                                                                                       // 396\n        if(!msGesture){                                                                                                // 397\n            el.addEventListener('touchstart', onTouchStart, false);                                                    // 398\n                                                                                                                       // 399\n            function onTouchStart(e) {                                                                                 // 400\n              if (slider.animating) {                                                                                  // 401\n                e.preventDefault();                                                                                    // 402\n              } else if ( ( window.navigator.msPointerEnabled ) || e.touches.length === 1 ) {                          // 403\n                slider.pause();                                                                                        // 404\n                // CAROUSEL:                                                                                           // 405\n                cwidth = (vertical) ? slider.h : slider. w;                                                            // 406\n                startT = Number(new Date());                                                                           // 407\n                // CAROUSEL:                                                                                           // 408\n                                                                                                                       // 409\n                // Local vars for X and Y points.                                                                      // 410\n                localX = e.touches[0].pageX;                                                                           // 411\n                localY = e.touches[0].pageY;                                                                           // 412\n                                                                                                                       // 413\n                offset = (carousel && reverse && slider.animatingTo === slider.last) ? 0 :                             // 414\n                         (carousel && reverse) ? slider.limit - (((slider.itemW + slider.vars.itemMargin) * slider.move) * slider.animatingTo) :\n                         (carousel && slider.currentSlide === slider.last) ? slider.limit :                            // 416\n                         (carousel) ? ((slider.itemW + slider.vars.itemMargin) * slider.move) * slider.currentSlide :  // 417\n                         (reverse) ? (slider.last - slider.currentSlide + slider.cloneOffset) * cwidth : (slider.currentSlide + slider.cloneOffset) * cwidth;\n                startX = (vertical) ? localY : localX;                                                                 // 419\n                startY = (vertical) ? localX : localY;                                                                 // 420\n                                                                                                                       // 421\n                el.addEventListener('touchmove', onTouchMove, false);                                                  // 422\n                el.addEventListener('touchend', onTouchEnd, false);                                                    // 423\n              }                                                                                                        // 424\n            }                                                                                                          // 425\n                                                                                                                       // 426\n            function onTouchMove(e) {                                                                                  // 427\n              // Local vars for X and Y points.                                                                        // 428\n                                                                                                                       // 429\n              localX = e.touches[0].pageX;                                                                             // 430\n              localY = e.touches[0].pageY;                                                                             // 431\n                                                                                                                       // 432\n              dx = (vertical) ? startX - localY : startX - localX;                                                     // 433\n              scrolling = (vertical) ? (Math.abs(dx) < Math.abs(localX - startY)) : (Math.abs(dx) < Math.abs(localY - startY));\n                                                                                                                       // 435\n              var fxms = 500;                                                                                          // 436\n                                                                                                                       // 437\n              if ( ! scrolling || Number( new Date() ) - startT > fxms ) {                                             // 438\n                e.preventDefault();                                                                                    // 439\n                if (!fade && slider.transitions) {                                                                     // 440\n                  if (!slider.vars.animationLoop) {                                                                    // 441\n                    dx = dx/((slider.currentSlide === 0 && dx < 0 || slider.currentSlide === slider.last && dx > 0) ? (Math.abs(dx)/cwidth+2) : 1);\n                  }                                                                                                    // 443\n                  slider.setProps(offset + dx, \"setTouch\");                                                            // 444\n                }                                                                                                      // 445\n              }                                                                                                        // 446\n            }                                                                                                          // 447\n                                                                                                                       // 448\n            function onTouchEnd(e) {                                                                                   // 449\n              // finish the touch by undoing the touch session                                                         // 450\n              el.removeEventListener('touchmove', onTouchMove, false);                                                 // 451\n                                                                                                                       // 452\n              if (slider.animatingTo === slider.currentSlide && !scrolling && !(dx === null)) {                        // 453\n                var updateDx = (reverse) ? -dx : dx,                                                                   // 454\n                    target = (updateDx > 0) ? slider.getTarget('next') : slider.getTarget('prev');                     // 455\n                                                                                                                       // 456\n                if (slider.canAdvance(target) && (Number(new Date()) - startT < 550 && Math.abs(updateDx) > 50 || Math.abs(updateDx) > cwidth/2)) {\n                  slider.flexAnimate(target, slider.vars.pauseOnAction);                                               // 458\n                } else {                                                                                               // 459\n                  if (!fade) slider.flexAnimate(slider.currentSlide, slider.vars.pauseOnAction, true);                 // 460\n                }                                                                                                      // 461\n              }                                                                                                        // 462\n              el.removeEventListener('touchend', onTouchEnd, false);                                                   // 463\n                                                                                                                       // 464\n              startX = null;                                                                                           // 465\n              startY = null;                                                                                           // 466\n              dx = null;                                                                                               // 467\n              offset = null;                                                                                           // 468\n            }                                                                                                          // 469\n        }else{                                                                                                         // 470\n            el.style.msTouchAction = \"none\";                                                                           // 471\n            el._gesture = new MSGesture();                                                                             // 472\n            el._gesture.target = el;                                                                                   // 473\n            el.addEventListener(\"MSPointerDown\", onMSPointerDown, false);                                              // 474\n            el._slider = slider;                                                                                       // 475\n            el.addEventListener(\"MSGestureChange\", onMSGestureChange, false);                                          // 476\n            el.addEventListener(\"MSGestureEnd\", onMSGestureEnd, false);                                                // 477\n                                                                                                                       // 478\n            function onMSPointerDown(e){                                                                               // 479\n                e.stopPropagation();                                                                                   // 480\n                if (slider.animating) {                                                                                // 481\n                    e.preventDefault();                                                                                // 482\n                }else{                                                                                                 // 483\n                    slider.pause();                                                                                    // 484\n                    el._gesture.addPointer(e.pointerId);                                                               // 485\n                    accDx = 0;                                                                                         // 486\n                    cwidth = (vertical) ? slider.h : slider. w;                                                        // 487\n                    startT = Number(new Date());                                                                       // 488\n                    // CAROUSEL:                                                                                       // 489\n                                                                                                                       // 490\n                    offset = (carousel && reverse && slider.animatingTo === slider.last) ? 0 :                         // 491\n                        (carousel && reverse) ? slider.limit - (((slider.itemW + slider.vars.itemMargin) * slider.move) * slider.animatingTo) :\n                            (carousel && slider.currentSlide === slider.last) ? slider.limit :                         // 493\n                                (carousel) ? ((slider.itemW + slider.vars.itemMargin) * slider.move) * slider.currentSlide :\n                                    (reverse) ? (slider.last - slider.currentSlide + slider.cloneOffset) * cwidth : (slider.currentSlide + slider.cloneOffset) * cwidth;\n                }                                                                                                      // 496\n            }                                                                                                          // 497\n                                                                                                                       // 498\n            function onMSGestureChange(e) {                                                                            // 499\n                e.stopPropagation();                                                                                   // 500\n                var slider = e.target._slider;                                                                         // 501\n                if(!slider){                                                                                           // 502\n                    return;                                                                                            // 503\n                }                                                                                                      // 504\n                var transX = -e.translationX,                                                                          // 505\n                    transY = -e.translationY;                                                                          // 506\n                                                                                                                       // 507\n                //Accumulate translations.                                                                             // 508\n                accDx = accDx + ((vertical) ? transY : transX);                                                        // 509\n                dx = accDx;                                                                                            // 510\n                scrolling = (vertical) ? (Math.abs(accDx) < Math.abs(-transX)) : (Math.abs(accDx) < Math.abs(-transY));\n                                                                                                                       // 512\n                if(e.detail === e.MSGESTURE_FLAG_INERTIA){                                                             // 513\n                    setImmediate(function (){                                                                          // 514\n                        el._gesture.stop();                                                                            // 515\n                    });                                                                                                // 516\n                                                                                                                       // 517\n                    return;                                                                                            // 518\n                }                                                                                                      // 519\n                                                                                                                       // 520\n                if (!scrolling || Number(new Date()) - startT > 500) {                                                 // 521\n                    e.preventDefault();                                                                                // 522\n                    if (!fade && slider.transitions) {                                                                 // 523\n                        if (!slider.vars.animationLoop) {                                                              // 524\n                            dx = accDx / ((slider.currentSlide === 0 && accDx < 0 || slider.currentSlide === slider.last && accDx > 0) ? (Math.abs(accDx) / cwidth + 2) : 1);\n                        }                                                                                              // 526\n                        slider.setProps(offset + dx, \"setTouch\");                                                      // 527\n                    }                                                                                                  // 528\n                }                                                                                                      // 529\n            }                                                                                                          // 530\n                                                                                                                       // 531\n            function onMSGestureEnd(e) {                                                                               // 532\n                e.stopPropagation();                                                                                   // 533\n                var slider = e.target._slider;                                                                         // 534\n                if(!slider){                                                                                           // 535\n                    return;                                                                                            // 536\n                }                                                                                                      // 537\n                if (slider.animatingTo === slider.currentSlide && !scrolling && !(dx === null)) {                      // 538\n                    var updateDx = (reverse) ? -dx : dx,                                                               // 539\n                        target = (updateDx > 0) ? slider.getTarget('next') : slider.getTarget('prev');                 // 540\n                                                                                                                       // 541\n                    if (slider.canAdvance(target) && (Number(new Date()) - startT < 550 && Math.abs(updateDx) > 50 || Math.abs(updateDx) > cwidth/2)) {\n                        slider.flexAnimate(target, slider.vars.pauseOnAction);                                         // 543\n                    } else {                                                                                           // 544\n                        if (!fade) slider.flexAnimate(slider.currentSlide, slider.vars.pauseOnAction, true);           // 545\n                    }                                                                                                  // 546\n                }                                                                                                      // 547\n                                                                                                                       // 548\n                startX = null;                                                                                         // 549\n                startY = null;                                                                                         // 550\n                dx = null;                                                                                             // 551\n                offset = null;                                                                                         // 552\n                accDx = 0;                                                                                             // 553\n            }                                                                                                          // 554\n        }                                                                                                              // 555\n      },                                                                                                               // 556\n      resize: function() {                                                                                             // 557\n        if (!slider.animating && slider.is(':visible')) {                                                              // 558\n          if (!carousel) slider.doMath();                                                                              // 559\n                                                                                                                       // 560\n          if (fade) {                                                                                                  // 561\n            // SMOOTH HEIGHT:                                                                                          // 562\n            methods.smoothHeight();                                                                                    // 563\n          } else if (carousel) { //CAROUSEL:                                                                           // 564\n            slider.slides.width(slider.computedW);                                                                     // 565\n            slider.update(slider.pagingCount);                                                                         // 566\n            slider.setProps();                                                                                         // 567\n          }                                                                                                            // 568\n          else if (vertical) { //VERTICAL:                                                                             // 569\n            slider.viewport.height(slider.h);                                                                          // 570\n            slider.setProps(slider.h, \"setTotal\");                                                                     // 571\n          } else {                                                                                                     // 572\n            // SMOOTH HEIGHT:                                                                                          // 573\n            if (slider.vars.smoothHeight) methods.smoothHeight();                                                      // 574\n            slider.newSlides.width(slider.computedW);                                                                  // 575\n            slider.setProps(slider.computedW, \"setTotal\");                                                             // 576\n          }                                                                                                            // 577\n        }                                                                                                              // 578\n      },                                                                                                               // 579\n      smoothHeight: function(dur) {                                                                                    // 580\n        if (!vertical || fade) {                                                                                       // 581\n          var $obj = (fade) ? slider : slider.viewport;                                                                // 582\n          (dur) ? $obj.animate({\"height\": slider.slides.eq(slider.animatingTo).height()}, dur) : $obj.height(slider.slides.eq(slider.animatingTo).height());\n        }                                                                                                              // 584\n      },                                                                                                               // 585\n      sync: function(action) {                                                                                         // 586\n        var $obj = $(slider.vars.sync).data(\"flexslider\"),                                                             // 587\n            target = slider.animatingTo;                                                                               // 588\n                                                                                                                       // 589\n        switch (action) {                                                                                              // 590\n          case \"animate\": $obj.flexAnimate(target, slider.vars.pauseOnAction, false, true); break;                     // 591\n          case \"play\": if (!$obj.playing && !$obj.asNav) { $obj.play(); } break;                                       // 592\n          case \"pause\": $obj.pause(); break;                                                                           // 593\n        }                                                                                                              // 594\n      },                                                                                                               // 595\n      uniqueID: function($clone) {                                                                                     // 596\n        // Append _clone to current level and children elements with id attributes                                     // 597\n        $clone.filter( '[id]' ).add($clone.find( '[id]' )).each(function() {                                           // 598\n          var $this = $(this);                                                                                         // 599\n          $this.attr( 'id', $this.attr( 'id' ) + '_clone' );                                                           // 600\n        });                                                                                                            // 601\n        return $clone;                                                                                                 // 602\n      },                                                                                                               // 603\n      pauseInvisible: {                                                                                                // 604\n        visProp: null,                                                                                                 // 605\n        init: function() {                                                                                             // 606\n          var prefixes = ['webkit','moz','ms','o'];                                                                    // 607\n                                                                                                                       // 608\n          if ('hidden' in document) return 'hidden';                                                                   // 609\n          for (var i = 0; i < prefixes.length; i++) {                                                                  // 610\n            if ((prefixes[i] + 'Hidden') in document)                                                                  // 611\n            methods.pauseInvisible.visProp = prefixes[i] + 'Hidden';                                                   // 612\n          }                                                                                                            // 613\n          if (methods.pauseInvisible.visProp) {                                                                        // 614\n            var evtname = methods.pauseInvisible.visProp.replace(/[H|h]idden/,'') + 'visibilitychange';                // 615\n            document.addEventListener(evtname, function() {                                                            // 616\n              if (methods.pauseInvisible.isHidden()) {                                                                 // 617\n                if(slider.startTimeout) clearTimeout(slider.startTimeout); //If clock is ticking, stop timer and prevent from starting while invisible\n                else slider.pause(); //Or just pause                                                                   // 619\n              }                                                                                                        // 620\n              else {                                                                                                   // 621\n                if(slider.started) slider.play(); //Initiated before, just play                                        // 622\n                else (slider.vars.initDelay > 0) ? setTimeout(slider.play, slider.vars.initDelay) : slider.play(); //Didn't init before: simply init or wait for it\n              }                                                                                                        // 624\n            });                                                                                                        // 625\n          }                                                                                                            // 626\n        },                                                                                                             // 627\n        isHidden: function() {                                                                                         // 628\n          return document[methods.pauseInvisible.visProp] || false;                                                    // 629\n        }                                                                                                              // 630\n      },                                                                                                               // 631\n      setToClearWatchedEvent: function() {                                                                             // 632\n        clearTimeout(watchedEventClearTimer);                                                                          // 633\n        watchedEventClearTimer = setTimeout(function() {                                                               // 634\n          watchedEvent = \"\";                                                                                           // 635\n        }, 3000);                                                                                                      // 636\n      }                                                                                                                // 637\n    };                                                                                                                 // 638\n                                                                                                                       // 639\n    // public methods                                                                                                  // 640\n    slider.flexAnimate = function(target, pause, override, withSync, fromNav) {                                        // 641\n      if (!slider.vars.animationLoop && target !== slider.currentSlide) {                                              // 642\n        slider.direction = (target > slider.currentSlide) ? \"next\" : \"prev\";                                           // 643\n      }                                                                                                                // 644\n                                                                                                                       // 645\n      if (asNav && slider.pagingCount === 1) slider.direction = (slider.currentItem < target) ? \"next\" : \"prev\";       // 646\n                                                                                                                       // 647\n      if (!slider.animating && (slider.canAdvance(target, fromNav) || override) && slider.is(\":visible\")) {            // 648\n        if (asNav && withSync) {                                                                                       // 649\n          var master = $(slider.vars.asNavFor).data('flexslider');                                                     // 650\n          slider.atEnd = target === 0 || target === slider.count - 1;                                                  // 651\n          master.flexAnimate(target, true, false, true, fromNav);                                                      // 652\n          slider.direction = (slider.currentItem < target) ? \"next\" : \"prev\";                                          // 653\n          master.direction = slider.direction;                                                                         // 654\n                                                                                                                       // 655\n          if (Math.ceil((target + 1)/slider.visible) - 1 !== slider.currentSlide && target !== 0) {                    // 656\n            slider.currentItem = target;                                                                               // 657\n            slider.slides.removeClass(namespace + \"active-slide\").eq(target).addClass(namespace + \"active-slide\");     // 658\n            target = Math.floor(target/slider.visible);                                                                // 659\n          } else {                                                                                                     // 660\n            slider.currentItem = target;                                                                               // 661\n            slider.slides.removeClass(namespace + \"active-slide\").eq(target).addClass(namespace + \"active-slide\");     // 662\n            return false;                                                                                              // 663\n          }                                                                                                            // 664\n        }                                                                                                              // 665\n                                                                                                                       // 666\n        slider.animating = true;                                                                                       // 667\n        slider.animatingTo = target;                                                                                   // 668\n                                                                                                                       // 669\n        // SLIDESHOW:                                                                                                  // 670\n        if (pause) slider.pause();                                                                                     // 671\n                                                                                                                       // 672\n        // API: before() animation Callback                                                                            // 673\n        slider.vars.before(slider);                                                                                    // 674\n                                                                                                                       // 675\n        // SYNC:                                                                                                       // 676\n        if (slider.syncExists && !fromNav) methods.sync(\"animate\");                                                    // 677\n                                                                                                                       // 678\n        // CONTROLNAV                                                                                                  // 679\n        if (slider.vars.controlNav) methods.controlNav.active();                                                       // 680\n                                                                                                                       // 681\n        // !CAROUSEL:                                                                                                  // 682\n        // CANDIDATE: slide active class (for add/remove slide)                                                        // 683\n        if (!carousel) slider.slides.removeClass(namespace + 'active-slide').eq(target).addClass(namespace + 'active-slide');\n                                                                                                                       // 685\n        // INFINITE LOOP:                                                                                              // 686\n        // CANDIDATE: atEnd                                                                                            // 687\n        slider.atEnd = target === 0 || target === slider.last;                                                         // 688\n                                                                                                                       // 689\n        // DIRECTIONNAV:                                                                                               // 690\n        if (slider.vars.directionNav) methods.directionNav.update();                                                   // 691\n                                                                                                                       // 692\n        if (target === slider.last) {                                                                                  // 693\n          // API: end() of cycle Callback                                                                              // 694\n          slider.vars.end(slider);                                                                                     // 695\n          // SLIDESHOW && !INFINITE LOOP:                                                                              // 696\n          if (!slider.vars.animationLoop) slider.pause();                                                              // 697\n        }                                                                                                              // 698\n                                                                                                                       // 699\n        // SLIDE:                                                                                                      // 700\n        if (!fade) {                                                                                                   // 701\n          var dimension = (vertical) ? slider.slides.filter(':first').height() : slider.computedW,                     // 702\n              margin, slideString, calcNext;                                                                           // 703\n                                                                                                                       // 704\n          // INFINITE LOOP / REVERSE:                                                                                  // 705\n          if (carousel) {                                                                                              // 706\n            //margin = (slider.vars.itemWidth > slider.w) ? slider.vars.itemMargin * 2 : slider.vars.itemMargin;       // 707\n            margin = slider.vars.itemMargin;                                                                           // 708\n            calcNext = ((slider.itemW + margin) * slider.move) * slider.animatingTo;                                   // 709\n            slideString = (calcNext > slider.limit && slider.visible !== 1) ? slider.limit : calcNext;                 // 710\n          } else if (slider.currentSlide === 0 && target === slider.count - 1 && slider.vars.animationLoop && slider.direction !== \"next\") {\n            slideString = (reverse) ? (slider.count + slider.cloneOffset) * dimension : 0;                             // 712\n          } else if (slider.currentSlide === slider.last && target === 0 && slider.vars.animationLoop && slider.direction !== \"prev\") {\n            slideString = (reverse) ? 0 : (slider.count + 1) * dimension;                                              // 714\n          } else {                                                                                                     // 715\n            slideString = (reverse) ? ((slider.count - 1) - target + slider.cloneOffset) * dimension : (target + slider.cloneOffset) * dimension;\n          }                                                                                                            // 717\n          slider.setProps(slideString, \"\", slider.vars.animationSpeed);                                                // 718\n          if (slider.transitions) {                                                                                    // 719\n            if (!slider.vars.animationLoop || !slider.atEnd) {                                                         // 720\n              slider.animating = false;                                                                                // 721\n              slider.currentSlide = slider.animatingTo;                                                                // 722\n            }                                                                                                          // 723\n                                                                                                                       // 724\n            // Unbind previous transitionEnd events and re-bind new transitionEnd event                                // 725\n            slider.container.unbind(\"webkitTransitionEnd transitionend\");                                              // 726\n            slider.container.bind(\"webkitTransitionEnd transitionend\", function() {                                    // 727\n              clearTimeout(slider.ensureAnimationEnd);                                                                 // 728\n              slider.wrapup(dimension);                                                                                // 729\n            });                                                                                                        // 730\n                                                                                                                       // 731\n            // Insurance for the ever-so-fickle transitionEnd event                                                    // 732\n            clearTimeout(slider.ensureAnimationEnd);                                                                   // 733\n            slider.ensureAnimationEnd = setTimeout(function() {                                                        // 734\n              slider.wrapup(dimension);                                                                                // 735\n            }, slider.vars.animationSpeed + 100);                                                                      // 736\n                                                                                                                       // 737\n          } else {                                                                                                     // 738\n            slider.container.animate(slider.args, slider.vars.animationSpeed, slider.vars.easing, function(){          // 739\n              slider.wrapup(dimension);                                                                                // 740\n            });                                                                                                        // 741\n          }                                                                                                            // 742\n        } else { // FADE:                                                                                              // 743\n          if (!touch) {                                                                                                // 744\n            //slider.slides.eq(slider.currentSlide).fadeOut(slider.vars.animationSpeed, slider.vars.easing);           // 745\n            //slider.slides.eq(target).fadeIn(slider.vars.animationSpeed, slider.vars.easing, slider.wrapup);          // 746\n                                                                                                                       // 747\n            slider.slides.eq(slider.currentSlide).css({\"zIndex\": 1}).animate({\"opacity\": 0}, slider.vars.animationSpeed, slider.vars.easing);\n            slider.slides.eq(target).css({\"zIndex\": 2}).animate({\"opacity\": 1}, slider.vars.animationSpeed, slider.vars.easing, slider.wrapup);\n                                                                                                                       // 750\n          } else {                                                                                                     // 751\n            slider.slides.eq(slider.currentSlide).css({ \"opacity\": 0, \"zIndex\": 1 });                                  // 752\n            slider.slides.eq(target).css({ \"opacity\": 1, \"zIndex\": 2 });                                               // 753\n            slider.wrapup(dimension);                                                                                  // 754\n          }                                                                                                            // 755\n        }                                                                                                              // 756\n        // SMOOTH HEIGHT:                                                                                              // 757\n        if (slider.vars.smoothHeight) methods.smoothHeight(slider.vars.animationSpeed);                                // 758\n      }                                                                                                                // 759\n    };                                                                                                                 // 760\n    slider.wrapup = function(dimension) {                                                                              // 761\n      // SLIDE:                                                                                                        // 762\n      if (!fade && !carousel) {                                                                                        // 763\n        if (slider.currentSlide === 0 && slider.animatingTo === slider.last && slider.vars.animationLoop) {            // 764\n          slider.setProps(dimension, \"jumpEnd\");                                                                       // 765\n        } else if (slider.currentSlide === slider.last && slider.animatingTo === 0 && slider.vars.animationLoop) {     // 766\n          slider.setProps(dimension, \"jumpStart\");                                                                     // 767\n        }                                                                                                              // 768\n      }                                                                                                                // 769\n      slider.animating = false;                                                                                        // 770\n      slider.currentSlide = slider.animatingTo;                                                                        // 771\n      // API: after() animation Callback                                                                               // 772\n      slider.vars.after(slider);                                                                                       // 773\n    };                                                                                                                 // 774\n                                                                                                                       // 775\n    // SLIDESHOW:                                                                                                      // 776\n    slider.animateSlides = function() {                                                                                // 777\n      if (!slider.animating && focused ) slider.flexAnimate(slider.getTarget(\"next\"));                                 // 778\n    };                                                                                                                 // 779\n    // SLIDESHOW:                                                                                                      // 780\n    slider.pause = function() {                                                                                        // 781\n      clearInterval(slider.animatedSlides);                                                                            // 782\n      slider.animatedSlides = null;                                                                                    // 783\n      slider.playing = false;                                                                                          // 784\n      // PAUSEPLAY:                                                                                                    // 785\n      if (slider.vars.pausePlay) methods.pausePlay.update(\"play\");                                                     // 786\n      // SYNC:                                                                                                         // 787\n      if (slider.syncExists) methods.sync(\"pause\");                                                                    // 788\n    };                                                                                                                 // 789\n    // SLIDESHOW:                                                                                                      // 790\n    slider.play = function() {                                                                                         // 791\n      if (slider.playing) clearInterval(slider.animatedSlides);                                                        // 792\n      slider.animatedSlides = slider.animatedSlides || setInterval(slider.animateSlides, slider.vars.slideshowSpeed);  // 793\n      slider.started = slider.playing = true;                                                                          // 794\n      // PAUSEPLAY:                                                                                                    // 795\n      if (slider.vars.pausePlay) methods.pausePlay.update(\"pause\");                                                    // 796\n      // SYNC:                                                                                                         // 797\n      if (slider.syncExists) methods.sync(\"play\");                                                                     // 798\n    };                                                                                                                 // 799\n    // STOP:                                                                                                           // 800\n    slider.stop = function () {                                                                                        // 801\n      slider.pause();                                                                                                  // 802\n      slider.stopped = true;                                                                                           // 803\n    };                                                                                                                 // 804\n    slider.canAdvance = function(target, fromNav) {                                                                    // 805\n      // ASNAV:                                                                                                        // 806\n      var last = (asNav) ? slider.pagingCount - 1 : slider.last;                                                       // 807\n      return (fromNav) ? true :                                                                                        // 808\n             (asNav && slider.currentItem === slider.count - 1 && target === 0 && slider.direction === \"prev\") ? true :\n             (asNav && slider.currentItem === 0 && target === slider.pagingCount - 1 && slider.direction !== \"next\") ? false :\n             (target === slider.currentSlide && !asNav) ? false :                                                      // 811\n             (slider.vars.animationLoop) ? true :                                                                      // 812\n             (slider.atEnd && slider.currentSlide === 0 && target === last && slider.direction !== \"next\") ? false :   // 813\n             (slider.atEnd && slider.currentSlide === last && target === 0 && slider.direction === \"next\") ? false :   // 814\n             true;                                                                                                     // 815\n    };                                                                                                                 // 816\n    slider.getTarget = function(dir) {                                                                                 // 817\n      slider.direction = dir;                                                                                          // 818\n      if (dir === \"next\") {                                                                                            // 819\n        return (slider.currentSlide === slider.last) ? 0 : slider.currentSlide + 1;                                    // 820\n      } else {                                                                                                         // 821\n        return (slider.currentSlide === 0) ? slider.last : slider.currentSlide - 1;                                    // 822\n      }                                                                                                                // 823\n    };                                                                                                                 // 824\n                                                                                                                       // 825\n    // SLIDE:                                                                                                          // 826\n    slider.setProps = function(pos, special, dur) {                                                                    // 827\n      var target = (function() {                                                                                       // 828\n        var posCheck = (pos) ? pos : ((slider.itemW + slider.vars.itemMargin) * slider.move) * slider.animatingTo,     // 829\n            posCalc = (function() {                                                                                    // 830\n              if (carousel) {                                                                                          // 831\n                return (special === \"setTouch\") ? pos :                                                                // 832\n                       (reverse && slider.animatingTo === slider.last) ? 0 :                                           // 833\n                       (reverse) ? slider.limit - (((slider.itemW + slider.vars.itemMargin) * slider.move) * slider.animatingTo) :\n                       (slider.animatingTo === slider.last) ? slider.limit : posCheck;                                 // 835\n              } else {                                                                                                 // 836\n                switch (special) {                                                                                     // 837\n                  case \"setTotal\": return (reverse) ? ((slider.count - 1) - slider.currentSlide + slider.cloneOffset) * pos : (slider.currentSlide + slider.cloneOffset) * pos;\n                  case \"setTouch\": return (reverse) ? pos : pos;                                                       // 839\n                  case \"jumpEnd\": return (reverse) ? pos : slider.count * pos;                                         // 840\n                  case \"jumpStart\": return (reverse) ? slider.count * pos : pos;                                       // 841\n                  default: return pos;                                                                                 // 842\n                }                                                                                                      // 843\n              }                                                                                                        // 844\n            }());                                                                                                      // 845\n                                                                                                                       // 846\n            return (posCalc * -1) + \"px\";                                                                              // 847\n          }());                                                                                                        // 848\n                                                                                                                       // 849\n      if (slider.transitions) {                                                                                        // 850\n        target = (vertical) ? \"translate3d(0,\" + target + \",0)\" : \"translate3d(\" + target + \",0,0)\";                   // 851\n        dur = (dur !== undefined) ? (dur/1000) + \"s\" : \"0s\";                                                           // 852\n        slider.container.css(\"-\" + slider.pfx + \"-transition-duration\", dur);                                          // 853\n         slider.container.css(\"transition-duration\", dur);                                                             // 854\n      }                                                                                                                // 855\n                                                                                                                       // 856\n      slider.args[slider.prop] = target;                                                                               // 857\n      if (slider.transitions || dur === undefined) slider.container.css(slider.args);                                  // 858\n                                                                                                                       // 859\n      slider.container.css('transform',target);                                                                        // 860\n    };                                                                                                                 // 861\n                                                                                                                       // 862\n    slider.setup = function(type) {                                                                                    // 863\n      // SLIDE:                                                                                                        // 864\n      if (!fade) {                                                                                                     // 865\n        var sliderOffset, arr;                                                                                         // 866\n                                                                                                                       // 867\n        if (type === \"init\") {                                                                                         // 868\n          slider.viewport = $('<div class=\"' + namespace + 'viewport\"></div>').css({\"overflow\": \"hidden\", \"position\": \"relative\"}).appendTo(slider).append(slider.container);\n          // INFINITE LOOP:                                                                                            // 870\n          slider.cloneCount = 0;                                                                                       // 871\n          slider.cloneOffset = 0;                                                                                      // 872\n          // REVERSE:                                                                                                  // 873\n          if (reverse) {                                                                                               // 874\n            arr = $.makeArray(slider.slides).reverse();                                                                // 875\n            slider.slides = $(arr);                                                                                    // 876\n            slider.container.empty().append(slider.slides);                                                            // 877\n          }                                                                                                            // 878\n        }                                                                                                              // 879\n        // INFINITE LOOP && !CAROUSEL:                                                                                 // 880\n        if (slider.vars.animationLoop && !carousel) {                                                                  // 881\n          slider.cloneCount = 2;                                                                                       // 882\n          slider.cloneOffset = 1;                                                                                      // 883\n          // clear out old clones                                                                                      // 884\n          if (type !== \"init\") slider.container.find('.clone').remove();                                               // 885\n          slider.container.append(methods.uniqueID(slider.slides.first().clone().addClass('clone')).attr('aria-hidden', 'true'))\n                          .prepend(methods.uniqueID(slider.slides.last().clone().addClass('clone')).attr('aria-hidden', 'true'));\n        }                                                                                                              // 888\n        slider.newSlides = $(slider.vars.selector, slider);                                                            // 889\n                                                                                                                       // 890\n        sliderOffset = (reverse) ? slider.count - 1 - slider.currentSlide + slider.cloneOffset : slider.currentSlide + slider.cloneOffset;\n        // VERTICAL:                                                                                                   // 892\n        if (vertical && !carousel) {                                                                                   // 893\n          slider.container.height((slider.count + slider.cloneCount) * 200 + \"%\").css(\"position\", \"absolute\").width(\"100%\");\n          setTimeout(function(){                                                                                       // 895\n            slider.newSlides.css({\"display\": \"block\"});                                                                // 896\n            slider.doMath();                                                                                           // 897\n            slider.viewport.height(slider.h);                                                                          // 898\n            slider.setProps(sliderOffset * slider.h, \"init\");                                                          // 899\n          }, (type === \"init\") ? 100 : 0);                                                                             // 900\n        } else {                                                                                                       // 901\n          slider.container.width((slider.count + slider.cloneCount) * 200 + \"%\");                                      // 902\n          slider.setProps(sliderOffset * slider.computedW, \"init\");                                                    // 903\n          setTimeout(function(){                                                                                       // 904\n            slider.doMath();                                                                                           // 905\n            slider.newSlides.css({\"width\": slider.computedW, \"float\": \"left\", \"display\": \"block\"});                    // 906\n            // SMOOTH HEIGHT:                                                                                          // 907\n            if (slider.vars.smoothHeight) methods.smoothHeight();                                                      // 908\n          }, (type === \"init\") ? 100 : 0);                                                                             // 909\n        }                                                                                                              // 910\n      } else { // FADE:                                                                                                // 911\n        slider.slides.css({\"width\": \"100%\", \"float\": \"left\", \"marginRight\": \"-100%\", \"position\": \"relative\"});         // 912\n        if (type === \"init\") {                                                                                         // 913\n          if (!touch) {                                                                                                // 914\n            //slider.slides.eq(slider.currentSlide).fadeIn(slider.vars.animationSpeed, slider.vars.easing);            // 915\n            if (slider.vars.fadeFirstSlide == false) {                                                                 // 916\n              slider.slides.css({ \"opacity\": 0, \"display\": \"block\", \"zIndex\": 1 }).eq(slider.currentSlide).css({\"zIndex\": 2}).css({\"opacity\": 1});\n            } else {                                                                                                   // 918\n              slider.slides.css({ \"opacity\": 0, \"display\": \"block\", \"zIndex\": 1 }).eq(slider.currentSlide).css({\"zIndex\": 2}).animate({\"opacity\": 1},slider.vars.animationSpeed,slider.vars.easing);\n            }                                                                                                          // 920\n          } else {                                                                                                     // 921\n            slider.slides.css({ \"opacity\": 0, \"display\": \"block\", \"webkitTransition\": \"opacity \" + slider.vars.animationSpeed / 1000 + \"s ease\", \"zIndex\": 1 }).eq(slider.currentSlide).css({ \"opacity\": 1, \"zIndex\": 2});\n          }                                                                                                            // 923\n        }                                                                                                              // 924\n        // SMOOTH HEIGHT:                                                                                              // 925\n        if (slider.vars.smoothHeight) methods.smoothHeight();                                                          // 926\n      }                                                                                                                // 927\n      // !CAROUSEL:                                                                                                    // 928\n      // CANDIDATE: active slide                                                                                       // 929\n      if (!carousel) slider.slides.removeClass(namespace + \"active-slide\").eq(slider.currentSlide).addClass(namespace + \"active-slide\");\n                                                                                                                       // 931\n      //FlexSlider: init() Callback                                                                                    // 932\n      slider.vars.init(slider);                                                                                        // 933\n    };                                                                                                                 // 934\n                                                                                                                       // 935\n    slider.doMath = function() {                                                                                       // 936\n      var slide = slider.slides.first(),                                                                               // 937\n          slideMargin = slider.vars.itemMargin,                                                                        // 938\n          minItems = slider.vars.minItems,                                                                             // 939\n          maxItems = slider.vars.maxItems;                                                                             // 940\n                                                                                                                       // 941\n      slider.w = (slider.viewport===undefined) ? slider.width() : slider.viewport.width();                             // 942\n      slider.h = slide.height();                                                                                       // 943\n      slider.boxPadding = slide.outerWidth() - slide.width();                                                          // 944\n                                                                                                                       // 945\n      // CAROUSEL:                                                                                                     // 946\n      if (carousel) {                                                                                                  // 947\n        slider.itemT = slider.vars.itemWidth + slideMargin;                                                            // 948\n        slider.minW = (minItems) ? minItems * slider.itemT : slider.w;                                                 // 949\n        slider.maxW = (maxItems) ? (maxItems * slider.itemT) - slideMargin : slider.w;                                 // 950\n        slider.itemW = (slider.minW > slider.w) ? (slider.w - (slideMargin * (minItems - 1)))/minItems :               // 951\n                       (slider.maxW < slider.w) ? (slider.w - (slideMargin * (maxItems - 1)))/maxItems :               // 952\n                       (slider.vars.itemWidth > slider.w) ? slider.w : slider.vars.itemWidth;                          // 953\n                                                                                                                       // 954\n        slider.visible = Math.floor(slider.w/(slider.itemW));                                                          // 955\n        slider.move = (slider.vars.move > 0 && slider.vars.move < slider.visible ) ? slider.vars.move : slider.visible;\n        slider.pagingCount = Math.ceil(((slider.count - slider.visible)/slider.move) + 1);                             // 957\n        slider.last =  slider.pagingCount - 1;                                                                         // 958\n        slider.limit = (slider.pagingCount === 1) ? 0 :                                                                // 959\n                       (slider.vars.itemWidth > slider.w) ? (slider.itemW * (slider.count - 1)) + (slideMargin * (slider.count - 1)) : ((slider.itemW + slideMargin) * slider.count) - slider.w - slideMargin;\n      } else {                                                                                                         // 961\n        slider.itemW = slider.w;                                                                                       // 962\n        slider.pagingCount = slider.count;                                                                             // 963\n        slider.last = slider.count - 1;                                                                                // 964\n      }                                                                                                                // 965\n      slider.computedW = slider.itemW - slider.boxPadding;                                                             // 966\n    };                                                                                                                 // 967\n                                                                                                                       // 968\n    slider.update = function(pos, action) {                                                                            // 969\n      slider.doMath();                                                                                                 // 970\n                                                                                                                       // 971\n      // update currentSlide and slider.animatingTo if necessary                                                       // 972\n      if (!carousel) {                                                                                                 // 973\n        if (pos < slider.currentSlide) {                                                                               // 974\n          slider.currentSlide += 1;                                                                                    // 975\n        } else if (pos <= slider.currentSlide && pos !== 0) {                                                          // 976\n          slider.currentSlide -= 1;                                                                                    // 977\n        }                                                                                                              // 978\n        slider.animatingTo = slider.currentSlide;                                                                      // 979\n      }                                                                                                                // 980\n                                                                                                                       // 981\n      // update controlNav                                                                                             // 982\n      if (slider.vars.controlNav && !slider.manualControls) {                                                          // 983\n        if ((action === \"add\" && !carousel) || slider.pagingCount > slider.controlNav.length) {                        // 984\n          methods.controlNav.update(\"add\");                                                                            // 985\n        } else if ((action === \"remove\" && !carousel) || slider.pagingCount < slider.controlNav.length) {              // 986\n          if (carousel && slider.currentSlide > slider.last) {                                                         // 987\n            slider.currentSlide -= 1;                                                                                  // 988\n            slider.animatingTo -= 1;                                                                                   // 989\n          }                                                                                                            // 990\n          methods.controlNav.update(\"remove\", slider.last);                                                            // 991\n        }                                                                                                              // 992\n      }                                                                                                                // 993\n      // update directionNav                                                                                           // 994\n      if (slider.vars.directionNav) methods.directionNav.update();                                                     // 995\n                                                                                                                       // 996\n    };                                                                                                                 // 997\n                                                                                                                       // 998\n    slider.addSlide = function(obj, pos) {                                                                             // 999\n      var $obj = $(obj);                                                                                               // 1000\n                                                                                                                       // 1001\n      slider.count += 1;                                                                                               // 1002\n      slider.last = slider.count - 1;                                                                                  // 1003\n                                                                                                                       // 1004\n      // append new slide                                                                                              // 1005\n      if (vertical && reverse) {                                                                                       // 1006\n        (pos !== undefined) ? slider.slides.eq(slider.count - pos).after($obj) : slider.container.prepend($obj);       // 1007\n      } else {                                                                                                         // 1008\n        (pos !== undefined) ? slider.slides.eq(pos).before($obj) : slider.container.append($obj);                      // 1009\n      }                                                                                                                // 1010\n                                                                                                                       // 1011\n      // update currentSlide, animatingTo, controlNav, and directionNav                                                // 1012\n      slider.update(pos, \"add\");                                                                                       // 1013\n                                                                                                                       // 1014\n      // update slider.slides                                                                                          // 1015\n      slider.slides = $(slider.vars.selector + ':not(.clone)', slider);                                                // 1016\n      // re-setup the slider to accomdate new slide                                                                    // 1017\n      slider.setup();                                                                                                  // 1018\n                                                                                                                       // 1019\n      //FlexSlider: added() Callback                                                                                   // 1020\n      slider.vars.added(slider);                                                                                       // 1021\n    };                                                                                                                 // 1022\n    slider.removeSlide = function(obj) {                                                                               // 1023\n      var pos = (isNaN(obj)) ? slider.slides.index($(obj)) : obj;                                                      // 1024\n                                                                                                                       // 1025\n      // update count                                                                                                  // 1026\n      slider.count -= 1;                                                                                               // 1027\n      slider.last = slider.count - 1;                                                                                  // 1028\n                                                                                                                       // 1029\n      // remove slide                                                                                                  // 1030\n      if (isNaN(obj)) {                                                                                                // 1031\n        $(obj, slider.slides).remove();                                                                                // 1032\n      } else {                                                                                                         // 1033\n        (vertical && reverse) ? slider.slides.eq(slider.last).remove() : slider.slides.eq(obj).remove();               // 1034\n      }                                                                                                                // 1035\n                                                                                                                       // 1036\n      // update currentSlide, animatingTo, controlNav, and directionNav                                                // 1037\n      slider.doMath();                                                                                                 // 1038\n      slider.update(pos, \"remove\");                                                                                    // 1039\n                                                                                                                       // 1040\n      // update slider.slides                                                                                          // 1041\n      slider.slides = $(slider.vars.selector + ':not(.clone)', slider);                                                // 1042\n      // re-setup the slider to accomdate new slide                                                                    // 1043\n      slider.setup();                                                                                                  // 1044\n                                                                                                                       // 1045\n      // FlexSlider: removed() Callback                                                                                // 1046\n      slider.vars.removed(slider);                                                                                     // 1047\n    };                                                                                                                 // 1048\n                                                                                                                       // 1049\n    //FlexSlider: Initialize                                                                                           // 1050\n    methods.init();                                                                                                    // 1051\n  };                                                                                                                   // 1052\n                                                                                                                       // 1053\n  // Ensure the slider isn't focussed if the window loses focus.                                                       // 1054\n  $( window ).blur( function ( e ) {                                                                                   // 1055\n    focused = false;                                                                                                   // 1056\n  }).focus( function ( e ) {                                                                                           // 1057\n    focused = true;                                                                                                    // 1058\n  });                                                                                                                  // 1059\n                                                                                                                       // 1060\n  //FlexSlider: Default Settings                                                                                       // 1061\n  $.flexslider.defaults = {                                                                                            // 1062\n    namespace: \"flex-\",             //{NEW} String: Prefix string attached to the class of every element generated by the plugin\n    selector: \".slides > li\",       //{NEW} Selector: Must match a simple pattern. '{container} > {slide}' -- Ignore pattern at your own peril\n    animation: \"fade\",              //String: Select your animation type, \"fade\" or \"slide\"                            // 1065\n    easing: \"swing\",                //{NEW} String: Determines the easing method used in jQuery transitions. jQuery easing plugin is supported!\n    direction: \"horizontal\",        //String: Select the sliding direction, \"horizontal\" or \"vertical\"                 // 1067\n    reverse: false,                 //{NEW} Boolean: Reverse the animation direction                                   // 1068\n    animationLoop: true,            //Boolean: Should the animation loop? If false, directionNav will received \"disable\" classes at either end\n    smoothHeight: false,            //{NEW} Boolean: Allow height of the slider to animate smoothly in horizontal mode // 1070\n    startAt: 0,                     //Integer: The slide that the slider should start on. Array notation (0 = first slide)\n    slideshow: true,                //Boolean: Animate slider automatically                                            // 1072\n    slideshowSpeed: 7000,           //Integer: Set the speed of the slideshow cycling, in milliseconds                 // 1073\n    animationSpeed: 600,            //Integer: Set the speed of animations, in milliseconds                            // 1074\n    initDelay: 0,                   //{NEW} Integer: Set an initialization delay, in milliseconds                      // 1075\n    randomize: false,               //Boolean: Randomize slide order                                                   // 1076\n    fadeFirstSlide: true,           //Boolean: Fade in the first slide when animation type is \"fade\"                   // 1077\n    thumbCaptions: false,           //Boolean: Whether or not to put captions on thumbnails when using the \"thumbnails\" controlNav.\n                                                                                                                       // 1079\n    // Usability features                                                                                              // 1080\n    pauseOnAction: true,            //Boolean: Pause the slideshow when interacting with control elements, highly recommended.\n    pauseOnHover: false,            //Boolean: Pause the slideshow when hovering over slider, then resume when no longer hovering\n    pauseInvisible: true,   \t\t//{NEW} Boolean: Pause the slideshow when tab is invisible, resume when visible. Provides better UX, lower CPU usage.\n    useCSS: true,                   //{NEW} Boolean: Slider will use CSS3 transitions if available                     // 1084\n    touch: true,                    //{NEW} Boolean: Allow touch swipe navigation of the slider on touch-enabled devices\n    video: false,                   //{NEW} Boolean: If using video in the slider, will prevent CSS3 3D Transforms to avoid graphical glitches\n                                                                                                                       // 1087\n    // Primary Controls                                                                                                // 1088\n    controlNav: true,               //Boolean: Create navigation for paging control of each slide? Note: Leave true for manualControls usage\n    directionNav: true,             //Boolean: Create navigation for previous/next navigation? (true/false)            // 1090\n    prevText: \"Previous\",           //String: Set the text for the \"previous\" directionNav item                        // 1091\n    nextText: \"Next\",               //String: Set the text for the \"next\" directionNav item                            // 1092\n                                                                                                                       // 1093\n    // Secondary Navigation                                                                                            // 1094\n    keyboard: true,                 //Boolean: Allow slider navigating via keyboard left/right keys                    // 1095\n    multipleKeyboard: false,        //{NEW} Boolean: Allow keyboard navigation to affect multiple sliders. Default behavior cuts out keyboard navigation with more than one slider present.\n    mousewheel: false,              //{UPDATED} Boolean: Requires jquery.mousewheel.js (https://github.com/brandonaaron/jquery-mousewheel) - Allows slider navigating via mousewheel\n    pausePlay: false,               //Boolean: Create pause/play dynamic element                                       // 1098\n    pauseText: \"Pause\",             //String: Set the text for the \"pause\" pausePlay item                              // 1099\n    playText: \"Play\",               //String: Set the text for the \"play\" pausePlay item                               // 1100\n                                                                                                                       // 1101\n    // Special properties                                                                                              // 1102\n    controlsContainer: \"\",          //{UPDATED} jQuery Object/Selector: Declare which container the navigation elements should be appended too. Default container is the FlexSlider element. Example use would be $(\".flexslider-container\"). Property is ignored if given element is not found.\n    manualControls: \"\",             //{UPDATED} jQuery Object/Selector: Declare custom control navigation. Examples would be $(\".flex-control-nav li\") or \"#tabs-nav li img\", etc. The number of elements in your controlNav should match the number of slides/tabs.\n    sync: \"\",                       //{NEW} Selector: Mirror the actions performed on this slider with another slider. Use with care.\n    asNavFor: \"\",                   //{NEW} Selector: Internal property exposed for turning the slider into a thumbnail navigation for another slider\n                                                                                                                       // 1107\n    // Carousel Options                                                                                                // 1108\n    itemWidth: 0,                   //{NEW} Integer: Box-model width of individual carousel items, including horizontal borders and padding.\n    itemMargin: 0,                  //{NEW} Integer: Margin between carousel items.                                    // 1110\n    minItems: 1,                    //{NEW} Integer: Minimum number of carousel items that should be visible. Items will resize fluidly when below this.\n    maxItems: 0,                    //{NEW} Integer: Maxmimum number of carousel items that should be visible. Items will resize fluidly when above this limit.\n    move: 0,                        //{NEW} Integer: Number of carousel items that should move on animation. If 0, slider will move all visible items.\n    allowOneSlide: true,           //{NEW} Boolean: Whether or not to allow a slider comprised of a single slide       // 1114\n                                                                                                                       // 1115\n    // Callback API                                                                                                    // 1116\n    start: function(){},            //Callback: function(slider) - Fires when the slider loads the first slide         // 1117\n    before: function(){},           //Callback: function(slider) - Fires asynchronously with each slider animation     // 1118\n    after: function(){},            //Callback: function(slider) - Fires after each slider animation completes         // 1119\n    end: function(){},              //Callback: function(slider) - Fires when the slider reaches the last slide (asynchronous)\n    added: function(){},            //{NEW} Callback: function(slider) - Fires after a slide is added                  // 1121\n    removed: function(){},           //{NEW} Callback: function(slider) - Fires after a slide is removed               // 1122\n    init: function() {}             //{NEW} Callback: function(slider) - Fires after the slider is initially setup     // 1123\n  };                                                                                                                   // 1124\n                                                                                                                       // 1125\n  //FlexSlider: Plugin Function                                                                                        // 1126\n  $.fn.flexslider = function(options) {                                                                                // 1127\n    if (options === undefined) options = {};                                                                           // 1128\n                                                                                                                       // 1129\n    if (typeof options === \"object\") {                                                                                 // 1130\n      return this.each(function() {                                                                                    // 1131\n        var $this = $(this),                                                                                           // 1132\n            selector = (options.selector) ? options.selector : \".slides > li\",                                         // 1133\n            $slides = $this.find(selector);                                                                            // 1134\n                                                                                                                       // 1135\n      if ( ( $slides.length === 1 && options.allowOneSlide === true ) || $slides.length === 0 ) {                      // 1136\n          $slides.fadeIn(400);                                                                                         // 1137\n          if (options.start) options.start($this);                                                                     // 1138\n        } else if ($this.data('flexslider') === undefined) {                                                           // 1139\n          new $.flexslider(this, options);                                                                             // 1140\n        }                                                                                                              // 1141\n      });                                                                                                              // 1142\n    } else {                                                                                                           // 1143\n      // Helper strings to quickly perform functions on the slider                                                     // 1144\n      var $slider = $(this).data('flexslider');                                                                        // 1145\n      switch (options) {                                                                                               // 1146\n        case \"play\": $slider.play(); break;                                                                            // 1147\n        case \"pause\": $slider.pause(); break;                                                                          // 1148\n        case \"stop\": $slider.stop(); break;                                                                            // 1149\n        case \"next\": $slider.flexAnimate($slider.getTarget(\"next\"), true); break;                                      // 1150\n        case \"prev\":                                                                                                   // 1151\n        case \"previous\": $slider.flexAnimate($slider.getTarget(\"prev\"), true); break;                                  // 1152\n        default: if (typeof options === \"number\") $slider.flexAnimate(options, true);                                  // 1153\n      }                                                                                                                // 1154\n    }                                                                                                                  // 1155\n  };                                                                                                                   // 1156\n})(jQuery);                                                                                                            // 1157\n                                                                                                                       // 1158\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}}]