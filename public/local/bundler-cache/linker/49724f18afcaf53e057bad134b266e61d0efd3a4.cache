[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Template = Package.templating.Template;\nvar _ = Package.underscore._;\nvar FastClick = Package.fastclick.FastClick;\nvar Router = Package['iron:router'].Router;\nvar RouteController = Package['iron:router'].RouteController;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar Session = Package.session.Session;\nvar $ = Package.jquery.$;\nvar jQuery = Package.jquery.jQuery;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Spacebars = Package.spacebars.Spacebars;\nvar Iron = Package['iron:core'].Iron;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar IonActionSheet, IonBackdrop, Platform, IonHeaderBar, IonKeyboard, scrollToFocusedElement, spliceIndex, originalIndex, temp, newOrder, IonLoading, IonModal, IonScrollPositions, backUrl, backRoute, IonNavigation, POPOVER_BODY_PADDING, IonPopover, IonPopup, IonSideMenu, $snapperEl, classes, iconName;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/vendor/snap.js                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/*                                                                                                                     // 1\n* Snap.js                                                                                                              // 2\n*                                                                                                                      // 3\n* Copyright 2013, Jacob Kelley - http://jakiestfu.com/                                                                 // 4\n* Released under the MIT Licence                                                                                       // 5\n* http://opensource.org/licenses/MIT                                                                                   // 6\n*                                                                                                                      // 7\n* Github:  http://github.com/jakiestfu/Snap.js/                                                                        // 8\n* Version: 1.9.3                                                                                                       // 9\n*/                                                                                                                     // 10\n/*jslint browser: true*/                                                                                               // 11\n/*global define, module, ender*/                                                                                       // 12\n(function(win, doc) {                                                                                                  // 13\n  'use strict';                                                                                                        // 14\n  var Snap = Snap || function(userOpts) {                                                                              // 15\n    var settings = {                                                                                                   // 16\n      element: null,                                                                                                   // 17\n      dragger: null,                                                                                                   // 18\n      disable: 'none',                                                                                                 // 19\n      addBodyClasses: true,                                                                                            // 20\n      hyperextensible: true,                                                                                           // 21\n      resistance: 0.5,                                                                                                 // 22\n      flickThreshold: 50,                                                                                              // 23\n      transitionSpeed: 0.3,                                                                                            // 24\n      easing: 'ease',                                                                                                  // 25\n      maxPosition: 266,                                                                                                // 26\n      minPosition: -266,                                                                                               // 27\n      tapToClose: true,                                                                                                // 28\n      touchToDrag: true,                                                                                               // 29\n      slideIntent: 40, // degrees                                                                                      // 30\n      minDragDistance: 5                                                                                               // 31\n    },                                                                                                                 // 32\n    cache = {                                                                                                          // 33\n      simpleStates: {                                                                                                  // 34\n        opening: null,                                                                                                 // 35\n        towards: null,                                                                                                 // 36\n        hyperExtending: null,                                                                                          // 37\n        halfway: null,                                                                                                 // 38\n        flick: null,                                                                                                   // 39\n        translation: {                                                                                                 // 40\n          absolute: 0,                                                                                                 // 41\n          relative: 0,                                                                                                 // 42\n          sinceDirectionChange: 0,                                                                                     // 43\n          percentage: 0                                                                                                // 44\n        }                                                                                                              // 45\n      }                                                                                                                // 46\n    },                                                                                                                 // 47\n    eventList = {},                                                                                                    // 48\n    utils = {                                                                                                          // 49\n      hasTouch: ('ontouchstart' in doc.documentElement || win.navigator.msPointerEnabled),                             // 50\n      eventType: function(action) {                                                                                    // 51\n        var eventTypes = {                                                                                             // 52\n          down: (utils.hasTouch ? 'touchstart' : 'mousedown'),                                                         // 53\n          move: (utils.hasTouch ? 'touchmove' : 'mousemove'),                                                          // 54\n          up: (utils.hasTouch ? 'touchend' : 'mouseup'),                                                               // 55\n          out: (utils.hasTouch ? 'touchcancel' : 'mouseout')                                                           // 56\n        };                                                                                                             // 57\n        return eventTypes[action];                                                                                     // 58\n      },                                                                                                               // 59\n      page: function(t, e){                                                                                            // 60\n        return (utils.hasTouch && e.touches.length && e.touches[0]) ? e.touches[0]['page'+t] : e['page'+t];            // 61\n      },                                                                                                               // 62\n      klass: {                                                                                                         // 63\n        has: function(el, name){                                                                                       // 64\n          return (el.className).indexOf(name) !== -1;                                                                  // 65\n        },                                                                                                             // 66\n        add: function(el, name){                                                                                       // 67\n          if(!utils.klass.has(el, name) && settings.addBodyClasses){                                                   // 68\n            el.className += \" \"+name;                                                                                  // 69\n          }                                                                                                            // 70\n        },                                                                                                             // 71\n        remove: function(el, name){                                                                                    // 72\n          if(settings.addBodyClasses){                                                                                 // 73\n            el.className = (el.className).replace(name, \"\").replace(/^\\s+|\\s+$/g, '');                                 // 74\n          }                                                                                                            // 75\n        }                                                                                                              // 76\n      },                                                                                                               // 77\n      dispatchEvent: function(type) {                                                                                  // 78\n        if (typeof eventList[type] === 'function') {                                                                   // 79\n          return eventList[type].call();                                                                               // 80\n        }                                                                                                              // 81\n      },                                                                                                               // 82\n      vendor: function(){                                                                                              // 83\n        var tmp = doc.createElement(\"div\"),                                                                            // 84\n        prefixes = 'webkit Moz O ms'.split(' '),                                                                       // 85\n        i;                                                                                                             // 86\n        for (i in prefixes) {                                                                                          // 87\n          if (typeof tmp.style[prefixes[i] + 'Transition'] !== 'undefined') {                                          // 88\n            return prefixes[i];                                                                                        // 89\n          }                                                                                                            // 90\n        }                                                                                                              // 91\n      },                                                                                                               // 92\n      transitionCallback: function(){                                                                                  // 93\n        return (cache.vendor==='Moz' || cache.vendor==='ms') ? 'transitionend' : cache.vendor+'TransitionEnd';         // 94\n      },                                                                                                               // 95\n      canTransform: function(){                                                                                        // 96\n        return typeof settings.element.style[cache.vendor+'Transform'] !== 'undefined';                                // 97\n      },                                                                                                               // 98\n      deepExtend: function(destination, source) {                                                                      // 99\n        var property;                                                                                                  // 100\n        for (property in source) {                                                                                     // 101\n          if (source[property] && source[property].constructor && source[property].constructor === Object) {           // 102\n            destination[property] = destination[property] || {};                                                       // 103\n            utils.deepExtend(destination[property], source[property]);                                                 // 104\n          } else {                                                                                                     // 105\n            destination[property] = source[property];                                                                  // 106\n          }                                                                                                            // 107\n        }                                                                                                              // 108\n        return destination;                                                                                            // 109\n      },                                                                                                               // 110\n      angleOfDrag: function(x, y) {                                                                                    // 111\n        var degrees, theta;                                                                                            // 112\n        // Calc Theta                                                                                                  // 113\n        theta = Math.atan2(-(cache.startDragY - y), (cache.startDragX - x));                                           // 114\n        if (theta < 0) {                                                                                               // 115\n          theta += 2 * Math.PI;                                                                                        // 116\n        }                                                                                                              // 117\n        // Calc Degrees                                                                                                // 118\n        degrees = Math.floor(theta * (180 / Math.PI) - 180);                                                           // 119\n        if (degrees < 0 && degrees > -180) {                                                                           // 120\n          degrees = 360 - Math.abs(degrees);                                                                           // 121\n        }                                                                                                              // 122\n        return Math.abs(degrees);                                                                                      // 123\n      },                                                                                                               // 124\n      events: {                                                                                                        // 125\n        addEvent: function addEvent(element, eventName, func) {                                                        // 126\n          if (element.addEventListener) {                                                                              // 127\n            return element.addEventListener(eventName, func, false);                                                   // 128\n          } else if (element.attachEvent) {                                                                            // 129\n            return element.attachEvent(\"on\" + eventName, func);                                                        // 130\n          }                                                                                                            // 131\n        },                                                                                                             // 132\n        removeEvent: function addEvent(element, eventName, func) {                                                     // 133\n          if (element.addEventListener) {                                                                              // 134\n            return element.removeEventListener(eventName, func, false);                                                // 135\n          } else if (element.attachEvent) {                                                                            // 136\n            return element.detachEvent(\"on\" + eventName, func);                                                        // 137\n          }                                                                                                            // 138\n        },                                                                                                             // 139\n        prevent: function(e) {                                                                                         // 140\n          if (e.preventDefault) {                                                                                      // 141\n            e.preventDefault();                                                                                        // 142\n          } else {                                                                                                     // 143\n            e.returnValue = false;                                                                                     // 144\n          }                                                                                                            // 145\n        }                                                                                                              // 146\n      },                                                                                                               // 147\n      parentUntil: function(el, attr) {                                                                                // 148\n        var isStr = typeof attr === 'string';                                                                          // 149\n        while (el.parentNode) {                                                                                        // 150\n          if (isStr && el.getAttribute && el.getAttribute(attr)){                                                      // 151\n            return el;                                                                                                 // 152\n          } else if(!isStr && el === attr){                                                                            // 153\n            return el;                                                                                                 // 154\n          }                                                                                                            // 155\n          el = el.parentNode;                                                                                          // 156\n        }                                                                                                              // 157\n        return null;                                                                                                   // 158\n      }                                                                                                                // 159\n    },                                                                                                                 // 160\n    action = {                                                                                                         // 161\n      translate: {                                                                                                     // 162\n        get: {                                                                                                         // 163\n          matrix: function(index) {                                                                                    // 164\n                                                                                                                       // 165\n            if( !utils.canTransform() ){                                                                               // 166\n              return parseInt(settings.element.style.left, 10);                                                        // 167\n            } else {                                                                                                   // 168\n              var matrix = win.getComputedStyle(settings.element)[cache.vendor+'Transform'].match(/\\((.*)\\)/),         // 169\n              ieOffset = 8;                                                                                            // 170\n              if (matrix) {                                                                                            // 171\n                matrix = matrix[1].split(',');                                                                         // 172\n                if(matrix.length===16){                                                                                // 173\n                  index+=ieOffset;                                                                                     // 174\n                }                                                                                                      // 175\n                return parseInt(matrix[index], 10);                                                                    // 176\n              }                                                                                                        // 177\n              return 0;                                                                                                // 178\n            }                                                                                                          // 179\n          }                                                                                                            // 180\n        },                                                                                                             // 181\n        easeCallback: function(){                                                                                      // 182\n          settings.element.style[cache.vendor+'Transition'] = '';                                                      // 183\n          cache.translation = action.translate.get.matrix(4);                                                          // 184\n          cache.easing = false;                                                                                        // 185\n          clearInterval(cache.animatingInterval);                                                                      // 186\n                                                                                                                       // 187\n          if(cache.easingTo===0){                                                                                      // 188\n            utils.klass.remove(doc.body, 'snapjs-right');                                                              // 189\n            utils.klass.remove(doc.body, 'snapjs-left');                                                               // 190\n          }                                                                                                            // 191\n                                                                                                                       // 192\n          utils.dispatchEvent('animated');                                                                             // 193\n          utils.events.removeEvent(settings.element, utils.transitionCallback(), action.translate.easeCallback);       // 194\n        },                                                                                                             // 195\n        easeTo: function(n) {                                                                                          // 196\n                                                                                                                       // 197\n          if( !utils.canTransform() ){                                                                                 // 198\n            cache.translation = n;                                                                                     // 199\n            action.translate.x(n);                                                                                     // 200\n          } else {                                                                                                     // 201\n            cache.easing = true;                                                                                       // 202\n            cache.easingTo = n;                                                                                        // 203\n                                                                                                                       // 204\n            settings.element.style[cache.vendor+'Transition'] = 'all ' + settings.transitionSpeed + 's ' + settings.easing;\n                                                                                                                       // 206\n            cache.animatingInterval = setInterval(function() {                                                         // 207\n              utils.dispatchEvent('animating');                                                                        // 208\n            }, 1);                                                                                                     // 209\n                                                                                                                       // 210\n            utils.events.addEvent(settings.element, utils.transitionCallback(), action.translate.easeCallback);        // 211\n            action.translate.x(n);                                                                                     // 212\n          }                                                                                                            // 213\n          if(n===0){                                                                                                   // 214\n            settings.element.style[cache.vendor+'Transform'] = '';                                                     // 215\n          }                                                                                                            // 216\n        },                                                                                                             // 217\n        x: function(n) {                                                                                               // 218\n          if( (settings.disable==='left' && n>0) ||                                                                    // 219\n            (settings.disable==='right' && n<0)                                                                        // 220\n          ){ return; }                                                                                                 // 221\n                                                                                                                       // 222\n          if( !settings.hyperextensible ){                                                                             // 223\n            if( n===settings.maxPosition || n>settings.maxPosition ){                                                  // 224\n              n=settings.maxPosition;                                                                                  // 225\n            } else if( n===settings.minPosition || n<settings.minPosition ){                                           // 226\n              n=settings.minPosition;                                                                                  // 227\n            }                                                                                                          // 228\n          }                                                                                                            // 229\n                                                                                                                       // 230\n          n = parseInt(n, 10);                                                                                         // 231\n          if(isNaN(n)){                                                                                                // 232\n            n = 0;                                                                                                     // 233\n          }                                                                                                            // 234\n                                                                                                                       // 235\n          if( utils.canTransform() ){                                                                                  // 236\n            var theTranslate = 'translate3d(' + n + 'px, 0,0)';                                                        // 237\n            settings.element.style[cache.vendor+'Transform'] = theTranslate;                                           // 238\n          } else {                                                                                                     // 239\n            settings.element.style.width = (win.innerWidth || doc.documentElement.clientWidth)+'px';                   // 240\n                                                                                                                       // 241\n            settings.element.style.left = n+'px';                                                                      // 242\n            settings.element.style.right = '';                                                                         // 243\n          }                                                                                                            // 244\n        }                                                                                                              // 245\n      },                                                                                                               // 246\n      drag: {                                                                                                          // 247\n        listen: function() {                                                                                           // 248\n          cache.translation = 0;                                                                                       // 249\n          cache.easing = false;                                                                                        // 250\n          utils.events.addEvent(settings.element, utils.eventType('down'), action.drag.startDrag);                     // 251\n          utils.events.addEvent(settings.element, utils.eventType('move'), action.drag.dragging);                      // 252\n          utils.events.addEvent(settings.element, utils.eventType('up'), action.drag.endDrag);                         // 253\n        },                                                                                                             // 254\n        stopListening: function() {                                                                                    // 255\n          utils.events.removeEvent(settings.element, utils.eventType('down'), action.drag.startDrag);                  // 256\n          utils.events.removeEvent(settings.element, utils.eventType('move'), action.drag.dragging);                   // 257\n          utils.events.removeEvent(settings.element, utils.eventType('up'), action.drag.endDrag);                      // 258\n        },                                                                                                             // 259\n        startDrag: function(e) {                                                                                       // 260\n          // No drag on ignored elements                                                                               // 261\n          var target = e.target ? e.target : e.srcElement,                                                             // 262\n          ignoreParent = utils.parentUntil(target, 'data-snap-ignore');                                                // 263\n                                                                                                                       // 264\n          if (ignoreParent) {                                                                                          // 265\n            utils.dispatchEvent('ignore');                                                                             // 266\n            return;                                                                                                    // 267\n          }                                                                                                            // 268\n                                                                                                                       // 269\n                                                                                                                       // 270\n          if(settings.dragger){                                                                                        // 271\n            var dragParent = utils.parentUntil(target, settings.dragger);                                              // 272\n                                                                                                                       // 273\n            // Only use dragger if we're in a closed state                                                             // 274\n            if( !dragParent &&                                                                                         // 275\n              (cache.translation !== settings.minPosition &&                                                           // 276\n                cache.translation !== settings.maxPosition                                                             // 277\n              )){                                                                                                      // 278\n                return;                                                                                                // 279\n              }                                                                                                        // 280\n            }                                                                                                          // 281\n                                                                                                                       // 282\n            utils.dispatchEvent('start');                                                                              // 283\n            settings.element.style[cache.vendor+'Transition'] = '';                                                    // 284\n            cache.isDragging = true;                                                                                   // 285\n            cache.hasIntent = null;                                                                                    // 286\n            cache.intentChecked = false;                                                                               // 287\n            cache.startDragX = utils.page('X', e);                                                                     // 288\n            cache.startDragY = utils.page('Y', e);                                                                     // 289\n            cache.dragWatchers = {                                                                                     // 290\n              current: 0,                                                                                              // 291\n              last: 0,                                                                                                 // 292\n              hold: 0,                                                                                                 // 293\n              state: ''                                                                                                // 294\n            };                                                                                                         // 295\n            cache.simpleStates = {                                                                                     // 296\n              opening: null,                                                                                           // 297\n              towards: null,                                                                                           // 298\n              hyperExtending: null,                                                                                    // 299\n              halfway: null,                                                                                           // 300\n              flick: null,                                                                                             // 301\n              translation: {                                                                                           // 302\n                absolute: 0,                                                                                           // 303\n                relative: 0,                                                                                           // 304\n                sinceDirectionChange: 0,                                                                               // 305\n                percentage: 0                                                                                          // 306\n              }                                                                                                        // 307\n            };                                                                                                         // 308\n          },                                                                                                           // 309\n          dragging: function(e) {                                                                                      // 310\n            if (cache.isDragging && settings.touchToDrag) {                                                            // 311\n                                                                                                                       // 312\n              var thePageX = utils.page('X', e),                                                                       // 313\n              thePageY = utils.page('Y', e),                                                                           // 314\n              translated = cache.translation,                                                                          // 315\n              absoluteTranslation = action.translate.get.matrix(4),                                                    // 316\n              whileDragX = thePageX - cache.startDragX,                                                                // 317\n              openingLeft = absoluteTranslation > 0,                                                                   // 318\n              translateTo = whileDragX,                                                                                // 319\n              diff;                                                                                                    // 320\n                                                                                                                       // 321\n              // Shown no intent already                                                                               // 322\n              if((cache.intentChecked && !cache.hasIntent)){                                                           // 323\n                return;                                                                                                // 324\n              }                                                                                                        // 325\n                                                                                                                       // 326\n              if(settings.addBodyClasses){                                                                             // 327\n                if((absoluteTranslation)>0){                                                                           // 328\n                  utils.klass.add(doc.body, 'snapjs-left');                                                            // 329\n                  utils.klass.remove(doc.body, 'snapjs-right');                                                        // 330\n                } else if((absoluteTranslation)<0){                                                                    // 331\n                  utils.klass.add(doc.body, 'snapjs-right');                                                           // 332\n                  utils.klass.remove(doc.body, 'snapjs-left');                                                         // 333\n                }                                                                                                      // 334\n              }                                                                                                        // 335\n                                                                                                                       // 336\n              if (cache.hasIntent === false || cache.hasIntent === null) {                                             // 337\n                var deg = utils.angleOfDrag(thePageX, thePageY),                                                       // 338\n                inRightRange = (deg >= 0 && deg <= settings.slideIntent) || (deg <= 360 && deg > (360 - settings.slideIntent)),\n                inLeftRange = (deg >= 180 && deg <= (180 + settings.slideIntent)) || (deg <= 180 && deg >= (180 - settings.slideIntent));\n                if (!inLeftRange && !inRightRange) {                                                                   // 341\n                  cache.hasIntent = false;                                                                             // 342\n                } else {                                                                                               // 343\n                  cache.hasIntent = true;                                                                              // 344\n                }                                                                                                      // 345\n                cache.intentChecked = true;                                                                            // 346\n              }                                                                                                        // 347\n                                                                                                                       // 348\n              if (                                                                                                     // 349\n                (settings.minDragDistance>=Math.abs(thePageX-cache.startDragX)) || // Has user met minimum drag distance?\n                (cache.hasIntent === false)                                                                            // 351\n              ) {                                                                                                      // 352\n                return;                                                                                                // 353\n              }                                                                                                        // 354\n                                                                                                                       // 355\n              utils.events.prevent(e);                                                                                 // 356\n              utils.dispatchEvent('drag');                                                                             // 357\n                                                                                                                       // 358\n              cache.dragWatchers.current = thePageX;                                                                   // 359\n              // Determine which direction we are going                                                                // 360\n              if (cache.dragWatchers.last > thePageX) {                                                                // 361\n                if (cache.dragWatchers.state !== 'left') {                                                             // 362\n                  cache.dragWatchers.state = 'left';                                                                   // 363\n                  cache.dragWatchers.hold = thePageX;                                                                  // 364\n                }                                                                                                      // 365\n                cache.dragWatchers.last = thePageX;                                                                    // 366\n              } else if (cache.dragWatchers.last < thePageX) {                                                         // 367\n                if (cache.dragWatchers.state !== 'right') {                                                            // 368\n                  cache.dragWatchers.state = 'right';                                                                  // 369\n                  cache.dragWatchers.hold = thePageX;                                                                  // 370\n                }                                                                                                      // 371\n                cache.dragWatchers.last = thePageX;                                                                    // 372\n              }                                                                                                        // 373\n              if (openingLeft) {                                                                                       // 374\n                // Pulling too far to the right                                                                        // 375\n                if (settings.maxPosition < absoluteTranslation) {                                                      // 376\n                  diff = (absoluteTranslation - settings.maxPosition) * settings.resistance;                           // 377\n                  translateTo = whileDragX - diff;                                                                     // 378\n                }                                                                                                      // 379\n                cache.simpleStates = {                                                                                 // 380\n                  opening: 'left',                                                                                     // 381\n                  towards: cache.dragWatchers.state,                                                                   // 382\n                  hyperExtending: settings.maxPosition < absoluteTranslation,                                          // 383\n                  halfway: absoluteTranslation > (settings.maxPosition / 2),                                           // 384\n                  flick: Math.abs(cache.dragWatchers.current - cache.dragWatchers.hold) > settings.flickThreshold,     // 385\n                  translation: {                                                                                       // 386\n                    absolute: absoluteTranslation,                                                                     // 387\n                    relative: whileDragX,                                                                              // 388\n                    sinceDirectionChange: (cache.dragWatchers.current - cache.dragWatchers.hold),                      // 389\n                    percentage: (absoluteTranslation/settings.maxPosition)*100                                         // 390\n                  }                                                                                                    // 391\n                };                                                                                                     // 392\n              } else {                                                                                                 // 393\n                // Pulling too far to the left                                                                         // 394\n                if (settings.minPosition > absoluteTranslation) {                                                      // 395\n                  diff = (absoluteTranslation - settings.minPosition) * settings.resistance;                           // 396\n                  translateTo = whileDragX - diff;                                                                     // 397\n                }                                                                                                      // 398\n                cache.simpleStates = {                                                                                 // 399\n                  opening: 'right',                                                                                    // 400\n                  towards: cache.dragWatchers.state,                                                                   // 401\n                  hyperExtending: settings.minPosition > absoluteTranslation,                                          // 402\n                  halfway: absoluteTranslation < (settings.minPosition / 2),                                           // 403\n                  flick: Math.abs(cache.dragWatchers.current - cache.dragWatchers.hold) > settings.flickThreshold,     // 404\n                  translation: {                                                                                       // 405\n                    absolute: absoluteTranslation,                                                                     // 406\n                    relative: whileDragX,                                                                              // 407\n                    sinceDirectionChange: (cache.dragWatchers.current - cache.dragWatchers.hold),                      // 408\n                    percentage: (absoluteTranslation/settings.minPosition)*100                                         // 409\n                  }                                                                                                    // 410\n                };                                                                                                     // 411\n              }                                                                                                        // 412\n              action.translate.x(translateTo + translated);                                                            // 413\n            }                                                                                                          // 414\n          },                                                                                                           // 415\n          endDrag: function(e) {                                                                                       // 416\n            if (cache.isDragging) {                                                                                    // 417\n              utils.dispatchEvent('end');                                                                              // 418\n              var translated = action.translate.get.matrix(4);                                                         // 419\n                                                                                                                       // 420\n              // Tap Close                                                                                             // 421\n              if (cache.dragWatchers.current === 0 && translated !== 0 && settings.tapToClose) {                       // 422\n                utils.dispatchEvent('close');                                                                          // 423\n                utils.events.prevent(e);                                                                               // 424\n                action.translate.easeTo(0);                                                                            // 425\n                cache.isDragging = false;                                                                              // 426\n                cache.startDragX = 0;                                                                                  // 427\n                return;                                                                                                // 428\n              }                                                                                                        // 429\n                                                                                                                       // 430\n              // Revealing Left                                                                                        // 431\n              if (cache.simpleStates.opening === 'left') {                                                             // 432\n                // Halfway, Flicking, or Too Far Out                                                                   // 433\n                if ((cache.simpleStates.halfway || cache.simpleStates.hyperExtending || cache.simpleStates.flick)) {   // 434\n                  if (cache.simpleStates.flick && cache.simpleStates.towards === 'left') { // Flicking Closed          // 435\n                    action.translate.easeTo(0);                                                                        // 436\n                  } else if (                                                                                          // 437\n                    (cache.simpleStates.flick && cache.simpleStates.towards === 'right') || // Flicking Open OR        // 438\n                    (cache.simpleStates.halfway || cache.simpleStates.hyperExtending) // At least halfway open OR hyperextending\n                  ) {                                                                                                  // 440\n                    action.translate.easeTo(settings.maxPosition); // Open Left                                        // 441\n                  }                                                                                                    // 442\n                } else {                                                                                               // 443\n                  action.translate.easeTo(0); // Close Left                                                            // 444\n                }                                                                                                      // 445\n                // Revealing Right                                                                                     // 446\n              } else if (cache.simpleStates.opening === 'right') {                                                     // 447\n                // Halfway, Flicking, or Too Far Out                                                                   // 448\n                if ((cache.simpleStates.halfway || cache.simpleStates.hyperExtending || cache.simpleStates.flick)) {   // 449\n                  if (cache.simpleStates.flick && cache.simpleStates.towards === 'right') { // Flicking Closed         // 450\n                    action.translate.easeTo(0);                                                                        // 451\n                  } else if (                                                                                          // 452\n                    (cache.simpleStates.flick && cache.simpleStates.towards === 'left') || // Flicking Open OR         // 453\n                    (cache.simpleStates.halfway || cache.simpleStates.hyperExtending) // At least halfway open OR hyperextending\n                  ) {                                                                                                  // 455\n                    action.translate.easeTo(settings.minPosition); // Open Right                                       // 456\n                  }                                                                                                    // 457\n                } else {                                                                                               // 458\n                  action.translate.easeTo(0); // Close Right                                                           // 459\n                }                                                                                                      // 460\n              }                                                                                                        // 461\n              cache.isDragging = false;                                                                                // 462\n              cache.startDragX = utils.page('X', e);                                                                   // 463\n            }                                                                                                          // 464\n          }                                                                                                            // 465\n        }                                                                                                              // 466\n      },                                                                                                               // 467\n      init = function(opts) {                                                                                          // 468\n        if (opts.element) {                                                                                            // 469\n          utils.deepExtend(settings, opts);                                                                            // 470\n          cache.vendor = utils.vendor();                                                                               // 471\n          action.drag.listen();                                                                                        // 472\n        }                                                                                                              // 473\n      };                                                                                                               // 474\n      /*                                                                                                               // 475\n      * Public                                                                                                         // 476\n      */                                                                                                               // 477\n      this.open = function(side) {                                                                                     // 478\n        utils.dispatchEvent('open');                                                                                   // 479\n        utils.klass.remove(doc.body, 'snapjs-expand-left');                                                            // 480\n        utils.klass.remove(doc.body, 'snapjs-expand-right');                                                           // 481\n                                                                                                                       // 482\n        if (side === 'left') {                                                                                         // 483\n          cache.simpleStates.opening = 'left';                                                                         // 484\n          cache.simpleStates.towards = 'right';                                                                        // 485\n          utils.klass.add(doc.body, 'snapjs-left');                                                                    // 486\n          utils.klass.remove(doc.body, 'snapjs-right');                                                                // 487\n          action.translate.easeTo(settings.maxPosition);                                                               // 488\n        } else if (side === 'right') {                                                                                 // 489\n          cache.simpleStates.opening = 'right';                                                                        // 490\n          cache.simpleStates.towards = 'left';                                                                         // 491\n          utils.klass.remove(doc.body, 'snapjs-left');                                                                 // 492\n          utils.klass.add(doc.body, 'snapjs-right');                                                                   // 493\n          action.translate.easeTo(settings.minPosition);                                                               // 494\n        }                                                                                                              // 495\n      };                                                                                                               // 496\n      this.close = function() {                                                                                        // 497\n        utils.dispatchEvent('close');                                                                                  // 498\n        action.translate.easeTo(0);                                                                                    // 499\n      };                                                                                                               // 500\n      this.expand = function(side){                                                                                    // 501\n        var to = win.innerWidth || doc.documentElement.clientWidth;                                                    // 502\n                                                                                                                       // 503\n        if(side==='left'){                                                                                             // 504\n          utils.dispatchEvent('expandLeft');                                                                           // 505\n          utils.klass.add(doc.body, 'snapjs-expand-left');                                                             // 506\n          utils.klass.remove(doc.body, 'snapjs-expand-right');                                                         // 507\n        } else {                                                                                                       // 508\n          utils.dispatchEvent('expandRight');                                                                          // 509\n          utils.klass.add(doc.body, 'snapjs-expand-right');                                                            // 510\n          utils.klass.remove(doc.body, 'snapjs-expand-left');                                                          // 511\n          to *= -1;                                                                                                    // 512\n        }                                                                                                              // 513\n        action.translate.easeTo(to);                                                                                   // 514\n      };                                                                                                               // 515\n                                                                                                                       // 516\n      this.on = function(evt, fn) {                                                                                    // 517\n        eventList[evt] = fn;                                                                                           // 518\n        return this;                                                                                                   // 519\n      };                                                                                                               // 520\n      this.off = function(evt) {                                                                                       // 521\n        if (eventList[evt]) {                                                                                          // 522\n          eventList[evt] = false;                                                                                      // 523\n        }                                                                                                              // 524\n      };                                                                                                               // 525\n                                                                                                                       // 526\n      this.enable = function() {                                                                                       // 527\n        utils.dispatchEvent('enable');                                                                                 // 528\n        action.drag.listen();                                                                                          // 529\n      };                                                                                                               // 530\n      this.disable = function() {                                                                                      // 531\n        utils.dispatchEvent('disable');                                                                                // 532\n        action.drag.stopListening();                                                                                   // 533\n      };                                                                                                               // 534\n                                                                                                                       // 535\n      this.settings = function(opts){                                                                                  // 536\n        utils.deepExtend(settings, opts);                                                                              // 537\n      };                                                                                                               // 538\n                                                                                                                       // 539\n      this.state = function() {                                                                                        // 540\n        var state,                                                                                                     // 541\n        fromLeft = action.translate.get.matrix(4);                                                                     // 542\n        if (fromLeft === settings.maxPosition) {                                                                       // 543\n          state = 'left';                                                                                              // 544\n        } else if (fromLeft === settings.minPosition) {                                                                // 545\n          state = 'right';                                                                                             // 546\n        } else {                                                                                                       // 547\n          state = 'closed';                                                                                            // 548\n        }                                                                                                              // 549\n        return {                                                                                                       // 550\n          state: state,                                                                                                // 551\n          info: cache.simpleStates                                                                                     // 552\n        };                                                                                                             // 553\n      };                                                                                                               // 554\n      init(userOpts);                                                                                                  // 555\n    };                                                                                                                 // 556\n    if ((typeof module !== 'undefined') && module.exports) {                                                           // 557\n      module.exports = Snap;                                                                                           // 558\n    }                                                                                                                  // 559\n    if (typeof ender === 'undefined') {                                                                                // 560\n      this.Snap = Snap;                                                                                                // 561\n    }                                                                                                                  // 562\n    if ((typeof define === \"function\") && define.amd) {                                                                // 563\n      define(\"snap\", [], function() {                                                                                  // 564\n        return Snap;                                                                                                   // 565\n      });                                                                                                              // 566\n    }                                                                                                                  // 567\n  }).call(this, window, document);                                                                                     // 568\n                                                                                                                       // 569\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/vendor/slick.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/*                                                                                                                     // 1\n     _ _      _       _                                                                                                // 2\n ___| (_) ___| | __  (_)___                                                                                            // 3\n/ __| | |/ __| |/ /  | / __|                                                                                           // 4\n\\__ \\ | | (__|   < _ | \\__ \\\n|___/_|_|\\___|_|\\_(_)/ |___/                                                                                           // 6\n                   |__/                                                                                                // 7\n                                                                                                                       // 8\n Version: 1.4.1                                                                                                        // 9\n  Author: Ken Wheeler                                                                                                  // 10\n Website: http://kenwheeler.github.io                                                                                  // 11\n    Docs: http://kenwheeler.github.io/slick                                                                            // 12\n    Repo: http://github.com/kenwheeler/slick                                                                           // 13\n  Issues: http://github.com/kenwheeler/slick/issues                                                                    // 14\n                                                                                                                       // 15\n */                                                                                                                    // 16\n                                                                                                                       // 17\n/* global window, document, define, jQuery, setInterval, clearInterval */                                              // 18\n                                                                                                                       // 19\n(function(factory) {                                                                                                   // 20\n    'use strict';                                                                                                      // 21\n    if (typeof define === 'function' && define.amd) {                                                                  // 22\n        define(['jquery'], factory);                                                                                   // 23\n    } else if (typeof exports !== 'undefined') {                                                                       // 24\n        module.exports = factory(require('jquery'));                                                                   // 25\n    } else {                                                                                                           // 26\n        factory(jQuery);                                                                                               // 27\n    }                                                                                                                  // 28\n                                                                                                                       // 29\n}(function($) {                                                                                                        // 30\n    'use strict';                                                                                                      // 31\n    var Slick = window.Slick || {};                                                                                    // 32\n                                                                                                                       // 33\n    Slick = (function() {                                                                                              // 34\n                                                                                                                       // 35\n        var instanceUid = 0;                                                                                           // 36\n                                                                                                                       // 37\n        function Slick(element, settings) {                                                                            // 38\n                                                                                                                       // 39\n            var _ = this,                                                                                              // 40\n                dataSettings, responsiveSettings, breakpoint;                                                          // 41\n                                                                                                                       // 42\n            _.defaults = {                                                                                             // 43\n                accessibility: true,                                                                                   // 44\n                adaptiveHeight: false,                                                                                 // 45\n                appendArrows: $(element),                                                                              // 46\n                appendDots: $(element),                                                                                // 47\n                arrows: true,                                                                                          // 48\n                asNavFor: null,                                                                                        // 49\n                prevArrow: '<button type=\"button\" data-role=\"none\" class=\"slick-prev\" aria-label=\"previous\">Previous</button>',\n                nextArrow: '<button type=\"button\" data-role=\"none\" class=\"slick-next\" aria-label=\"next\">Next</button>',\n                autoplay: false,                                                                                       // 52\n                autoplaySpeed: 3000,                                                                                   // 53\n                centerMode: false,                                                                                     // 54\n                centerPadding: '50px',                                                                                 // 55\n                cssEase: 'ease',                                                                                       // 56\n                customPaging: function(slider, i) {                                                                    // 57\n                    return '<button type=\"button\" data-role=\"none\">' + (i + 1) + '</button>';                          // 58\n                },                                                                                                     // 59\n                dots: false,                                                                                           // 60\n                dotsClass: 'slick-dots',                                                                               // 61\n                draggable: true,                                                                                       // 62\n                easing: 'linear',                                                                                      // 63\n                edgeFriction: 0.35,                                                                                    // 64\n                fade: false,                                                                                           // 65\n                focusOnSelect: false,                                                                                  // 66\n                infinite: true,                                                                                        // 67\n                initialSlide: 0,                                                                                       // 68\n                lazyLoad: 'ondemand',                                                                                  // 69\n                mobileFirst: false,                                                                                    // 70\n                pauseOnHover: true,                                                                                    // 71\n                pauseOnDotsHover: false,                                                                               // 72\n                respondTo: 'window',                                                                                   // 73\n                responsive: null,                                                                                      // 74\n                rtl: false,                                                                                            // 75\n                slide: '',                                                                                             // 76\n                slidesToShow: 1,                                                                                       // 77\n                slidesToScroll: 1,                                                                                     // 78\n                speed: 500,                                                                                            // 79\n                swipe: true,                                                                                           // 80\n                swipeToSlide: false,                                                                                   // 81\n                touchMove: true,                                                                                       // 82\n                touchThreshold: 5,                                                                                     // 83\n                useCSS: true,                                                                                          // 84\n                variableWidth: false,                                                                                  // 85\n                vertical: false,                                                                                       // 86\n                waitForAnimate: true                                                                                   // 87\n            };                                                                                                         // 88\n                                                                                                                       // 89\n            _.initials = {                                                                                             // 90\n                animating: false,                                                                                      // 91\n                dragging: false,                                                                                       // 92\n                autoPlayTimer: null,                                                                                   // 93\n                currentDirection: 0,                                                                                   // 94\n                currentLeft: null,                                                                                     // 95\n                currentSlide: 0,                                                                                       // 96\n                direction: 1,                                                                                          // 97\n                $dots: null,                                                                                           // 98\n                listWidth: null,                                                                                       // 99\n                listHeight: null,                                                                                      // 100\n                loadIndex: 0,                                                                                          // 101\n                $nextArrow: null,                                                                                      // 102\n                $prevArrow: null,                                                                                      // 103\n                slideCount: null,                                                                                      // 104\n                slideWidth: null,                                                                                      // 105\n                $slideTrack: null,                                                                                     // 106\n                $slides: null,                                                                                         // 107\n                sliding: false,                                                                                        // 108\n                slideOffset: 0,                                                                                        // 109\n                swipeLeft: null,                                                                                       // 110\n                $list: null,                                                                                           // 111\n                touchObject: {},                                                                                       // 112\n                transformsEnabled: false                                                                               // 113\n            };                                                                                                         // 114\n                                                                                                                       // 115\n            $.extend(_, _.initials);                                                                                   // 116\n                                                                                                                       // 117\n            _.activeBreakpoint = null;                                                                                 // 118\n            _.animType = null;                                                                                         // 119\n            _.animProp = null;                                                                                         // 120\n            _.breakpoints = [];                                                                                        // 121\n            _.breakpointSettings = [];                                                                                 // 122\n            _.cssTransitions = false;                                                                                  // 123\n            _.hidden = \"hidden\";                                                                                       // 124\n            _.paused = false;                                                                                          // 125\n            _.positionProp = null;                                                                                     // 126\n            _.respondTo = null;                                                                                        // 127\n            _.shouldClick = true;                                                                                      // 128\n            _.$slider = $(element);                                                                                    // 129\n            _.$slidesCache = null;                                                                                     // 130\n            _.transformType = null;                                                                                    // 131\n            _.transitionType = null;                                                                                   // 132\n            _.visibilityChange = \"visibilitychange\";                                                                   // 133\n            _.windowWidth = 0;                                                                                         // 134\n            _.windowTimer = null;                                                                                      // 135\n                                                                                                                       // 136\n            dataSettings = $(element).data('slick') || {};                                                             // 137\n                                                                                                                       // 138\n            _.options = $.extend({}, _.defaults, dataSettings, settings);                                              // 139\n                                                                                                                       // 140\n            _.currentSlide = _.options.initialSlide;                                                                   // 141\n                                                                                                                       // 142\n            _.originalSettings = _.options;                                                                            // 143\n            responsiveSettings = _.options.responsive || null;                                                         // 144\n                                                                                                                       // 145\n            if (responsiveSettings && responsiveSettings.length > -1) {                                                // 146\n                _.respondTo = _.options.respondTo || \"window\";                                                         // 147\n                for (breakpoint in responsiveSettings) {                                                               // 148\n                    if (responsiveSettings.hasOwnProperty(breakpoint)) {                                               // 149\n                        _.breakpoints.push(responsiveSettings[                                                         // 150\n                            breakpoint].breakpoint);                                                                   // 151\n                        _.breakpointSettings[responsiveSettings[                                                       // 152\n                            breakpoint].breakpoint] =                                                                  // 153\n                            responsiveSettings[breakpoint].settings;                                                   // 154\n                    }                                                                                                  // 155\n                }                                                                                                      // 156\n                _.breakpoints.sort(function(a, b) {                                                                    // 157\n                    if(_.options.mobileFirst === true) {                                                               // 158\n                        return a - b;                                                                                  // 159\n                    } else {                                                                                           // 160\n                        return b - a;                                                                                  // 161\n                    }                                                                                                  // 162\n                });                                                                                                    // 163\n            }                                                                                                          // 164\n                                                                                                                       // 165\n            if (typeof document.mozHidden !== \"undefined\") {                                                           // 166\n                _.hidden = \"mozHidden\";                                                                                // 167\n                _.visibilityChange = \"mozvisibilitychange\";                                                            // 168\n            } else if (typeof document.msHidden !== \"undefined\") {                                                     // 169\n                _.hidden = \"msHidden\";                                                                                 // 170\n                _.visibilityChange = \"msvisibilitychange\";                                                             // 171\n            } else if (typeof document.webkitHidden !== \"undefined\") {                                                 // 172\n                _.hidden = \"webkitHidden\";                                                                             // 173\n                _.visibilityChange = \"webkitvisibilitychange\";                                                         // 174\n            }                                                                                                          // 175\n                                                                                                                       // 176\n            _.autoPlay = $.proxy(_.autoPlay, _);                                                                       // 177\n            _.autoPlayClear = $.proxy(_.autoPlayClear, _);                                                             // 178\n            _.changeSlide = $.proxy(_.changeSlide, _);                                                                 // 179\n            _.clickHandler = $.proxy(_.clickHandler, _);                                                               // 180\n            _.selectHandler = $.proxy(_.selectHandler, _);                                                             // 181\n            _.setPosition = $.proxy(_.setPosition, _);                                                                 // 182\n            _.swipeHandler = $.proxy(_.swipeHandler, _);                                                               // 183\n            _.dragHandler = $.proxy(_.dragHandler, _);                                                                 // 184\n            _.keyHandler = $.proxy(_.keyHandler, _);                                                                   // 185\n            _.autoPlayIterator = $.proxy(_.autoPlayIterator, _);                                                       // 186\n                                                                                                                       // 187\n            _.instanceUid = instanceUid++;                                                                             // 188\n                                                                                                                       // 189\n            // A simple way to check for HTML strings                                                                  // 190\n            // Strict HTML recognition (must start with <)                                                             // 191\n            // Extracted from jQuery v1.11 source                                                                      // 192\n            _.htmlExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*)$/;                                                                  // 193\n                                                                                                                       // 194\n            _.init();                                                                                                  // 195\n                                                                                                                       // 196\n            _.checkResponsive(true);                                                                                   // 197\n                                                                                                                       // 198\n        }                                                                                                              // 199\n                                                                                                                       // 200\n        return Slick;                                                                                                  // 201\n                                                                                                                       // 202\n    }());                                                                                                              // 203\n                                                                                                                       // 204\n    Slick.prototype.addSlide = Slick.prototype.slickAdd = function(markup, index, addBefore) {                         // 205\n                                                                                                                       // 206\n        var _ = this;                                                                                                  // 207\n                                                                                                                       // 208\n        if (typeof(index) === 'boolean') {                                                                             // 209\n            addBefore = index;                                                                                         // 210\n            index = null;                                                                                              // 211\n        } else if (index < 0 || (index >= _.slideCount)) {                                                             // 212\n            return false;                                                                                              // 213\n        }                                                                                                              // 214\n                                                                                                                       // 215\n        _.unload();                                                                                                    // 216\n                                                                                                                       // 217\n        if (typeof(index) === 'number') {                                                                              // 218\n            if (index === 0 && _.$slides.length === 0) {                                                               // 219\n                $(markup).appendTo(_.$slideTrack);                                                                     // 220\n            } else if (addBefore) {                                                                                    // 221\n                $(markup).insertBefore(_.$slides.eq(index));                                                           // 222\n            } else {                                                                                                   // 223\n                $(markup).insertAfter(_.$slides.eq(index));                                                            // 224\n            }                                                                                                          // 225\n        } else {                                                                                                       // 226\n            if (addBefore === true) {                                                                                  // 227\n                $(markup).prependTo(_.$slideTrack);                                                                    // 228\n            } else {                                                                                                   // 229\n                $(markup).appendTo(_.$slideTrack);                                                                     // 230\n            }                                                                                                          // 231\n        }                                                                                                              // 232\n                                                                                                                       // 233\n        _.$slides = _.$slideTrack.children(this.options.slide);                                                        // 234\n                                                                                                                       // 235\n        _.$slideTrack.children(this.options.slide).detach();                                                           // 236\n                                                                                                                       // 237\n        _.$slideTrack.append(_.$slides);                                                                               // 238\n                                                                                                                       // 239\n        _.$slides.each(function(index, element) {                                                                      // 240\n            $(element).attr(\"data-slick-index\",index);                                                                 // 241\n        });                                                                                                            // 242\n                                                                                                                       // 243\n        _.$slidesCache = _.$slides;                                                                                    // 244\n                                                                                                                       // 245\n        _.reinit();                                                                                                    // 246\n                                                                                                                       // 247\n    };                                                                                                                 // 248\n                                                                                                                       // 249\n    Slick.prototype.animateHeight = function(){                                                                        // 250\n        var _ = this;                                                                                                  // 251\n        if(_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {        // 252\n            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);                                         // 253\n            _.$list.animate({height: targetHeight},_.options.speed);                                                   // 254\n        }                                                                                                              // 255\n    };                                                                                                                 // 256\n                                                                                                                       // 257\n    Slick.prototype.animateSlide = function(targetLeft, callback) {                                                    // 258\n                                                                                                                       // 259\n        var animProps = {}, _ = this;                                                                                  // 260\n                                                                                                                       // 261\n        _.animateHeight();                                                                                             // 262\n                                                                                                                       // 263\n        if (_.options.rtl === true && _.options.vertical === false) {                                                  // 264\n            targetLeft = -targetLeft;                                                                                  // 265\n        }                                                                                                              // 266\n        if (_.transformsEnabled === false) {                                                                           // 267\n            if (_.options.vertical === false) {                                                                        // 268\n                _.$slideTrack.animate({                                                                                // 269\n                    left: targetLeft                                                                                   // 270\n                }, _.options.speed, _.options.easing, callback);                                                       // 271\n            } else {                                                                                                   // 272\n                _.$slideTrack.animate({                                                                                // 273\n                    top: targetLeft                                                                                    // 274\n                }, _.options.speed, _.options.easing, callback);                                                       // 275\n            }                                                                                                          // 276\n                                                                                                                       // 277\n        } else {                                                                                                       // 278\n                                                                                                                       // 279\n            if (_.cssTransitions === false) {                                                                          // 280\n                if (_.options.rtl === true) {                                                                          // 281\n                    _.currentLeft = -(_.currentLeft);                                                                  // 282\n                }                                                                                                      // 283\n                $({                                                                                                    // 284\n                    animStart: _.currentLeft                                                                           // 285\n                }).animate({                                                                                           // 286\n                    animStart: targetLeft                                                                              // 287\n                }, {                                                                                                   // 288\n                    duration: _.options.speed,                                                                         // 289\n                    easing: _.options.easing,                                                                          // 290\n                    step: function(now) {                                                                              // 291\n                        now = Math.ceil(now);                                                                          // 292\n                        if (_.options.vertical === false) {                                                            // 293\n                            animProps[_.animType] = 'translate(' +                                                     // 294\n                                now + 'px, 0px)';                                                                      // 295\n                            _.$slideTrack.css(animProps);                                                              // 296\n                        } else {                                                                                       // 297\n                            animProps[_.animType] = 'translate(0px,' +                                                 // 298\n                                now + 'px)';                                                                           // 299\n                            _.$slideTrack.css(animProps);                                                              // 300\n                        }                                                                                              // 301\n                    },                                                                                                 // 302\n                    complete: function() {                                                                             // 303\n                        if (callback) {                                                                                // 304\n                            callback.call();                                                                           // 305\n                        }                                                                                              // 306\n                    }                                                                                                  // 307\n                });                                                                                                    // 308\n                                                                                                                       // 309\n            } else {                                                                                                   // 310\n                                                                                                                       // 311\n                _.applyTransition();                                                                                   // 312\n                targetLeft = Math.ceil(targetLeft);                                                                    // 313\n                                                                                                                       // 314\n                if (_.options.vertical === false) {                                                                    // 315\n                    animProps[_.animType] = 'translate3d(' + targetLeft + 'px, 0px, 0px)';                             // 316\n                } else {                                                                                               // 317\n                    animProps[_.animType] = 'translate3d(0px,' + targetLeft + 'px, 0px)';                              // 318\n                }                                                                                                      // 319\n                _.$slideTrack.css(animProps);                                                                          // 320\n                                                                                                                       // 321\n                if (callback) {                                                                                        // 322\n                    setTimeout(function() {                                                                            // 323\n                                                                                                                       // 324\n                        _.disableTransition();                                                                         // 325\n                                                                                                                       // 326\n                        callback.call();                                                                               // 327\n                    }, _.options.speed);                                                                               // 328\n                }                                                                                                      // 329\n                                                                                                                       // 330\n            }                                                                                                          // 331\n                                                                                                                       // 332\n        }                                                                                                              // 333\n                                                                                                                       // 334\n    };                                                                                                                 // 335\n                                                                                                                       // 336\n    Slick.prototype.asNavFor = function(index) {                                                                       // 337\n        var _ = this, asNavFor = _.options.asNavFor !== null ? $(_.options.asNavFor).slick('getSlick') : null;         // 338\n        if(asNavFor !== null) asNavFor.slideHandler(index, true);                                                      // 339\n    };                                                                                                                 // 340\n                                                                                                                       // 341\n    Slick.prototype.applyTransition = function(slide) {                                                                // 342\n                                                                                                                       // 343\n        var _ = this,                                                                                                  // 344\n            transition = {};                                                                                           // 345\n                                                                                                                       // 346\n        if (_.options.fade === false) {                                                                                // 347\n            transition[_.transitionType] = _.transformType + ' ' + _.options.speed + 'ms ' + _.options.cssEase;        // 348\n        } else {                                                                                                       // 349\n            transition[_.transitionType] = 'opacity ' + _.options.speed + 'ms ' + _.options.cssEase;                   // 350\n        }                                                                                                              // 351\n                                                                                                                       // 352\n        if (_.options.fade === false) {                                                                                // 353\n            _.$slideTrack.css(transition);                                                                             // 354\n        } else {                                                                                                       // 355\n            _.$slides.eq(slide).css(transition);                                                                       // 356\n        }                                                                                                              // 357\n                                                                                                                       // 358\n    };                                                                                                                 // 359\n                                                                                                                       // 360\n    Slick.prototype.autoPlay = function() {                                                                            // 361\n                                                                                                                       // 362\n        var _ = this;                                                                                                  // 363\n                                                                                                                       // 364\n        if (_.autoPlayTimer) {                                                                                         // 365\n            clearInterval(_.autoPlayTimer);                                                                            // 366\n        }                                                                                                              // 367\n                                                                                                                       // 368\n        if (_.slideCount > _.options.slidesToShow && _.paused !== true) {                                              // 369\n            _.autoPlayTimer = setInterval(_.autoPlayIterator,                                                          // 370\n                _.options.autoplaySpeed);                                                                              // 371\n        }                                                                                                              // 372\n                                                                                                                       // 373\n    };                                                                                                                 // 374\n                                                                                                                       // 375\n    Slick.prototype.autoPlayClear = function() {                                                                       // 376\n                                                                                                                       // 377\n        var _ = this;                                                                                                  // 378\n        if (_.autoPlayTimer) {                                                                                         // 379\n            clearInterval(_.autoPlayTimer);                                                                            // 380\n        }                                                                                                              // 381\n                                                                                                                       // 382\n    };                                                                                                                 // 383\n                                                                                                                       // 384\n    Slick.prototype.autoPlayIterator = function() {                                                                    // 385\n                                                                                                                       // 386\n        var _ = this;                                                                                                  // 387\n                                                                                                                       // 388\n        if (_.options.infinite === false) {                                                                            // 389\n                                                                                                                       // 390\n            if (_.direction === 1) {                                                                                   // 391\n                                                                                                                       // 392\n                if ((_.currentSlide + 1) === _.slideCount -                                                            // 393\n                    1) {                                                                                               // 394\n                    _.direction = 0;                                                                                   // 395\n                }                                                                                                      // 396\n                                                                                                                       // 397\n                _.slideHandler(_.currentSlide + _.options.slidesToScroll);                                             // 398\n                                                                                                                       // 399\n            } else {                                                                                                   // 400\n                                                                                                                       // 401\n                if ((_.currentSlide - 1 === 0)) {                                                                      // 402\n                                                                                                                       // 403\n                    _.direction = 1;                                                                                   // 404\n                                                                                                                       // 405\n                }                                                                                                      // 406\n                                                                                                                       // 407\n                _.slideHandler(_.currentSlide - _.options.slidesToScroll);                                             // 408\n                                                                                                                       // 409\n            }                                                                                                          // 410\n                                                                                                                       // 411\n        } else {                                                                                                       // 412\n                                                                                                                       // 413\n            _.slideHandler(_.currentSlide + _.options.slidesToScroll);                                                 // 414\n                                                                                                                       // 415\n        }                                                                                                              // 416\n                                                                                                                       // 417\n    };                                                                                                                 // 418\n                                                                                                                       // 419\n    Slick.prototype.buildArrows = function() {                                                                         // 420\n                                                                                                                       // 421\n        var _ = this;                                                                                                  // 422\n                                                                                                                       // 423\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {                                      // 424\n                                                                                                                       // 425\n            _.$prevArrow = $(_.options.prevArrow);                                                                     // 426\n            _.$nextArrow = $(_.options.nextArrow);                                                                     // 427\n                                                                                                                       // 428\n            if (_.htmlExpr.test(_.options.prevArrow)) {                                                                // 429\n                _.$prevArrow.appendTo(_.options.appendArrows);                                                         // 430\n            }                                                                                                          // 431\n                                                                                                                       // 432\n            if (_.htmlExpr.test(_.options.nextArrow)) {                                                                // 433\n                _.$nextArrow.appendTo(_.options.appendArrows);                                                         // 434\n            }                                                                                                          // 435\n                                                                                                                       // 436\n            if (_.options.infinite !== true) {                                                                         // 437\n                _.$prevArrow.addClass('slick-disabled');                                                               // 438\n            }                                                                                                          // 439\n                                                                                                                       // 440\n        }                                                                                                              // 441\n                                                                                                                       // 442\n    };                                                                                                                 // 443\n                                                                                                                       // 444\n    Slick.prototype.buildDots = function() {                                                                           // 445\n                                                                                                                       // 446\n        var _ = this,                                                                                                  // 447\n            i, dotString;                                                                                              // 448\n                                                                                                                       // 449\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {                                        // 450\n                                                                                                                       // 451\n            dotString = '<ul class=\"' + _.options.dotsClass + '\">';                                                    // 452\n                                                                                                                       // 453\n            for (i = 0; i <= _.getDotCount(); i += 1) {                                                                // 454\n                dotString += '<li>' + _.options.customPaging.call(this, _, i) + '</li>';                               // 455\n            }                                                                                                          // 456\n                                                                                                                       // 457\n            dotString += '</ul>';                                                                                      // 458\n                                                                                                                       // 459\n            _.$dots = $(dotString).appendTo(                                                                           // 460\n                _.options.appendDots);                                                                                 // 461\n                                                                                                                       // 462\n            _.$dots.find('li').first().addClass('slick-active').attr(\"aria-hidden\",\"false\");                           // 463\n                                                                                                                       // 464\n        }                                                                                                              // 465\n                                                                                                                       // 466\n    };                                                                                                                 // 467\n                                                                                                                       // 468\n    Slick.prototype.buildOut = function() {                                                                            // 469\n                                                                                                                       // 470\n        var _ = this;                                                                                                  // 471\n                                                                                                                       // 472\n        _.$slides = _.$slider.children(_.options.slide +                                                               // 473\n            ':not(.slick-cloned)').addClass(                                                                           // 474\n            'slick-slide');                                                                                            // 475\n        _.slideCount = _.$slides.length;                                                                               // 476\n                                                                                                                       // 477\n        _.$slides.each(function(index, element) {                                                                      // 478\n            $(element).attr(\"data-slick-index\",index);                                                                 // 479\n        });                                                                                                            // 480\n                                                                                                                       // 481\n        _.$slidesCache = _.$slides;                                                                                    // 482\n                                                                                                                       // 483\n        _.$slider.addClass('slick-slider');                                                                            // 484\n                                                                                                                       // 485\n        _.$slideTrack = (_.slideCount === 0) ?                                                                         // 486\n            $('<div class=\"slick-track\"/>').appendTo(_.$slider) :                                                      // 487\n            _.$slides.wrapAll('<div class=\"slick-track\"/>').parent();                                                  // 488\n                                                                                                                       // 489\n        _.$list = _.$slideTrack.wrap(                                                                                  // 490\n            '<div aria-live=\"polite\" class=\"slick-list\"/>').parent();                                                  // 491\n        _.$slideTrack.css('opacity', 0);                                                                               // 492\n                                                                                                                       // 493\n        if (_.options.centerMode === true || _.options.swipeToSlide === true) {                                        // 494\n            _.options.slidesToScroll = 1;                                                                              // 495\n        }                                                                                                              // 496\n                                                                                                                       // 497\n        $('img[data-lazy]', _.$slider).not('[src]').addClass('slick-loading');                                         // 498\n                                                                                                                       // 499\n        _.setupInfinite();                                                                                             // 500\n                                                                                                                       // 501\n        _.buildArrows();                                                                                               // 502\n                                                                                                                       // 503\n        _.buildDots();                                                                                                 // 504\n                                                                                                                       // 505\n        _.updateDots();                                                                                                // 506\n                                                                                                                       // 507\n        if (_.options.accessibility === true) {                                                                        // 508\n            _.$list.prop('tabIndex', 0);                                                                               // 509\n        }                                                                                                              // 510\n                                                                                                                       // 511\n        _.setSlideClasses(typeof this.currentSlide === 'number' ? this.currentSlide : 0);                              // 512\n                                                                                                                       // 513\n        if (_.options.draggable === true) {                                                                            // 514\n            _.$list.addClass('draggable');                                                                             // 515\n        }                                                                                                              // 516\n                                                                                                                       // 517\n    };                                                                                                                 // 518\n                                                                                                                       // 519\n    Slick.prototype.checkResponsive = function(initial) {                                                              // 520\n                                                                                                                       // 521\n        var _ = this,                                                                                                  // 522\n            breakpoint, targetBreakpoint, respondToWidth;                                                              // 523\n        var sliderWidth = _.$slider.width();                                                                           // 524\n        var windowWidth = window.innerWidth || $(window).width();                                                      // 525\n        if (_.respondTo === \"window\") {                                                                                // 526\n          respondToWidth = windowWidth;                                                                                // 527\n        } else if (_.respondTo === \"slider\") {                                                                         // 528\n          respondToWidth = sliderWidth;                                                                                // 529\n        } else if (_.respondTo === \"min\") {                                                                            // 530\n          respondToWidth = Math.min(windowWidth, sliderWidth);                                                         // 531\n        }                                                                                                              // 532\n                                                                                                                       // 533\n        if (_.originalSettings.responsive && _.originalSettings                                                        // 534\n            .responsive.length > -1 && _.originalSettings.responsive !== null) {                                       // 535\n                                                                                                                       // 536\n            targetBreakpoint = null;                                                                                   // 537\n                                                                                                                       // 538\n            for (breakpoint in _.breakpoints) {                                                                        // 539\n                if (_.breakpoints.hasOwnProperty(breakpoint)) {                                                        // 540\n                    if (_.originalSettings.mobileFirst === false) {                                                    // 541\n                        if (respondToWidth < _.breakpoints[breakpoint]) {                                              // 542\n                            targetBreakpoint = _.breakpoints[breakpoint];                                              // 543\n                        }                                                                                              // 544\n                    } else {                                                                                           // 545\n                        if (respondToWidth > _.breakpoints[breakpoint]) {                                              // 546\n                            targetBreakpoint = _.breakpoints[breakpoint];                                              // 547\n                        }                                                                                              // 548\n                    }                                                                                                  // 549\n                }                                                                                                      // 550\n            }                                                                                                          // 551\n                                                                                                                       // 552\n            if (targetBreakpoint !== null) {                                                                           // 553\n                if (_.activeBreakpoint !== null) {                                                                     // 554\n                    if (targetBreakpoint !== _.activeBreakpoint) {                                                     // 555\n                        _.activeBreakpoint =                                                                           // 556\n                            targetBreakpoint;                                                                          // 557\n                        if(_.breakpointSettings[targetBreakpoint] === \"unslick\") {                                     // 558\n                            _.unslick();                                                                               // 559\n                        } else {                                                                                       // 560\n                            _.options = $.extend({}, _.originalSettings,                                               // 561\n                                _.breakpointSettings[                                                                  // 562\n                                    targetBreakpoint]);                                                                // 563\n                            if(initial === true)                                                                       // 564\n                                _.currentSlide = _.options.initialSlide;                                               // 565\n                            _.refresh();                                                                               // 566\n                        }                                                                                              // 567\n                    }                                                                                                  // 568\n                } else {                                                                                               // 569\n                    _.activeBreakpoint = targetBreakpoint;                                                             // 570\n                    if(_.breakpointSettings[targetBreakpoint] === \"unslick\") {                                         // 571\n                        _.unslick();                                                                                   // 572\n                    } else {                                                                                           // 573\n                        _.options = $.extend({}, _.originalSettings,                                                   // 574\n                            _.breakpointSettings[                                                                      // 575\n                                targetBreakpoint]);                                                                    // 576\n                        if(initial === true)                                                                           // 577\n                            _.currentSlide = _.options.initialSlide;                                                   // 578\n                        _.refresh();                                                                                   // 579\n                    }                                                                                                  // 580\n                }                                                                                                      // 581\n            } else {                                                                                                   // 582\n                if (_.activeBreakpoint !== null) {                                                                     // 583\n                    _.activeBreakpoint = null;                                                                         // 584\n                    _.options = _.originalSettings;                                                                    // 585\n                    if(initial === true)                                                                               // 586\n                        _.currentSlide = _.options.initialSlide;                                                       // 587\n                    _.refresh();                                                                                       // 588\n                }                                                                                                      // 589\n            }                                                                                                          // 590\n                                                                                                                       // 591\n        }                                                                                                              // 592\n                                                                                                                       // 593\n    };                                                                                                                 // 594\n                                                                                                                       // 595\n    Slick.prototype.changeSlide = function(event, dontAnimate) {                                                       // 596\n        var _ = this,                                                                                                  // 597\n            $target = $(event.target),                                                                                 // 598\n            indexOffset, slideOffset, unevenOffset;                                                                    // 599\n                                                                                                                       // 600\n        // If target is a link, prevent default action.                                                                // 601\n        $target.is('a') && event.preventDefault();                                                                     // 602\n                                                                                                                       // 603\n        unevenOffset = (_.slideCount % _.options.slidesToScroll !== 0);                                                // 604\n        indexOffset = unevenOffset ? 0 : (_.slideCount - _.currentSlide) % _.options.slidesToScroll;                   // 605\n                                                                                                                       // 606\n        switch (event.data.message) {                                                                                  // 607\n                                                                                                                       // 608\n            case 'previous':                                                                                           // 609\n                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : _.options.slidesToShow - indexOffset;     // 610\n                if (_.slideCount > _.options.slidesToShow) {                                                           // 611\n                    _.slideHandler(_.currentSlide  - slideOffset, false, dontAnimate);                                 // 612\n                }                                                                                                      // 613\n                break;                                                                                                 // 614\n                                                                                                                       // 615\n            case 'next':                                                                                               // 616\n                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : indexOffset;                              // 617\n                if (_.slideCount > _.options.slidesToShow) {                                                           // 618\n                    _.slideHandler(_.currentSlide + slideOffset, false, dontAnimate);                                  // 619\n                }                                                                                                      // 620\n                break;                                                                                                 // 621\n                                                                                                                       // 622\n            case 'index':                                                                                              // 623\n                var index = event.data.index === 0 ? 0 :                                                               // 624\n                    event.data.index || $(event.target).parent().index() * _.options.slidesToScroll;                   // 625\n                                                                                                                       // 626\n                _.slideHandler(_.checkNavigable(index), false, dontAnimate);                                           // 627\n                break;                                                                                                 // 628\n                                                                                                                       // 629\n            default:                                                                                                   // 630\n                return;                                                                                                // 631\n        }                                                                                                              // 632\n                                                                                                                       // 633\n    };                                                                                                                 // 634\n                                                                                                                       // 635\n    Slick.prototype.checkNavigable = function(index) {                                                                 // 636\n                                                                                                                       // 637\n        var _ = this, navigables, prevNavigable;                                                                       // 638\n                                                                                                                       // 639\n        navigables = _.getNavigableIndexes();                                                                          // 640\n        prevNavigable = 0;                                                                                             // 641\n        if(index > navigables[navigables.length -1]){                                                                  // 642\n            index = navigables[navigables.length -1];                                                                  // 643\n        } else {                                                                                                       // 644\n            for(var n in navigables) {                                                                                 // 645\n                if(index < navigables[n]) {                                                                            // 646\n                    index = prevNavigable;                                                                             // 647\n                    break;                                                                                             // 648\n                }                                                                                                      // 649\n                prevNavigable = navigables[n];                                                                         // 650\n            }                                                                                                          // 651\n        }                                                                                                              // 652\n                                                                                                                       // 653\n        return index;                                                                                                  // 654\n    };                                                                                                                 // 655\n                                                                                                                       // 656\n    Slick.prototype.clickHandler = function(event) {                                                                   // 657\n                                                                                                                       // 658\n        var _ = this;                                                                                                  // 659\n                                                                                                                       // 660\n        if(_.shouldClick === false) {                                                                                  // 661\n            event.stopImmediatePropagation();                                                                          // 662\n            event.stopPropagation();                                                                                   // 663\n            event.preventDefault();                                                                                    // 664\n        }                                                                                                              // 665\n                                                                                                                       // 666\n    };                                                                                                                 // 667\n                                                                                                                       // 668\n    Slick.prototype.destroy = function() {                                                                             // 669\n                                                                                                                       // 670\n        var _ = this;                                                                                                  // 671\n                                                                                                                       // 672\n        _.autoPlayClear();                                                                                             // 673\n                                                                                                                       // 674\n        _.touchObject = {};                                                                                            // 675\n                                                                                                                       // 676\n        $('.slick-cloned', _.$slider).remove();                                                                        // 677\n        if (_.$dots) {                                                                                                 // 678\n            _.$dots.remove();                                                                                          // 679\n        }                                                                                                              // 680\n        if (_.$prevArrow && (typeof _.options.prevArrow !== 'object')) {                                               // 681\n            _.$prevArrow.remove();                                                                                     // 682\n        }                                                                                                              // 683\n        if (_.$nextArrow && (typeof _.options.nextArrow !== 'object')) {                                               // 684\n            _.$nextArrow.remove();                                                                                     // 685\n        }                                                                                                              // 686\n                                                                                                                       // 687\n                                                                                                                       // 688\n        _.$slides.removeClass('slick-slide slick-active slick-center slick-visible')                                   // 689\n            .attr(\"aria-hidden\",\"true\")                                                                                // 690\n            .removeAttr('data-slick-index')                                                                            // 691\n            .css({                                                                                                     // 692\n                position: '',                                                                                          // 693\n                left: '',                                                                                              // 694\n                top: '',                                                                                               // 695\n                zIndex: '',                                                                                            // 696\n                opacity: '',                                                                                           // 697\n                width: ''                                                                                              // 698\n            });                                                                                                        // 699\n                                                                                                                       // 700\n        _.$slider.removeClass('slick-slider');                                                                         // 701\n        _.$slider.removeClass('slick-initialized');                                                                    // 702\n                                                                                                                       // 703\n        _.$list.off('.slick');                                                                                         // 704\n        $(window).off('.slick-' + _.instanceUid);                                                                      // 705\n        $(document).off('.slick-' + _.instanceUid);                                                                    // 706\n                                                                                                                       // 707\n        _.$slider.html(_.$slides);                                                                                     // 708\n                                                                                                                       // 709\n    };                                                                                                                 // 710\n                                                                                                                       // 711\n    Slick.prototype.disableTransition = function(slide) {                                                              // 712\n                                                                                                                       // 713\n        var _ = this,                                                                                                  // 714\n            transition = {};                                                                                           // 715\n                                                                                                                       // 716\n        transition[_.transitionType] = \"\";                                                                             // 717\n                                                                                                                       // 718\n        if (_.options.fade === false) {                                                                                // 719\n            _.$slideTrack.css(transition);                                                                             // 720\n        } else {                                                                                                       // 721\n            _.$slides.eq(slide).css(transition);                                                                       // 722\n        }                                                                                                              // 723\n                                                                                                                       // 724\n    };                                                                                                                 // 725\n                                                                                                                       // 726\n    Slick.prototype.fadeSlide = function(slideIndex, callback) {                                                       // 727\n                                                                                                                       // 728\n        var _ = this;                                                                                                  // 729\n                                                                                                                       // 730\n        if (_.cssTransitions === false) {                                                                              // 731\n                                                                                                                       // 732\n            _.$slides.eq(slideIndex).css({                                                                             // 733\n                zIndex: 1000                                                                                           // 734\n            });                                                                                                        // 735\n                                                                                                                       // 736\n            _.$slides.eq(slideIndex).animate({                                                                         // 737\n                opacity: 1                                                                                             // 738\n            }, _.options.speed, _.options.easing, callback);                                                           // 739\n                                                                                                                       // 740\n        } else {                                                                                                       // 741\n                                                                                                                       // 742\n            _.applyTransition(slideIndex);                                                                             // 743\n                                                                                                                       // 744\n            _.$slides.eq(slideIndex).css({                                                                             // 745\n                opacity: 1,                                                                                            // 746\n                zIndex: 1000                                                                                           // 747\n            });                                                                                                        // 748\n                                                                                                                       // 749\n            if (callback) {                                                                                            // 750\n                setTimeout(function() {                                                                                // 751\n                                                                                                                       // 752\n                    _.disableTransition(slideIndex);                                                                   // 753\n                                                                                                                       // 754\n                    callback.call();                                                                                   // 755\n                }, _.options.speed);                                                                                   // 756\n            }                                                                                                          // 757\n                                                                                                                       // 758\n        }                                                                                                              // 759\n                                                                                                                       // 760\n    };                                                                                                                 // 761\n                                                                                                                       // 762\n    Slick.prototype.filterSlides = Slick.prototype.slickFilter = function(filter) {                                    // 763\n                                                                                                                       // 764\n        var _ = this;                                                                                                  // 765\n                                                                                                                       // 766\n        if (filter !== null) {                                                                                         // 767\n                                                                                                                       // 768\n            _.unload();                                                                                                // 769\n                                                                                                                       // 770\n            _.$slideTrack.children(this.options.slide).detach();                                                       // 771\n                                                                                                                       // 772\n            _.$slidesCache.filter(filter).appendTo(_.$slideTrack);                                                     // 773\n                                                                                                                       // 774\n            _.reinit();                                                                                                // 775\n                                                                                                                       // 776\n        }                                                                                                              // 777\n                                                                                                                       // 778\n    };                                                                                                                 // 779\n                                                                                                                       // 780\n    Slick.prototype.getCurrent = Slick.prototype.slickCurrentSlide = function() {                                      // 781\n                                                                                                                       // 782\n        var _ = this;                                                                                                  // 783\n        return _.currentSlide;                                                                                         // 784\n                                                                                                                       // 785\n    };                                                                                                                 // 786\n                                                                                                                       // 787\n    Slick.prototype.getDotCount = function() {                                                                         // 788\n                                                                                                                       // 789\n        var _ = this;                                                                                                  // 790\n                                                                                                                       // 791\n        var breakPoint = 0;                                                                                            // 792\n        var counter = 0;                                                                                               // 793\n        var pagerQty = 0;                                                                                              // 794\n                                                                                                                       // 795\n        if(_.options.infinite === true) {                                                                              // 796\n            pagerQty = Math.ceil(_.slideCount / _.options.slidesToScroll);                                             // 797\n        } else if (_.options.centerMode === true) {                                                                    // 798\n            pagerQty = _.slideCount;                                                                                   // 799\n        } else {                                                                                                       // 800\n            while (breakPoint < _.slideCount){                                                                         // 801\n                ++pagerQty;                                                                                            // 802\n                breakPoint = counter + _.options.slidesToShow;                                                         // 803\n                counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll  : _.options.slidesToShow;\n            }                                                                                                          // 805\n        }                                                                                                              // 806\n                                                                                                                       // 807\n        return pagerQty - 1;                                                                                           // 808\n                                                                                                                       // 809\n    };                                                                                                                 // 810\n                                                                                                                       // 811\n    Slick.prototype.getLeft = function(slideIndex) {                                                                   // 812\n                                                                                                                       // 813\n        var _ = this,                                                                                                  // 814\n            targetLeft,                                                                                                // 815\n            verticalHeight,                                                                                            // 816\n            verticalOffset = 0,                                                                                        // 817\n            targetSlide;                                                                                               // 818\n                                                                                                                       // 819\n        _.slideOffset = 0;                                                                                             // 820\n        verticalHeight = _.$slides.first().outerHeight();                                                              // 821\n                                                                                                                       // 822\n        if (_.options.infinite === true) {                                                                             // 823\n            if (_.slideCount > _.options.slidesToShow) {                                                               // 824\n                _.slideOffset = (_.slideWidth * _.options.slidesToShow) * -1;                                          // 825\n                verticalOffset = (verticalHeight * _.options.slidesToShow) * -1;                                       // 826\n            }                                                                                                          // 827\n            if (_.slideCount % _.options.slidesToScroll !== 0) {                                                       // 828\n                if (slideIndex + _.options.slidesToScroll > _.slideCount && _.slideCount > _.options.slidesToShow) {   // 829\n                    if(slideIndex > _.slideCount) {                                                                    // 830\n                        _.slideOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * _.slideWidth) * -1;  // 831\n                        verticalOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * verticalHeight) * -1;\n                    } else {                                                                                           // 833\n                        _.slideOffset = ((_.slideCount % _.options.slidesToScroll) * _.slideWidth) * -1;               // 834\n                        verticalOffset = ((_.slideCount % _.options.slidesToScroll) * verticalHeight) * -1;            // 835\n                    }                                                                                                  // 836\n                }                                                                                                      // 837\n            }                                                                                                          // 838\n        } else {                                                                                                       // 839\n            if(slideIndex + _.options.slidesToShow > _.slideCount) {                                                   // 840\n                _.slideOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * _.slideWidth;                 // 841\n                verticalOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * verticalHeight;              // 842\n            }                                                                                                          // 843\n        }                                                                                                              // 844\n                                                                                                                       // 845\n        if (_.slideCount <= _.options.slidesToShow){                                                                   // 846\n            _.slideOffset = 0;                                                                                         // 847\n            verticalOffset = 0;                                                                                        // 848\n        }                                                                                                              // 849\n                                                                                                                       // 850\n        if (_.options.centerMode === true && _.options.infinite === true) {                                            // 851\n            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2) - _.slideWidth;                     // 852\n        } else if (_.options.centerMode === true) {                                                                    // 853\n            _.slideOffset = 0;                                                                                         // 854\n            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2);                                    // 855\n        }                                                                                                              // 856\n                                                                                                                       // 857\n        if (_.options.vertical === false) {                                                                            // 858\n            targetLeft = ((slideIndex * _.slideWidth) * -1) + _.slideOffset;                                           // 859\n        } else {                                                                                                       // 860\n            targetLeft = ((slideIndex * verticalHeight) * -1) + verticalOffset;                                        // 861\n        }                                                                                                              // 862\n                                                                                                                       // 863\n        if (_.options.variableWidth === true) {                                                                        // 864\n                                                                                                                       // 865\n            if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {                              // 866\n                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);                                   // 867\n            } else {                                                                                                   // 868\n                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow);          // 869\n            }                                                                                                          // 870\n                                                                                                                       // 871\n            targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;                                          // 872\n                                                                                                                       // 873\n            if (_.options.centerMode === true) {                                                                       // 874\n                if(_.options.infinite === false) {                                                                     // 875\n                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);                               // 876\n                } else {                                                                                               // 877\n                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow + 1);  // 878\n                }                                                                                                      // 879\n                targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;                                      // 880\n                targetLeft += (_.$list.width() - targetSlide.outerWidth()) / 2;                                        // 881\n            }                                                                                                          // 882\n        }                                                                                                              // 883\n                                                                                                                       // 884\n        return targetLeft;                                                                                             // 885\n                                                                                                                       // 886\n    };                                                                                                                 // 887\n                                                                                                                       // 888\n    Slick.prototype.getOption = Slick.prototype.slickGetOption = function(option) {                                    // 889\n                                                                                                                       // 890\n        var _ = this;                                                                                                  // 891\n                                                                                                                       // 892\n        return _.options[option];                                                                                      // 893\n                                                                                                                       // 894\n    };                                                                                                                 // 895\n                                                                                                                       // 896\n    Slick.prototype.getNavigableIndexes = function() {                                                                 // 897\n                                                                                                                       // 898\n        var _ = this, breakPoint = 0, counter = 0, indexes = [], max;                                                  // 899\n                                                                                                                       // 900\n        if(_.options.infinite === false) {                                                                             // 901\n            max = _.slideCount - _.options.slidesToShow + 1;                                                           // 902\n            if (_.options.centerMode === true) max = _.slideCount;                                                     // 903\n        } else {                                                                                                       // 904\n            breakPoint = _.slideCount * -1;                                                                            // 905\n            counter = _.slideCount * -1;                                                                               // 906\n            max = _.slideCount * 2;                                                                                    // 907\n        }                                                                                                              // 908\n                                                                                                                       // 909\n        while (breakPoint < max){                                                                                      // 910\n            indexes.push(breakPoint);                                                                                  // 911\n            breakPoint = counter + _.options.slidesToScroll;                                                           // 912\n            counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll  : _.options.slidesToShow;\n        }                                                                                                              // 914\n                                                                                                                       // 915\n        return indexes;                                                                                                // 916\n                                                                                                                       // 917\n    };                                                                                                                 // 918\n                                                                                                                       // 919\n    Slick.prototype.getSlick = function() {                                                                            // 920\n                                                                                                                       // 921\n        return this;                                                                                                   // 922\n                                                                                                                       // 923\n    };                                                                                                                 // 924\n                                                                                                                       // 925\n    Slick.prototype.getSlideCount = function() {                                                                       // 926\n                                                                                                                       // 927\n        var _ = this, slidesTraversed, swipedSlide, centerOffset;                                                      // 928\n                                                                                                                       // 929\n        centerOffset = _.options.centerMode === true ? _.slideWidth * Math.floor(_.options.slidesToShow / 2) : 0;      // 930\n                                                                                                                       // 931\n        if(_.options.swipeToSlide === true) {                                                                          // 932\n            _.$slideTrack.find('.slick-slide').each(function(index, slide){                                            // 933\n                if (slide.offsetLeft - centerOffset + ($(slide).outerWidth() / 2) > (_.swipeLeft * -1)) {              // 934\n                    swipedSlide = slide;                                                                               // 935\n                    return false;                                                                                      // 936\n                }                                                                                                      // 937\n            });                                                                                                        // 938\n                                                                                                                       // 939\n            slidesTraversed = Math.abs($(swipedSlide).attr('data-slick-index') - _.currentSlide) || 1;                 // 940\n                                                                                                                       // 941\n            return slidesTraversed;                                                                                    // 942\n                                                                                                                       // 943\n        } else {                                                                                                       // 944\n            return _.options.slidesToScroll;                                                                           // 945\n        }                                                                                                              // 946\n                                                                                                                       // 947\n    };                                                                                                                 // 948\n                                                                                                                       // 949\n    Slick.prototype.goTo = Slick.prototype.slickGoTo = function(slide, dontAnimate) {                                  // 950\n                                                                                                                       // 951\n        var _ = this;                                                                                                  // 952\n                                                                                                                       // 953\n        _.changeSlide({                                                                                                // 954\n            data: {                                                                                                    // 955\n                message: 'index',                                                                                      // 956\n                index: parseInt(slide)                                                                                 // 957\n            }                                                                                                          // 958\n        }, dontAnimate);                                                                                               // 959\n                                                                                                                       // 960\n    };                                                                                                                 // 961\n                                                                                                                       // 962\n    Slick.prototype.init = function() {                                                                                // 963\n                                                                                                                       // 964\n        var _ = this;                                                                                                  // 965\n                                                                                                                       // 966\n        if (!$(_.$slider).hasClass('slick-initialized')) {                                                             // 967\n                                                                                                                       // 968\n            $(_.$slider).addClass('slick-initialized');                                                                // 969\n            _.buildOut();                                                                                              // 970\n            _.setProps();                                                                                              // 971\n            _.startLoad();                                                                                             // 972\n            _.loadSlider();                                                                                            // 973\n            _.initializeEvents();                                                                                      // 974\n            _.updateArrows();                                                                                          // 975\n            _.updateDots();                                                                                            // 976\n        }                                                                                                              // 977\n                                                                                                                       // 978\n        _.$slider.trigger(\"init\", [ _ ]);                                                                              // 979\n                                                                                                                       // 980\n    };                                                                                                                 // 981\n                                                                                                                       // 982\n    Slick.prototype.initArrowEvents = function() {                                                                     // 983\n                                                                                                                       // 984\n        var _ = this;                                                                                                  // 985\n                                                                                                                       // 986\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {                                      // 987\n            _.$prevArrow.on('click.slick', {                                                                           // 988\n                message: 'previous'                                                                                    // 989\n            }, _.changeSlide);                                                                                         // 990\n            _.$nextArrow.on('click.slick', {                                                                           // 991\n                message: 'next'                                                                                        // 992\n            }, _.changeSlide);                                                                                         // 993\n        }                                                                                                              // 994\n                                                                                                                       // 995\n    };                                                                                                                 // 996\n                                                                                                                       // 997\n    Slick.prototype.initDotEvents = function() {                                                                       // 998\n                                                                                                                       // 999\n        var _ = this;                                                                                                  // 1000\n                                                                                                                       // 1001\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {                                        // 1002\n            $('li', _.$dots).on('click.slick', {                                                                       // 1003\n                message: 'index'                                                                                       // 1004\n            }, _.changeSlide);                                                                                         // 1005\n        }                                                                                                              // 1006\n                                                                                                                       // 1007\n        if (_.options.dots === true && _.options.pauseOnDotsHover === true && _.options.autoplay === true) {           // 1008\n            $('li', _.$dots)                                                                                           // 1009\n                .on('mouseenter.slick', function(){                                                                    // 1010\n                    _.paused = true;                                                                                   // 1011\n                    _.autoPlayClear();                                                                                 // 1012\n                })                                                                                                     // 1013\n                .on('mouseleave.slick', function(){                                                                    // 1014\n                    _.paused = false;                                                                                  // 1015\n                    _.autoPlay();                                                                                      // 1016\n                });                                                                                                    // 1017\n        }                                                                                                              // 1018\n                                                                                                                       // 1019\n    };                                                                                                                 // 1020\n                                                                                                                       // 1021\n    Slick.prototype.initializeEvents = function() {                                                                    // 1022\n                                                                                                                       // 1023\n        var _ = this;                                                                                                  // 1024\n                                                                                                                       // 1025\n        _.initArrowEvents();                                                                                           // 1026\n                                                                                                                       // 1027\n        _.initDotEvents();                                                                                             // 1028\n                                                                                                                       // 1029\n        _.$list.on('touchstart.slick mousedown.slick', {                                                               // 1030\n            action: 'start'                                                                                            // 1031\n        }, _.swipeHandler);                                                                                            // 1032\n        _.$list.on('touchmove.slick mousemove.slick', {                                                                // 1033\n            action: 'move'                                                                                             // 1034\n        }, _.swipeHandler);                                                                                            // 1035\n        _.$list.on('touchend.slick mouseup.slick', {                                                                   // 1036\n            action: 'end'                                                                                              // 1037\n        }, _.swipeHandler);                                                                                            // 1038\n        _.$list.on('touchcancel.slick mouseleave.slick', {                                                             // 1039\n            action: 'end'                                                                                              // 1040\n        }, _.swipeHandler);                                                                                            // 1041\n                                                                                                                       // 1042\n        _.$list.on('click.slick', _.clickHandler);                                                                     // 1043\n                                                                                                                       // 1044\n        if (_.options.autoplay === true) {                                                                             // 1045\n                                                                                                                       // 1046\n            $(document).on(_.visibilityChange, function(){                                                             // 1047\n                _.visibility();                                                                                        // 1048\n            });                                                                                                        // 1049\n                                                                                                                       // 1050\n            if( _.options.pauseOnHover === true ) {                                                                    // 1051\n                                                                                                                       // 1052\n                _.$list.on('mouseenter.slick', function(){                                                             // 1053\n                    _.paused = true;                                                                                   // 1054\n                    _.autoPlayClear();                                                                                 // 1055\n                });                                                                                                    // 1056\n                _.$list.on('mouseleave.slick', function(){                                                             // 1057\n                    _.paused = false;                                                                                  // 1058\n                    _.autoPlay();                                                                                      // 1059\n                });                                                                                                    // 1060\n                                                                                                                       // 1061\n            }                                                                                                          // 1062\n                                                                                                                       // 1063\n        }                                                                                                              // 1064\n                                                                                                                       // 1065\n        if(_.options.accessibility === true) {                                                                         // 1066\n            _.$list.on('keydown.slick', _.keyHandler);                                                                 // 1067\n        }                                                                                                              // 1068\n                                                                                                                       // 1069\n        if(_.options.focusOnSelect === true) {                                                                         // 1070\n            $(_.$slideTrack).children().on('click.slick', _.selectHandler);                                            // 1071\n        }                                                                                                              // 1072\n                                                                                                                       // 1073\n        $(window).on('orientationchange.slick.slick-' + _.instanceUid, function() {                                    // 1074\n            _.checkResponsive();                                                                                       // 1075\n            _.setPosition();                                                                                           // 1076\n        });                                                                                                            // 1077\n                                                                                                                       // 1078\n        $(window).on('resize.slick.slick-' + _.instanceUid, function() {                                               // 1079\n            if ($(window).width() !== _.windowWidth) {                                                                 // 1080\n                clearTimeout(_.windowDelay);                                                                           // 1081\n                _.windowDelay = window.setTimeout(function() {                                                         // 1082\n                    _.windowWidth = $(window).width();                                                                 // 1083\n                    _.checkResponsive();                                                                               // 1084\n                    _.setPosition();                                                                                   // 1085\n                }, 50);                                                                                                // 1086\n            }                                                                                                          // 1087\n        });                                                                                                            // 1088\n                                                                                                                       // 1089\n        $('*[draggable!=true]', _.$slideTrack).on('dragstart', function(e){ e.preventDefault(); });                    // 1090\n                                                                                                                       // 1091\n        $(window).on('load.slick.slick-' + _.instanceUid, _.setPosition);                                              // 1092\n        $(document).on('ready.slick.slick-' + _.instanceUid, _.setPosition);                                           // 1093\n                                                                                                                       // 1094\n    };                                                                                                                 // 1095\n                                                                                                                       // 1096\n    Slick.prototype.initUI = function() {                                                                              // 1097\n                                                                                                                       // 1098\n        var _ = this;                                                                                                  // 1099\n                                                                                                                       // 1100\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {                                      // 1101\n                                                                                                                       // 1102\n            _.$prevArrow.show();                                                                                       // 1103\n            _.$nextArrow.show();                                                                                       // 1104\n                                                                                                                       // 1105\n        }                                                                                                              // 1106\n                                                                                                                       // 1107\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {                                        // 1108\n                                                                                                                       // 1109\n            _.$dots.show();                                                                                            // 1110\n                                                                                                                       // 1111\n        }                                                                                                              // 1112\n                                                                                                                       // 1113\n        if (_.options.autoplay === true) {                                                                             // 1114\n                                                                                                                       // 1115\n            _.autoPlay();                                                                                              // 1116\n                                                                                                                       // 1117\n        }                                                                                                              // 1118\n                                                                                                                       // 1119\n    };                                                                                                                 // 1120\n                                                                                                                       // 1121\n    Slick.prototype.keyHandler = function(event) {                                                                     // 1122\n                                                                                                                       // 1123\n        var _ = this;                                                                                                  // 1124\n                                                                                                                       // 1125\n        if (event.keyCode === 37 && _.options.accessibility === true) {                                                // 1126\n            _.changeSlide({                                                                                            // 1127\n                data: {                                                                                                // 1128\n                    message: 'previous'                                                                                // 1129\n                }                                                                                                      // 1130\n            });                                                                                                        // 1131\n        } else if (event.keyCode === 39 && _.options.accessibility === true) {                                         // 1132\n            _.changeSlide({                                                                                            // 1133\n                data: {                                                                                                // 1134\n                    message: 'next'                                                                                    // 1135\n                }                                                                                                      // 1136\n            });                                                                                                        // 1137\n        }                                                                                                              // 1138\n                                                                                                                       // 1139\n    };                                                                                                                 // 1140\n                                                                                                                       // 1141\n    Slick.prototype.lazyLoad = function() {                                                                            // 1142\n                                                                                                                       // 1143\n        var _ = this,                                                                                                  // 1144\n            loadRange, cloneRange, rangeStart, rangeEnd;                                                               // 1145\n                                                                                                                       // 1146\n        function loadImages(imagesScope) {                                                                             // 1147\n            $('img[data-lazy]', imagesScope).each(function() {                                                         // 1148\n                var image = $(this),                                                                                   // 1149\n                    imageSource = $(this).attr('data-lazy');                                                           // 1150\n                                                                                                                       // 1151\n                image                                                                                                  // 1152\n                  .load(function() { image.animate({ opacity: 1 }, 200); })                                            // 1153\n                  .css({ opacity: 0 })                                                                                 // 1154\n                  .attr('src', imageSource)                                                                            // 1155\n                  .removeAttr('data-lazy')                                                                             // 1156\n                  .removeClass('slick-loading');                                                                       // 1157\n            });                                                                                                        // 1158\n        }                                                                                                              // 1159\n                                                                                                                       // 1160\n        if (_.options.centerMode === true) {                                                                           // 1161\n            if (_.options.infinite === true) {                                                                         // 1162\n                rangeStart = _.currentSlide + (_.options.slidesToShow/2 + 1);                                          // 1163\n                rangeEnd = rangeStart + _.options.slidesToShow + 2;                                                    // 1164\n            } else {                                                                                                   // 1165\n                rangeStart = Math.max(0, _.currentSlide - (_.options.slidesToShow/2 + 1));                             // 1166\n                rangeEnd = 2 + (_.options.slidesToShow/2 + 1) + _.currentSlide;                                        // 1167\n            }                                                                                                          // 1168\n        } else {                                                                                                       // 1169\n            rangeStart = _.options.infinite ? _.options.slidesToShow + _.currentSlide : _.currentSlide;                // 1170\n            rangeEnd = rangeStart + _.options.slidesToShow;                                                            // 1171\n            if (_.options.fade === true ) {                                                                            // 1172\n                if(rangeStart > 0) rangeStart--;                                                                       // 1173\n                if(rangeEnd <= _.slideCount) rangeEnd++;                                                               // 1174\n            }                                                                                                          // 1175\n        }                                                                                                              // 1176\n                                                                                                                       // 1177\n        loadRange = _.$slider.find('.slick-slide').slice(rangeStart, rangeEnd);                                        // 1178\n        loadImages(loadRange);                                                                                         // 1179\n                                                                                                                       // 1180\n          if (_.slideCount <= _.options.slidesToShow){                                                                 // 1181\n              cloneRange = _.$slider.find('.slick-slide');                                                             // 1182\n              loadImages(cloneRange);                                                                                  // 1183\n          }else                                                                                                        // 1184\n        if (_.currentSlide >= _.slideCount - _.options.slidesToShow) {                                                 // 1185\n            cloneRange = _.$slider.find('.slick-cloned').slice(0, _.options.slidesToShow);                             // 1186\n            loadImages(cloneRange);                                                                                    // 1187\n        } else if (_.currentSlide === 0) {                                                                             // 1188\n            cloneRange = _.$slider.find('.slick-cloned').slice(_.options.slidesToShow * -1);                           // 1189\n            loadImages(cloneRange);                                                                                    // 1190\n        }                                                                                                              // 1191\n                                                                                                                       // 1192\n    };                                                                                                                 // 1193\n                                                                                                                       // 1194\n    Slick.prototype.loadSlider = function() {                                                                          // 1195\n                                                                                                                       // 1196\n        var _ = this;                                                                                                  // 1197\n                                                                                                                       // 1198\n        _.setPosition();                                                                                               // 1199\n                                                                                                                       // 1200\n        _.$slideTrack.css({                                                                                            // 1201\n            opacity: 1                                                                                                 // 1202\n        });                                                                                                            // 1203\n                                                                                                                       // 1204\n        _.$slider.removeClass('slick-loading');                                                                        // 1205\n                                                                                                                       // 1206\n        _.initUI();                                                                                                    // 1207\n                                                                                                                       // 1208\n        if (_.options.lazyLoad === 'progressive') {                                                                    // 1209\n            _.progressiveLazyLoad();                                                                                   // 1210\n        }                                                                                                              // 1211\n                                                                                                                       // 1212\n    };                                                                                                                 // 1213\n                                                                                                                       // 1214\n    Slick.prototype.next = Slick.prototype.slickNext = function() {                                                    // 1215\n                                                                                                                       // 1216\n        var _ = this;                                                                                                  // 1217\n                                                                                                                       // 1218\n        _.changeSlide({                                                                                                // 1219\n            data: {                                                                                                    // 1220\n                message: 'next'                                                                                        // 1221\n            }                                                                                                          // 1222\n        });                                                                                                            // 1223\n                                                                                                                       // 1224\n    };                                                                                                                 // 1225\n                                                                                                                       // 1226\n    Slick.prototype.pause = Slick.prototype.slickPause = function() {                                                  // 1227\n                                                                                                                       // 1228\n        var _ = this;                                                                                                  // 1229\n                                                                                                                       // 1230\n        _.autoPlayClear();                                                                                             // 1231\n        _.paused = true;                                                                                               // 1232\n                                                                                                                       // 1233\n    };                                                                                                                 // 1234\n                                                                                                                       // 1235\n    Slick.prototype.play = Slick.prototype.slickPlay = function() {                                                    // 1236\n                                                                                                                       // 1237\n        var _ = this;                                                                                                  // 1238\n                                                                                                                       // 1239\n        _.paused = false;                                                                                              // 1240\n        _.autoPlay();                                                                                                  // 1241\n                                                                                                                       // 1242\n    };                                                                                                                 // 1243\n                                                                                                                       // 1244\n    Slick.prototype.postSlide = function(index) {                                                                      // 1245\n                                                                                                                       // 1246\n        var _ = this;                                                                                                  // 1247\n                                                                                                                       // 1248\n        _.$slider.trigger(\"afterChange\", [ _, index]);                                                                 // 1249\n                                                                                                                       // 1250\n        _.animating = false;                                                                                           // 1251\n                                                                                                                       // 1252\n        _.setPosition();                                                                                               // 1253\n                                                                                                                       // 1254\n        _.swipeLeft = null;                                                                                            // 1255\n                                                                                                                       // 1256\n        if (_.options.autoplay === true && _.paused === false) {                                                       // 1257\n            _.autoPlay();                                                                                              // 1258\n        }                                                                                                              // 1259\n                                                                                                                       // 1260\n    };                                                                                                                 // 1261\n                                                                                                                       // 1262\n    Slick.prototype.prev = Slick.prototype.slickPrev = function() {                                                    // 1263\n                                                                                                                       // 1264\n        var _ = this;                                                                                                  // 1265\n                                                                                                                       // 1266\n        _.changeSlide({                                                                                                // 1267\n            data: {                                                                                                    // 1268\n                message: 'previous'                                                                                    // 1269\n            }                                                                                                          // 1270\n        });                                                                                                            // 1271\n                                                                                                                       // 1272\n    };                                                                                                                 // 1273\n                                                                                                                       // 1274\n    Slick.prototype.progressiveLazyLoad = function() {                                                                 // 1275\n                                                                                                                       // 1276\n        var _ = this,                                                                                                  // 1277\n            imgCount, targetImage;                                                                                     // 1278\n                                                                                                                       // 1279\n        imgCount = $('img[data-lazy]', _.$slider).length;                                                              // 1280\n                                                                                                                       // 1281\n        if (imgCount > 0) {                                                                                            // 1282\n            targetImage = $('img[data-lazy]', _.$slider).first();                                                      // 1283\n            targetImage.attr('src', targetImage.attr('data-lazy')).removeClass('slick-loading').load(function() {      // 1284\n                targetImage.removeAttr('data-lazy');                                                                   // 1285\n                _.progressiveLazyLoad();                                                                               // 1286\n                                                                                                                       // 1287\n                if( _.options.adaptiveHeight === true ) {                                                              // 1288\n                    _.setPosition();                                                                                   // 1289\n                }                                                                                                      // 1290\n            })                                                                                                         // 1291\n         .error(function () {                                                                                          // 1292\n          targetImage.removeAttr('data-lazy');                                                                         // 1293\n          _.progressiveLazyLoad();                                                                                     // 1294\n         });                                                                                                           // 1295\n        }                                                                                                              // 1296\n                                                                                                                       // 1297\n    };                                                                                                                 // 1298\n                                                                                                                       // 1299\n    Slick.prototype.refresh = function() {                                                                             // 1300\n                                                                                                                       // 1301\n        var _ = this,                                                                                                  // 1302\n            currentSlide = _.currentSlide;                                                                             // 1303\n                                                                                                                       // 1304\n        _.destroy();                                                                                                   // 1305\n                                                                                                                       // 1306\n        $.extend(_, _.initials);                                                                                       // 1307\n                                                                                                                       // 1308\n        _.init();                                                                                                      // 1309\n                                                                                                                       // 1310\n        _.changeSlide({                                                                                                // 1311\n            data: {                                                                                                    // 1312\n                message: 'index',                                                                                      // 1313\n                index: currentSlide                                                                                    // 1314\n            }                                                                                                          // 1315\n        }, true);                                                                                                      // 1316\n                                                                                                                       // 1317\n    };                                                                                                                 // 1318\n                                                                                                                       // 1319\n    Slick.prototype.reinit = function() {                                                                              // 1320\n                                                                                                                       // 1321\n        var _ = this;                                                                                                  // 1322\n                                                                                                                       // 1323\n        _.$slides = _.$slideTrack.children(_.options.slide).addClass(                                                  // 1324\n            'slick-slide');                                                                                            // 1325\n                                                                                                                       // 1326\n        _.slideCount = _.$slides.length;                                                                               // 1327\n                                                                                                                       // 1328\n        if (_.currentSlide >= _.slideCount && _.currentSlide !== 0) {                                                  // 1329\n            _.currentSlide = _.currentSlide - _.options.slidesToScroll;                                                // 1330\n        }                                                                                                              // 1331\n                                                                                                                       // 1332\n        if (_.slideCount <= _.options.slidesToShow) {                                                                  // 1333\n            _.currentSlide = 0;                                                                                        // 1334\n        }                                                                                                              // 1335\n                                                                                                                       // 1336\n        _.setProps();                                                                                                  // 1337\n                                                                                                                       // 1338\n        _.setupInfinite();                                                                                             // 1339\n                                                                                                                       // 1340\n        _.buildArrows();                                                                                               // 1341\n                                                                                                                       // 1342\n        _.updateArrows();                                                                                              // 1343\n                                                                                                                       // 1344\n        _.initArrowEvents();                                                                                           // 1345\n                                                                                                                       // 1346\n        _.buildDots();                                                                                                 // 1347\n                                                                                                                       // 1348\n        _.updateDots();                                                                                                // 1349\n                                                                                                                       // 1350\n        _.initDotEvents();                                                                                             // 1351\n                                                                                                                       // 1352\n        if(_.options.focusOnSelect === true) {                                                                         // 1353\n            $(_.$slideTrack).children().on('click.slick', _.selectHandler);                                            // 1354\n        }                                                                                                              // 1355\n                                                                                                                       // 1356\n        _.setSlideClasses(0);                                                                                          // 1357\n                                                                                                                       // 1358\n        _.setPosition();                                                                                               // 1359\n                                                                                                                       // 1360\n        _.$slider.trigger(\"reInit\", [ _ ]);                                                                            // 1361\n                                                                                                                       // 1362\n    };                                                                                                                 // 1363\n                                                                                                                       // 1364\n    Slick.prototype.removeSlide = Slick.prototype.slickRemove = function(index, removeBefore, removeAll) {             // 1365\n                                                                                                                       // 1366\n        var _ = this;                                                                                                  // 1367\n                                                                                                                       // 1368\n        if (typeof(index) === 'boolean') {                                                                             // 1369\n            removeBefore = index;                                                                                      // 1370\n            index = removeBefore === true ? 0 : _.slideCount - 1;                                                      // 1371\n        } else {                                                                                                       // 1372\n            index = removeBefore === true ? --index : index;                                                           // 1373\n        }                                                                                                              // 1374\n                                                                                                                       // 1375\n        if (_.slideCount < 1 || index < 0 || index > _.slideCount - 1) {                                               // 1376\n            return false;                                                                                              // 1377\n        }                                                                                                              // 1378\n                                                                                                                       // 1379\n        _.unload();                                                                                                    // 1380\n                                                                                                                       // 1381\n        if(removeAll === true) {                                                                                       // 1382\n            _.$slideTrack.children().remove();                                                                         // 1383\n        } else {                                                                                                       // 1384\n            _.$slideTrack.children(this.options.slide).eq(index).remove();                                             // 1385\n        }                                                                                                              // 1386\n                                                                                                                       // 1387\n        _.$slides = _.$slideTrack.children(this.options.slide);                                                        // 1388\n                                                                                                                       // 1389\n        _.$slideTrack.children(this.options.slide).detach();                                                           // 1390\n                                                                                                                       // 1391\n        _.$slideTrack.append(_.$slides);                                                                               // 1392\n                                                                                                                       // 1393\n        _.$slidesCache = _.$slides;                                                                                    // 1394\n                                                                                                                       // 1395\n        _.reinit();                                                                                                    // 1396\n                                                                                                                       // 1397\n    };                                                                                                                 // 1398\n                                                                                                                       // 1399\n    Slick.prototype.setCSS = function(position) {                                                                      // 1400\n                                                                                                                       // 1401\n        var _ = this,                                                                                                  // 1402\n            positionProps = {}, x, y;                                                                                  // 1403\n                                                                                                                       // 1404\n        if (_.options.rtl === true) {                                                                                  // 1405\n            position = -position;                                                                                      // 1406\n        }                                                                                                              // 1407\n        x = _.positionProp == 'left' ? Math.ceil(position) + 'px' : '0px';                                             // 1408\n        y = _.positionProp == 'top' ? Math.ceil(position) + 'px' : '0px';                                              // 1409\n                                                                                                                       // 1410\n        positionProps[_.positionProp] = position;                                                                      // 1411\n                                                                                                                       // 1412\n        if (_.transformsEnabled === false) {                                                                           // 1413\n            _.$slideTrack.css(positionProps);                                                                          // 1414\n        } else {                                                                                                       // 1415\n            positionProps = {};                                                                                        // 1416\n            if (_.cssTransitions === false) {                                                                          // 1417\n                positionProps[_.animType] = 'translate(' + x + ', ' + y + ')';                                         // 1418\n                _.$slideTrack.css(positionProps);                                                                      // 1419\n            } else {                                                                                                   // 1420\n                positionProps[_.animType] = 'translate3d(' + x + ', ' + y + ', 0px)';                                  // 1421\n                _.$slideTrack.css(positionProps);                                                                      // 1422\n            }                                                                                                          // 1423\n        }                                                                                                              // 1424\n                                                                                                                       // 1425\n    };                                                                                                                 // 1426\n                                                                                                                       // 1427\n    Slick.prototype.setDimensions = function() {                                                                       // 1428\n                                                                                                                       // 1429\n        var _ = this;                                                                                                  // 1430\n                                                                                                                       // 1431\n        if (_.options.vertical === false) {                                                                            // 1432\n            if (_.options.centerMode === true) {                                                                       // 1433\n                _.$list.css({                                                                                          // 1434\n                    padding: ('0px ' + _.options.centerPadding)                                                        // 1435\n                });                                                                                                    // 1436\n            }                                                                                                          // 1437\n        } else {                                                                                                       // 1438\n            _.$list.height(_.$slides.first().outerHeight(true) * _.options.slidesToShow);                              // 1439\n            if (_.options.centerMode === true) {                                                                       // 1440\n                _.$list.css({                                                                                          // 1441\n                    padding: (_.options.centerPadding + ' 0px')                                                        // 1442\n                });                                                                                                    // 1443\n            }                                                                                                          // 1444\n        }                                                                                                              // 1445\n                                                                                                                       // 1446\n        _.listWidth = _.$list.width();                                                                                 // 1447\n        _.listHeight = _.$list.height();                                                                               // 1448\n                                                                                                                       // 1449\n                                                                                                                       // 1450\n        if(_.options.vertical === false && _.options.variableWidth === false) {                                        // 1451\n            _.slideWidth = Math.ceil(_.listWidth / _.options.slidesToShow);                                            // 1452\n            _.$slideTrack.width(Math.ceil((_.slideWidth * _.$slideTrack.children('.slick-slide').length)));            // 1453\n                                                                                                                       // 1454\n        } else if (_.options.variableWidth === true) {                                                                 // 1455\n            var trackWidth = 0;                                                                                        // 1456\n            _.slideWidth = Math.ceil(_.listWidth / _.options.slidesToShow);                                            // 1457\n            _.$slideTrack.children('.slick-slide').each(function(){                                                    // 1458\n                trackWidth += _.listWidth;                                                                             // 1459\n            });                                                                                                        // 1460\n            _.$slideTrack.width(Math.ceil(trackWidth) + 1);                                                            // 1461\n        } else {                                                                                                       // 1462\n            _.slideWidth = Math.ceil(_.listWidth);                                                                     // 1463\n            _.$slideTrack.height(Math.ceil((_.$slides.first().outerHeight(true) * _.$slideTrack.children('.slick-slide').length)));\n        }                                                                                                              // 1465\n                                                                                                                       // 1466\n        var offset = _.$slides.first().outerWidth(true) - _.$slides.first().width();                                   // 1467\n        if (_.options.variableWidth === false) _.$slideTrack.children('.slick-slide').width(_.slideWidth - offset);    // 1468\n                                                                                                                       // 1469\n    };                                                                                                                 // 1470\n                                                                                                                       // 1471\n    Slick.prototype.setFade = function() {                                                                             // 1472\n                                                                                                                       // 1473\n        var _ = this,                                                                                                  // 1474\n            targetLeft;                                                                                                // 1475\n                                                                                                                       // 1476\n        _.$slides.each(function(index, element) {                                                                      // 1477\n            targetLeft = (_.slideWidth * index) * -1;                                                                  // 1478\n            if (_.options.rtl === true) {                                                                              // 1479\n                $(element).css({                                                                                       // 1480\n                    position: 'relative',                                                                              // 1481\n                    right: targetLeft,                                                                                 // 1482\n                    top: 0,                                                                                            // 1483\n                    zIndex: 800,                                                                                       // 1484\n                    opacity: 0                                                                                         // 1485\n                });                                                                                                    // 1486\n            } else {                                                                                                   // 1487\n                $(element).css({                                                                                       // 1488\n                    position: 'relative',                                                                              // 1489\n                    left: targetLeft,                                                                                  // 1490\n                    top: 0,                                                                                            // 1491\n                    zIndex: 800,                                                                                       // 1492\n                    opacity: 0                                                                                         // 1493\n                });                                                                                                    // 1494\n            }                                                                                                          // 1495\n        });                                                                                                            // 1496\n                                                                                                                       // 1497\n        _.$slides.eq(_.currentSlide).css({                                                                             // 1498\n            zIndex: 900,                                                                                               // 1499\n            opacity: 1                                                                                                 // 1500\n        });                                                                                                            // 1501\n                                                                                                                       // 1502\n    };                                                                                                                 // 1503\n                                                                                                                       // 1504\n    Slick.prototype.setHeight = function() {                                                                           // 1505\n                                                                                                                       // 1506\n        var _ = this;                                                                                                  // 1507\n                                                                                                                       // 1508\n        if(_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {        // 1509\n            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);                                         // 1510\n            _.$list.css('height', targetHeight);                                                                       // 1511\n        }                                                                                                              // 1512\n                                                                                                                       // 1513\n    };                                                                                                                 // 1514\n                                                                                                                       // 1515\n    Slick.prototype.setOption = Slick.prototype.slickSetOption = function(option, value, refresh) {                    // 1516\n                                                                                                                       // 1517\n        var _ = this;                                                                                                  // 1518\n        _.options[option] = value;                                                                                     // 1519\n                                                                                                                       // 1520\n        if (refresh === true) {                                                                                        // 1521\n            _.unload();                                                                                                // 1522\n            _.reinit();                                                                                                // 1523\n        }                                                                                                              // 1524\n                                                                                                                       // 1525\n    };                                                                                                                 // 1526\n                                                                                                                       // 1527\n    Slick.prototype.setPosition = function() {                                                                         // 1528\n                                                                                                                       // 1529\n        var _ = this;                                                                                                  // 1530\n                                                                                                                       // 1531\n        _.setDimensions();                                                                                             // 1532\n                                                                                                                       // 1533\n        _.setHeight();                                                                                                 // 1534\n                                                                                                                       // 1535\n        if (_.options.fade === false) {                                                                                // 1536\n            _.setCSS(_.getLeft(_.currentSlide));                                                                       // 1537\n        } else {                                                                                                       // 1538\n            _.setFade();                                                                                               // 1539\n        }                                                                                                              // 1540\n                                                                                                                       // 1541\n        _.$slider.trigger(\"setPosition\", [ _ ]);                                                                       // 1542\n                                                                                                                       // 1543\n    };                                                                                                                 // 1544\n                                                                                                                       // 1545\n    Slick.prototype.setProps = function() {                                                                            // 1546\n                                                                                                                       // 1547\n        var _ = this,                                                                                                  // 1548\n            bodyStyle = document.body.style;                                                                           // 1549\n                                                                                                                       // 1550\n        _.positionProp = _.options.vertical === true ? 'top' : 'left';                                                 // 1551\n                                                                                                                       // 1552\n        if (_.positionProp === 'top') {                                                                                // 1553\n            _.$slider.addClass('slick-vertical');                                                                      // 1554\n        } else {                                                                                                       // 1555\n            _.$slider.removeClass('slick-vertical');                                                                   // 1556\n        }                                                                                                              // 1557\n                                                                                                                       // 1558\n        if (bodyStyle.WebkitTransition !== undefined ||                                                                // 1559\n            bodyStyle.MozTransition !== undefined ||                                                                   // 1560\n            bodyStyle.msTransition !== undefined) {                                                                    // 1561\n            if(_.options.useCSS === true) {                                                                            // 1562\n                _.cssTransitions = true;                                                                               // 1563\n            }                                                                                                          // 1564\n        }                                                                                                              // 1565\n                                                                                                                       // 1566\n        if (bodyStyle.OTransform !== undefined) {                                                                      // 1567\n            _.animType = 'OTransform';                                                                                 // 1568\n            _.transformType = \"-o-transform\";                                                                          // 1569\n            _.transitionType = 'OTransition';                                                                          // 1570\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;\n        }                                                                                                              // 1572\n        if (bodyStyle.MozTransform !== undefined) {                                                                    // 1573\n            _.animType = 'MozTransform';                                                                               // 1574\n            _.transformType = \"-moz-transform\";                                                                        // 1575\n            _.transitionType = 'MozTransition';                                                                        // 1576\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.MozPerspective === undefined) _.animType = false;\n        }                                                                                                              // 1578\n        if (bodyStyle.webkitTransform !== undefined) {                                                                 // 1579\n            _.animType = 'webkitTransform';                                                                            // 1580\n            _.transformType = \"-webkit-transform\";                                                                     // 1581\n            _.transitionType = 'webkitTransition';                                                                     // 1582\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;\n        }                                                                                                              // 1584\n        if (bodyStyle.msTransform !== undefined) {                                                                     // 1585\n            _.animType = 'msTransform';                                                                                // 1586\n            _.transformType = \"-ms-transform\";                                                                         // 1587\n            _.transitionType = 'msTransition';                                                                         // 1588\n            if (bodyStyle.msTransform === undefined) _.animType = false;                                               // 1589\n        }                                                                                                              // 1590\n        if (bodyStyle.transform !== undefined && _.animType !== false) {                                               // 1591\n            _.animType = 'transform';                                                                                  // 1592\n            _.transformType = \"transform\";                                                                             // 1593\n            _.transitionType = 'transition';                                                                           // 1594\n        }                                                                                                              // 1595\n        _.transformsEnabled = (_.animType !== null && _.animType !== false);                                           // 1596\n                                                                                                                       // 1597\n    };                                                                                                                 // 1598\n                                                                                                                       // 1599\n                                                                                                                       // 1600\n    Slick.prototype.setSlideClasses = function(index) {                                                                // 1601\n                                                                                                                       // 1602\n        var _ = this,                                                                                                  // 1603\n            centerOffset, allSlides, indexOffset, remainder;                                                           // 1604\n                                                                                                                       // 1605\n        _.$slider.find('.slick-slide').removeClass('slick-active').attr(\"aria-hidden\",\"true\").removeClass('slick-center');\n        allSlides = _.$slider.find('.slick-slide');                                                                    // 1607\n                                                                                                                       // 1608\n        if (_.options.centerMode === true) {                                                                           // 1609\n                                                                                                                       // 1610\n            centerOffset = Math.floor(_.options.slidesToShow / 2);                                                     // 1611\n                                                                                                                       // 1612\n            if(_.options.infinite === true) {                                                                          // 1613\n                                                                                                                       // 1614\n                if (index >= centerOffset && index <= (_.slideCount - 1) - centerOffset) {                             // 1615\n                    _.$slides.slice(index - centerOffset, index + centerOffset + 1).addClass('slick-active').attr(\"aria-hidden\",\"false\");\n                } else {                                                                                               // 1617\n                    indexOffset = _.options.slidesToShow + index;                                                      // 1618\n                    allSlides.slice(indexOffset - centerOffset + 1, indexOffset + centerOffset + 2).addClass('slick-active').attr(\"aria-hidden\",\"false\");\n                }                                                                                                      // 1620\n                                                                                                                       // 1621\n                if (index === 0) {                                                                                     // 1622\n                    allSlides.eq(allSlides.length - 1 - _.options.slidesToShow).addClass('slick-center');              // 1623\n                } else if (index === _.slideCount - 1) {                                                               // 1624\n                    allSlides.eq(_.options.slidesToShow).addClass('slick-center');                                     // 1625\n                }                                                                                                      // 1626\n                                                                                                                       // 1627\n            }                                                                                                          // 1628\n                                                                                                                       // 1629\n            _.$slides.eq(index).addClass('slick-center');                                                              // 1630\n                                                                                                                       // 1631\n        } else {                                                                                                       // 1632\n                                                                                                                       // 1633\n            if (index >= 0 && index <= (_.slideCount - _.options.slidesToShow)) {                                      // 1634\n                _.$slides.slice(index, index + _.options.slidesToShow).addClass('slick-active').attr(\"aria-hidden\",\"false\");\n            } else if ( allSlides.length <= _.options.slidesToShow ) {                                                 // 1636\n                allSlides.addClass('slick-active').attr(\"aria-hidden\",\"false\");                                        // 1637\n            } else {                                                                                                   // 1638\n                remainder = _.slideCount%_.options.slidesToShow;                                                       // 1639\n                indexOffset = _.options.infinite === true ? _.options.slidesToShow + index : index;                    // 1640\n                if(_.options.slidesToShow == _.options.slidesToScroll && (_.slideCount - index) < _.options.slidesToShow) {\n                    allSlides.slice(indexOffset-(_.options.slidesToShow-remainder), indexOffset + remainder).addClass('slick-active').attr(\"aria-hidden\",\"false\");\n                } else {                                                                                               // 1643\n                    allSlides.slice(indexOffset, indexOffset + _.options.slidesToShow).addClass('slick-active').attr(\"aria-hidden\",\"false\");\n                }                                                                                                      // 1645\n            }                                                                                                          // 1646\n                                                                                                                       // 1647\n        }                                                                                                              // 1648\n                                                                                                                       // 1649\n        if (_.options.lazyLoad === 'ondemand') {                                                                       // 1650\n            _.lazyLoad();                                                                                              // 1651\n        }                                                                                                              // 1652\n                                                                                                                       // 1653\n    };                                                                                                                 // 1654\n                                                                                                                       // 1655\n    Slick.prototype.setupInfinite = function() {                                                                       // 1656\n                                                                                                                       // 1657\n        var _ = this,                                                                                                  // 1658\n            i, slideIndex, infiniteCount;                                                                              // 1659\n                                                                                                                       // 1660\n        if (_.options.fade === true) {                                                                                 // 1661\n            _.options.centerMode = false;                                                                              // 1662\n        }                                                                                                              // 1663\n                                                                                                                       // 1664\n        if (_.options.infinite === true && _.options.fade === false) {                                                 // 1665\n                                                                                                                       // 1666\n            slideIndex = null;                                                                                         // 1667\n                                                                                                                       // 1668\n            if (_.slideCount > _.options.slidesToShow) {                                                               // 1669\n                                                                                                                       // 1670\n                if (_.options.centerMode === true) {                                                                   // 1671\n                    infiniteCount = _.options.slidesToShow + 1;                                                        // 1672\n                } else {                                                                                               // 1673\n                    infiniteCount = _.options.slidesToShow;                                                            // 1674\n                }                                                                                                      // 1675\n                                                                                                                       // 1676\n                for (i = _.slideCount; i > (_.slideCount -                                                             // 1677\n                    infiniteCount); i -= 1) {                                                                          // 1678\n                    slideIndex = i - 1;                                                                                // 1679\n                    $(_.$slides[slideIndex]).clone(true).attr('id', '')                                                // 1680\n                        .attr('data-slick-index', slideIndex-_.slideCount)                                             // 1681\n                        .prependTo(_.$slideTrack).addClass('slick-cloned');                                            // 1682\n                }                                                                                                      // 1683\n                for (i = 0; i < infiniteCount; i += 1) {                                                               // 1684\n                    slideIndex = i;                                                                                    // 1685\n                    $(_.$slides[slideIndex]).clone(true).attr('id', '')                                                // 1686\n                        .attr('data-slick-index', slideIndex+_.slideCount)                                             // 1687\n                        .appendTo(_.$slideTrack).addClass('slick-cloned');                                             // 1688\n                }                                                                                                      // 1689\n                _.$slideTrack.find('.slick-cloned').find('[id]').each(function() {                                     // 1690\n                    $(this).attr('id', '');                                                                            // 1691\n                });                                                                                                    // 1692\n                                                                                                                       // 1693\n            }                                                                                                          // 1694\n                                                                                                                       // 1695\n        }                                                                                                              // 1696\n                                                                                                                       // 1697\n    };                                                                                                                 // 1698\n                                                                                                                       // 1699\n    Slick.prototype.selectHandler = function(event) {                                                                  // 1700\n                                                                                                                       // 1701\n        var _ = this;                                                                                                  // 1702\n        var index = parseInt($(event.target).parents('.slick-slide').attr(\"data-slick-index\"));                        // 1703\n        if(!index) index = 0;                                                                                          // 1704\n                                                                                                                       // 1705\n        if(_.slideCount <= _.options.slidesToShow){                                                                    // 1706\n            _.$slider.find('.slick-slide').removeClass('slick-active').attr(\"aria-hidden\",\"true\");                     // 1707\n            _.$slides.eq(index).addClass('slick-active').attr(\"aria-hidden\",\"false\");                                  // 1708\n            if(_.options.centerMode === true) {                                                                        // 1709\n                _.$slider.find('.slick-slide').removeClass('slick-center');                                            // 1710\n                _.$slides.eq(index).addClass('slick-center');                                                          // 1711\n            }                                                                                                          // 1712\n            _.asNavFor(index);                                                                                         // 1713\n            return;                                                                                                    // 1714\n        }                                                                                                              // 1715\n        _.slideHandler(index);                                                                                         // 1716\n                                                                                                                       // 1717\n    };                                                                                                                 // 1718\n                                                                                                                       // 1719\n    Slick.prototype.slideHandler = function(index,sync,dontAnimate) {                                                  // 1720\n                                                                                                                       // 1721\n        var targetSlide, animSlide, oldSlide, slideLeft, targetLeft = null,                                            // 1722\n            _ = this;                                                                                                  // 1723\n                                                                                                                       // 1724\n        sync = sync || false;                                                                                          // 1725\n                                                                                                                       // 1726\n        if (_.animating === true && _.options.waitForAnimate === true) {                                               // 1727\n            return;                                                                                                    // 1728\n        }                                                                                                              // 1729\n                                                                                                                       // 1730\n        if (_.options.fade === true && _.currentSlide === index) {                                                     // 1731\n            return;                                                                                                    // 1732\n        }                                                                                                              // 1733\n                                                                                                                       // 1734\n        if (_.slideCount <= _.options.slidesToShow) {                                                                  // 1735\n            return;                                                                                                    // 1736\n        }                                                                                                              // 1737\n                                                                                                                       // 1738\n        if (sync === false) {                                                                                          // 1739\n            _.asNavFor(index);                                                                                         // 1740\n        }                                                                                                              // 1741\n                                                                                                                       // 1742\n        targetSlide = index;                                                                                           // 1743\n        targetLeft = _.getLeft(targetSlide);                                                                           // 1744\n        slideLeft = _.getLeft(_.currentSlide);                                                                         // 1745\n                                                                                                                       // 1746\n        _.currentLeft = _.swipeLeft === null ? slideLeft : _.swipeLeft;                                                // 1747\n                                                                                                                       // 1748\n        if (_.options.infinite === false && _.options.centerMode === false && (index < 0 || index > _.getDotCount() * _.options.slidesToScroll)) {\n            if(_.options.fade === false) {                                                                             // 1750\n                targetSlide = _.currentSlide;                                                                          // 1751\n                if(dontAnimate!==true) {                                                                               // 1752\n                    _.animateSlide(slideLeft, function() {                                                             // 1753\n                        _.postSlide(targetSlide);                                                                      // 1754\n                    });                                                                                                // 1755\n                } else {                                                                                               // 1756\n                    _.postSlide(targetSlide);                                                                          // 1757\n                }                                                                                                      // 1758\n            }                                                                                                          // 1759\n            return;                                                                                                    // 1760\n        } else if (_.options.infinite === false && _.options.centerMode === true && (index < 0 || index > (_.slideCount - _.options.slidesToScroll))) {\n            if(_.options.fade === false) {                                                                             // 1762\n                targetSlide = _.currentSlide;                                                                          // 1763\n                if(dontAnimate!==true) {                                                                               // 1764\n                    _.animateSlide(slideLeft, function() {                                                             // 1765\n                        _.postSlide(targetSlide);                                                                      // 1766\n                    });                                                                                                // 1767\n                } else {                                                                                               // 1768\n                    _.postSlide(targetSlide);                                                                          // 1769\n                }                                                                                                      // 1770\n            }                                                                                                          // 1771\n            return;                                                                                                    // 1772\n        }                                                                                                              // 1773\n                                                                                                                       // 1774\n        if (_.options.autoplay === true) {                                                                             // 1775\n            clearInterval(_.autoPlayTimer);                                                                            // 1776\n        }                                                                                                              // 1777\n                                                                                                                       // 1778\n        if (targetSlide < 0) {                                                                                         // 1779\n            if (_.slideCount % _.options.slidesToScroll !== 0) {                                                       // 1780\n                animSlide = _.slideCount - (_.slideCount % _.options.slidesToScroll);                                  // 1781\n            } else {                                                                                                   // 1782\n                animSlide = _.slideCount + targetSlide;                                                                // 1783\n            }                                                                                                          // 1784\n        } else if (targetSlide >= _.slideCount) {                                                                      // 1785\n            if (_.slideCount % _.options.slidesToScroll !== 0) {                                                       // 1786\n                animSlide = 0;                                                                                         // 1787\n            } else {                                                                                                   // 1788\n                animSlide = targetSlide - _.slideCount;                                                                // 1789\n            }                                                                                                          // 1790\n        } else {                                                                                                       // 1791\n            animSlide = targetSlide;                                                                                   // 1792\n        }                                                                                                              // 1793\n                                                                                                                       // 1794\n        _.animating = true;                                                                                            // 1795\n                                                                                                                       // 1796\n        _.$slider.trigger(\"beforeChange\", [ _ , _.currentSlide, animSlide]);                                           // 1797\n                                                                                                                       // 1798\n        oldSlide = _.currentSlide;                                                                                     // 1799\n        _.currentSlide = animSlide;                                                                                    // 1800\n                                                                                                                       // 1801\n        _.setSlideClasses(_.currentSlide);                                                                             // 1802\n                                                                                                                       // 1803\n        _.updateDots();                                                                                                // 1804\n        _.updateArrows();                                                                                              // 1805\n                                                                                                                       // 1806\n        if (_.options.fade === true) {                                                                                 // 1807\n            if(dontAnimate!==true) {                                                                                   // 1808\n                _.fadeSlide(animSlide, function() {                                                                    // 1809\n                    _.postSlide(animSlide);                                                                            // 1810\n                });                                                                                                    // 1811\n            } else {                                                                                                   // 1812\n                _.postSlide(animSlide);                                                                                // 1813\n            }                                                                                                          // 1814\n            _.animateHeight();                                                                                         // 1815\n            return;                                                                                                    // 1816\n        }                                                                                                              // 1817\n                                                                                                                       // 1818\n        if(dontAnimate!==true) {                                                                                       // 1819\n            _.animateSlide(targetLeft, function() {                                                                    // 1820\n                _.postSlide(animSlide);                                                                                // 1821\n            });                                                                                                        // 1822\n        } else {                                                                                                       // 1823\n            _.postSlide(animSlide);                                                                                    // 1824\n        }                                                                                                              // 1825\n                                                                                                                       // 1826\n    };                                                                                                                 // 1827\n                                                                                                                       // 1828\n    Slick.prototype.startLoad = function() {                                                                           // 1829\n                                                                                                                       // 1830\n        var _ = this;                                                                                                  // 1831\n                                                                                                                       // 1832\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {                                      // 1833\n                                                                                                                       // 1834\n            _.$prevArrow.hide();                                                                                       // 1835\n            _.$nextArrow.hide();                                                                                       // 1836\n                                                                                                                       // 1837\n        }                                                                                                              // 1838\n                                                                                                                       // 1839\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {                                        // 1840\n                                                                                                                       // 1841\n            _.$dots.hide();                                                                                            // 1842\n                                                                                                                       // 1843\n        }                                                                                                              // 1844\n                                                                                                                       // 1845\n        _.$slider.addClass('slick-loading');                                                                           // 1846\n                                                                                                                       // 1847\n    };                                                                                                                 // 1848\n                                                                                                                       // 1849\n    Slick.prototype.swipeDirection = function() {                                                                      // 1850\n                                                                                                                       // 1851\n        var xDist, yDist, r, swipeAngle, _ = this;                                                                     // 1852\n                                                                                                                       // 1853\n        xDist = _.touchObject.startX - _.touchObject.curX;                                                             // 1854\n        yDist = _.touchObject.startY - _.touchObject.curY;                                                             // 1855\n        r = Math.atan2(yDist, xDist);                                                                                  // 1856\n                                                                                                                       // 1857\n        swipeAngle = Math.round(r * 180 / Math.PI);                                                                    // 1858\n        if (swipeAngle < 0) {                                                                                          // 1859\n            swipeAngle = 360 - Math.abs(swipeAngle);                                                                   // 1860\n        }                                                                                                              // 1861\n                                                                                                                       // 1862\n        if ((swipeAngle <= 45) && (swipeAngle >= 0)) {                                                                 // 1863\n            return (_.options.rtl === false ? 'left' : 'right');                                                       // 1864\n        }                                                                                                              // 1865\n        if ((swipeAngle <= 360) && (swipeAngle >= 315)) {                                                              // 1866\n            return (_.options.rtl === false ? 'left' : 'right');                                                       // 1867\n        }                                                                                                              // 1868\n        if ((swipeAngle >= 135) && (swipeAngle <= 225)) {                                                              // 1869\n            return (_.options.rtl === false ? 'right' : 'left');                                                       // 1870\n        }                                                                                                              // 1871\n                                                                                                                       // 1872\n        return 'vertical';                                                                                             // 1873\n                                                                                                                       // 1874\n    };                                                                                                                 // 1875\n                                                                                                                       // 1876\n    Slick.prototype.swipeEnd = function(event) {                                                                       // 1877\n                                                                                                                       // 1878\n        var _ = this, slideCount;                                                                                      // 1879\n                                                                                                                       // 1880\n        _.dragging = false;                                                                                            // 1881\n                                                                                                                       // 1882\n        _.shouldClick = (_.touchObject.swipeLength > 10) ? false : true;                                               // 1883\n                                                                                                                       // 1884\n        if (_.touchObject.curX === undefined) {                                                                        // 1885\n            return false;                                                                                              // 1886\n        }                                                                                                              // 1887\n                                                                                                                       // 1888\n        if (_.touchObject.edgeHit === true) {                                                                          // 1889\n            _.$slider.trigger(\"edge\", [  _, _.swipeDirection()]);                                                      // 1890\n        }                                                                                                              // 1891\n                                                                                                                       // 1892\n        if (_.touchObject.swipeLength >= _.touchObject.minSwipe) {                                                     // 1893\n                                                                                                                       // 1894\n            switch (_.swipeDirection()) {                                                                              // 1895\n                case 'left':                                                                                           // 1896\n                    slideCount = _.options.swipeToSlide ? _.checkNavigable(_.currentSlide + _.getSlideCount()) : _.currentSlide + _.getSlideCount();\n                    _.slideHandler(slideCount);                                                                        // 1898\n                    _.currentDirection = 0;                                                                            // 1899\n                    _.touchObject = {};                                                                                // 1900\n                    _.$slider.trigger(\"swipe\", [ _, \"left\"]);                                                          // 1901\n                    break;                                                                                             // 1902\n                                                                                                                       // 1903\n                case 'right':                                                                                          // 1904\n                    slideCount = _.options.swipeToSlide ? _.checkNavigable(_.currentSlide - _.getSlideCount()) : _.currentSlide - _.getSlideCount();\n                    _.slideHandler(slideCount);                                                                        // 1906\n                    _.currentDirection = 1;                                                                            // 1907\n                    _.touchObject = {};                                                                                // 1908\n                    _.$slider.trigger(\"swipe\", [ _, \"right\"]);                                                         // 1909\n                    break;                                                                                             // 1910\n            }                                                                                                          // 1911\n        } else {                                                                                                       // 1912\n            if(_.touchObject.startX !== _.touchObject.curX) {                                                          // 1913\n                _.slideHandler(_.currentSlide);                                                                        // 1914\n                _.touchObject = {};                                                                                    // 1915\n            }                                                                                                          // 1916\n        }                                                                                                              // 1917\n                                                                                                                       // 1918\n    };                                                                                                                 // 1919\n                                                                                                                       // 1920\n    Slick.prototype.swipeHandler = function(event) {                                                                   // 1921\n                                                                                                                       // 1922\n        var _ = this;                                                                                                  // 1923\n                                                                                                                       // 1924\n        if ((_.options.swipe === false) || ('ontouchend' in document && _.options.swipe === false)) {                  // 1925\n           return;                                                                                                     // 1926\n        } else if (_.options.draggable === false && event.type.indexOf('mouse') !== -1) {                              // 1927\n           return;                                                                                                     // 1928\n        }                                                                                                              // 1929\n                                                                                                                       // 1930\n        _.touchObject.fingerCount = event.originalEvent && event.originalEvent.touches !== undefined ?                 // 1931\n            event.originalEvent.touches.length : 1;                                                                    // 1932\n                                                                                                                       // 1933\n        _.touchObject.minSwipe = _.listWidth / _.options                                                               // 1934\n            .touchThreshold;                                                                                           // 1935\n                                                                                                                       // 1936\n        switch (event.data.action) {                                                                                   // 1937\n                                                                                                                       // 1938\n            case 'start':                                                                                              // 1939\n                _.swipeStart(event);                                                                                   // 1940\n                break;                                                                                                 // 1941\n                                                                                                                       // 1942\n            case 'move':                                                                                               // 1943\n                _.swipeMove(event);                                                                                    // 1944\n                break;                                                                                                 // 1945\n                                                                                                                       // 1946\n            case 'end':                                                                                                // 1947\n                _.swipeEnd(event);                                                                                     // 1948\n                break;                                                                                                 // 1949\n                                                                                                                       // 1950\n        }                                                                                                              // 1951\n                                                                                                                       // 1952\n    };                                                                                                                 // 1953\n                                                                                                                       // 1954\n    Slick.prototype.swipeMove = function(event) {                                                                      // 1955\n                                                                                                                       // 1956\n        var _ = this,                                                                                                  // 1957\n            edgeWasHit = false,                                                                                        // 1958\n            curLeft, swipeDirection, swipeLength, positionOffset, touches;                                             // 1959\n                                                                                                                       // 1960\n        touches = event.originalEvent !== undefined ? event.originalEvent.touches : null;                              // 1961\n                                                                                                                       // 1962\n        if (!_.dragging || touches && touches.length !== 1) {                                                          // 1963\n            return false;                                                                                              // 1964\n        }                                                                                                              // 1965\n                                                                                                                       // 1966\n        curLeft = _.getLeft(_.currentSlide);                                                                           // 1967\n                                                                                                                       // 1968\n        _.touchObject.curX = touches !== undefined ? touches[0].pageX : event.clientX;                                 // 1969\n        _.touchObject.curY = touches !== undefined ? touches[0].pageY : event.clientY;                                 // 1970\n                                                                                                                       // 1971\n        _.touchObject.swipeLength = Math.round(Math.sqrt(                                                              // 1972\n            Math.pow(_.touchObject.curX - _.touchObject.startX, 2)));                                                  // 1973\n                                                                                                                       // 1974\n        swipeDirection = _.swipeDirection();                                                                           // 1975\n                                                                                                                       // 1976\n        if (swipeDirection === 'vertical') {                                                                           // 1977\n            return;                                                                                                    // 1978\n        }                                                                                                              // 1979\n                                                                                                                       // 1980\n        if (event.originalEvent !== undefined && _.touchObject.swipeLength > 4) {                                      // 1981\n            event.preventDefault();                                                                                    // 1982\n        }                                                                                                              // 1983\n                                                                                                                       // 1984\n        positionOffset = (_.options.rtl === false ? 1 : -1) * (_.touchObject.curX > _.touchObject.startX ? 1 : -1);    // 1985\n                                                                                                                       // 1986\n        swipeLength = _.touchObject.swipeLength;                                                                       // 1987\n                                                                                                                       // 1988\n        _.touchObject.edgeHit = false;                                                                                 // 1989\n                                                                                                                       // 1990\n        if (_.options.infinite === false) {                                                                            // 1991\n            if ((_.currentSlide === 0 && swipeDirection === \"right\") || (_.currentSlide >= _.getDotCount() && swipeDirection === \"left\")) {\n                swipeLength = _.touchObject.swipeLength * _.options.edgeFriction;                                      // 1993\n                _.touchObject.edgeHit = true;                                                                          // 1994\n            }                                                                                                          // 1995\n        }                                                                                                              // 1996\n                                                                                                                       // 1997\n        if (_.options.vertical === false) {                                                                            // 1998\n            _.swipeLeft = curLeft + swipeLength * positionOffset;                                                      // 1999\n        } else {                                                                                                       // 2000\n            _.swipeLeft = curLeft + (swipeLength * (_.$list.height() / _.listWidth)) * positionOffset;                 // 2001\n        }                                                                                                              // 2002\n                                                                                                                       // 2003\n        if (_.options.fade === true || _.options.touchMove === false) {                                                // 2004\n            return false;                                                                                              // 2005\n        }                                                                                                              // 2006\n                                                                                                                       // 2007\n        if (_.animating === true) {                                                                                    // 2008\n            _.swipeLeft = null;                                                                                        // 2009\n            return false;                                                                                              // 2010\n        }                                                                                                              // 2011\n                                                                                                                       // 2012\n        _.setCSS(_.swipeLeft);                                                                                         // 2013\n                                                                                                                       // 2014\n    };                                                                                                                 // 2015\n                                                                                                                       // 2016\n    Slick.prototype.swipeStart = function(event) {                                                                     // 2017\n                                                                                                                       // 2018\n        var _ = this,                                                                                                  // 2019\n            touches;                                                                                                   // 2020\n                                                                                                                       // 2021\n        if (_.touchObject.fingerCount !== 1 || _.slideCount <= _.options.slidesToShow) {                               // 2022\n            _.touchObject = {};                                                                                        // 2023\n            return false;                                                                                              // 2024\n        }                                                                                                              // 2025\n                                                                                                                       // 2026\n        if (event.originalEvent !== undefined && event.originalEvent.touches !== undefined) {                          // 2027\n            touches = event.originalEvent.touches[0];                                                                  // 2028\n        }                                                                                                              // 2029\n                                                                                                                       // 2030\n        _.touchObject.startX = _.touchObject.curX = touches !== undefined ? touches.pageX : event.clientX;             // 2031\n        _.touchObject.startY = _.touchObject.curY = touches !== undefined ? touches.pageY : event.clientY;             // 2032\n                                                                                                                       // 2033\n        _.dragging = true;                                                                                             // 2034\n                                                                                                                       // 2035\n    };                                                                                                                 // 2036\n                                                                                                                       // 2037\n    Slick.prototype.unfilterSlides = Slick.prototype.slickUnfilter = function() {                                      // 2038\n                                                                                                                       // 2039\n        var _ = this;                                                                                                  // 2040\n                                                                                                                       // 2041\n        if (_.$slidesCache !== null) {                                                                                 // 2042\n                                                                                                                       // 2043\n            _.unload();                                                                                                // 2044\n                                                                                                                       // 2045\n            _.$slideTrack.children(this.options.slide).detach();                                                       // 2046\n                                                                                                                       // 2047\n            _.$slidesCache.appendTo(_.$slideTrack);                                                                    // 2048\n                                                                                                                       // 2049\n            _.reinit();                                                                                                // 2050\n                                                                                                                       // 2051\n        }                                                                                                              // 2052\n                                                                                                                       // 2053\n    };                                                                                                                 // 2054\n                                                                                                                       // 2055\n    Slick.prototype.unload = function() {                                                                              // 2056\n                                                                                                                       // 2057\n        var _ = this;                                                                                                  // 2058\n                                                                                                                       // 2059\n        $('.slick-cloned', _.$slider).remove();                                                                        // 2060\n        if (_.$dots) {                                                                                                 // 2061\n            _.$dots.remove();                                                                                          // 2062\n        }                                                                                                              // 2063\n        if (_.$prevArrow && (typeof _.options.prevArrow !== 'object')) {                                               // 2064\n            _.$prevArrow.remove();                                                                                     // 2065\n        }                                                                                                              // 2066\n        if (_.$nextArrow && (typeof _.options.nextArrow !== 'object')) {                                               // 2067\n            _.$nextArrow.remove();                                                                                     // 2068\n        }                                                                                                              // 2069\n        _.$slides.removeClass('slick-slide slick-active slick-visible').attr(\"aria-hidden\",\"true\").css('width', '');   // 2070\n                                                                                                                       // 2071\n    };                                                                                                                 // 2072\n                                                                                                                       // 2073\n    Slick.prototype.unslick = function() {                                                                             // 2074\n                                                                                                                       // 2075\n        var _ = this;                                                                                                  // 2076\n        _.destroy();                                                                                                   // 2077\n                                                                                                                       // 2078\n    };                                                                                                                 // 2079\n                                                                                                                       // 2080\n    Slick.prototype.updateArrows = function() {                                                                        // 2081\n                                                                                                                       // 2082\n        var _ = this, centerOffset;                                                                                    // 2083\n                                                                                                                       // 2084\n        centerOffset = Math.floor(_.options.slidesToShow / 2);                                                         // 2085\n                                                                                                                       // 2086\n        if (_.options.arrows === true && _.options.infinite !==                                                        // 2087\n            true && _.slideCount > _.options.slidesToShow) {                                                           // 2088\n            _.$prevArrow.removeClass('slick-disabled');                                                                // 2089\n            _.$nextArrow.removeClass('slick-disabled');                                                                // 2090\n            if (_.currentSlide === 0) {                                                                                // 2091\n                _.$prevArrow.addClass('slick-disabled');                                                               // 2092\n                _.$nextArrow.removeClass('slick-disabled');                                                            // 2093\n            } else if (_.currentSlide >= _.slideCount - _.options.slidesToShow && _.options.centerMode === false) {    // 2094\n                _.$nextArrow.addClass('slick-disabled');                                                               // 2095\n                _.$prevArrow.removeClass('slick-disabled');                                                            // 2096\n            } else if (_.currentSlide >= _.slideCount - 1 && _.options.centerMode === true) {                          // 2097\n                _.$nextArrow.addClass('slick-disabled');                                                               // 2098\n                _.$prevArrow.removeClass('slick-disabled');                                                            // 2099\n            }                                                                                                          // 2100\n        }                                                                                                              // 2101\n                                                                                                                       // 2102\n    };                                                                                                                 // 2103\n                                                                                                                       // 2104\n    Slick.prototype.updateDots = function() {                                                                          // 2105\n                                                                                                                       // 2106\n        var _ = this;                                                                                                  // 2107\n                                                                                                                       // 2108\n        if (_.$dots !== null) {                                                                                        // 2109\n                                                                                                                       // 2110\n            _.$dots.find('li').removeClass('slick-active').attr(\"aria-hidden\",\"true\");                                 // 2111\n            _.$dots.find('li').eq(Math.floor(_.currentSlide / _.options.slidesToScroll)).addClass('slick-active').attr(\"aria-hidden\",\"false\");\n                                                                                                                       // 2113\n        }                                                                                                              // 2114\n                                                                                                                       // 2115\n    };                                                                                                                 // 2116\n                                                                                                                       // 2117\n    Slick.prototype.visibility = function() {                                                                          // 2118\n                                                                                                                       // 2119\n        var _ = this;                                                                                                  // 2120\n                                                                                                                       // 2121\n        if( document[ _.hidden ] ) {                                                                                   // 2122\n            _.paused = true;                                                                                           // 2123\n            _.autoPlayClear();                                                                                         // 2124\n        } else {                                                                                                       // 2125\n            _.paused = false;                                                                                          // 2126\n            _.autoPlay();                                                                                              // 2127\n        }                                                                                                              // 2128\n                                                                                                                       // 2129\n    };                                                                                                                 // 2130\n                                                                                                                       // 2131\n    $.fn.slick = function() {                                                                                          // 2132\n        var _ = this, opt = arguments[0], args = Array.prototype.slice.call(arguments,1), l = _.length, i = 0, ret;    // 2133\n        for(i; i < l; i++) {                                                                                           // 2134\n            if (typeof opt == 'object' || typeof opt == 'undefined')                                                   // 2135\n                _[i].slick =  new Slick(_[i], opt);                                                                    // 2136\n            else                                                                                                       // 2137\n                ret = _[i].slick[opt].apply(_[i].slick, args);                                                         // 2138\n                if (typeof ret != 'undefined') return ret;                                                             // 2139\n        }                                                                                                              // 2140\n        return _;                                                                                                      // 2141\n    };                                                                                                                 // 2142\n                                                                                                                       // 2143\n    $(function(){                                                                                                      // 2144\n        $('[data-slick]').slick();                                                                                     // 2145\n    });                                                                                                                // 2146\n                                                                                                                       // 2147\n}));                                                                                                                   // 2148\n                                                                                                                       // 2149\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/vendor/slip.js                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/*                                                                                                                     // 1\n    Slip - swiping and reordering in lists of elements on touch screens, no fuss.                                      // 2\n                                                                                                                       // 3\n    Fires these events on list elements:                                                                               // 4\n                                                                                                                       // 5\n        • slip:swipe                                                                                                   // 6\n            When swipe has been done and user has lifted finger off the screen.                                        // 7\n            If you execute event.preventDefault() the element will be animated back to original position.              // 8\n            Otherwise it will be animated off the list and set to display:none.                                        // 9\n                                                                                                                       // 10\n        • slip:beforeswipe                                                                                             // 11\n            Fired before first swipe movement starts.                                                                  // 12\n            If you execute event.preventDefault() then element will not move at all.                                   // 13\n                                                                                                                       // 14\n        • slip:reorder                                                                                                 // 15\n            Element has been dropped in new location. event.detail contains the location:                              // 16\n                • insertBefore: DOM node before which element has been dropped (null is the end of the list). Use with node.insertBefore().\n                • spliceIndex: Index of element before which current element has been dropped, not counting the element iself.\n                               For use with Array.splice() if the list is reflecting objects in some array.            // 19\n                                                                                                                       // 20\n        • slip:beforereorder                                                                                           // 21\n            When reordering movement starts.                                                                           // 22\n            Element being reordered gets class `slip-reordering`.                                                      // 23\n            If you execute event.preventDefault() then element will not move at all.                                   // 24\n                                                                                                                       // 25\n        • slip:beforewait                                                                                              // 26\n            If you execute event.preventDefault() then reordering will begin immediately, blocking ability to scroll the page.\n                                                                                                                       // 28\n        • slip:tap                                                                                                     // 29\n            When element was tapped without being swiped/reordered.                                                    // 30\n                                                                                                                       // 31\n        • slip:cancelswipe                                                                                             // 32\n            Fired when the user stops dragging and the element returns to its original position.                       // 33\n                                                                                                                       // 34\n                                                                                                                       // 35\n    Usage:                                                                                                             // 36\n                                                                                                                       // 37\n        CSS:                                                                                                           // 38\n            You should set `user-select:none` (and WebKit prefixes, sigh) on list elements,                            // 39\n            otherwise unstoppable and glitchy text selection in iOS will get in the way.                               // 40\n                                                                                                                       // 41\n            You should set `overflow-x: hidden` on the container or body to prevent horizontal scrollbar               // 42\n            appearing when elements are swiped off the list.                                                           // 43\n                                                                                                                       // 44\n                                                                                                                       // 45\n        var list = document.querySelector('ul#slippylist');                                                            // 46\n        new Slip(list);                                                                                                // 47\n                                                                                                                       // 48\n        list.addEventListener('slip:beforeswipe', function(e) {                                                        // 49\n            if (shouldNotSwipe(e.target)) e.preventDefault();                                                          // 50\n        });                                                                                                            // 51\n                                                                                                                       // 52\n        list.addEventListener('slip:swipe', function(e) {                                                              // 53\n            // e.target swiped                                                                                         // 54\n            if (thatWasSwipeToRemove) {                                                                                // 55\n                e.target.parentNode.removeChild(e.target);                                                             // 56\n            } else {                                                                                                   // 57\n                e.preventDefault(); // will animate back to original position                                          // 58\n            }                                                                                                          // 59\n        });                                                                                                            // 60\n                                                                                                                       // 61\n        list.addEventListener('slip:beforereorder', function(e) {                                                      // 62\n            if (shouldNotReorder(e.target)) e.preventDefault();                                                        // 63\n        });                                                                                                            // 64\n                                                                                                                       // 65\n        list.addEventListener('slip:reorder', function(e) {                                                            // 66\n            // e.target reordered.                                                                                     // 67\n            if (reorderedOK) {                                                                                         // 68\n                e.target.parentNode.insertBefore(e.target, e.detail.insertBefore);                                     // 69\n            } else {                                                                                                   // 70\n                e.preventDefault();                                                                                    // 71\n            }                                                                                                          // 72\n        });                                                                                                            // 73\n                                                                                                                       // 74\n    Requires:                                                                                                          // 75\n        • Touch events                                                                                                 // 76\n        • CSS transforms                                                                                               // 77\n        • Function.bind()                                                                                              // 78\n                                                                                                                       // 79\n    Caveats:                                                                                                           // 80\n        • Elements must not change size while reordering or swiping takes place (otherwise it will be visually out of sync)\n*/                                                                                                                     // 82\n/*! @license                                                                                                           // 83\n    Slip.js 1.2.0                                                                                                      // 84\n                                                                                                                       // 85\n    © 2014 Kornel Lesiński <kornel@geekhood.net>. All rights reserved.                                                 // 86\n                                                                                                                       // 87\n    Redistribution and use in source and binary forms, with or without modification,                                   // 88\n    are permitted provided that the following conditions are met:                                                      // 89\n                                                                                                                       // 90\n    1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n                                                                                                                       // 92\n    2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and           // 93\n       the following disclaimer in the documentation and/or other materials provided with the distribution.            // 94\n                                                                                                                       // 95\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n    INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  // 97\n    DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n    SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR    // 99\n    SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,  // 100\n    WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE   // 101\n    USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                                           // 102\n*/                                                                                                                     // 103\n                                                                                                                       // 104\nwindow['Slip'] = (function(){                                                                                          // 105\n    'use strict';                                                                                                      // 106\n                                                                                                                       // 107\n    var damnYouChrome = /Chrome\\/[34]/.test(navigator.userAgent); // For bugs that can't be programmatically detected :( Intended to catch all versions of Chrome 30-40\n    var needsBodyHandlerHack = damnYouChrome; // Otherwise I _sometimes_ don't get any touchstart events and only clicks instead.\n                                                                                                                       // 110\n    /* When dragging elements down in Chrome (tested 34-37) dragged element may appear below stationary elements.      // 111\n       Looks like WebKit bug #61824, but iOS Safari doesn't have that problem. */                                      // 112\n    var compositorDoesNotOrderLayers = damnYouChrome;                                                                  // 113\n                                                                                                                       // 114\n    // -webkit-mess                                                                                                    // 115\n    var testElement = document.createElement('div');                                                                   // 116\n                                                                                                                       // 117\n    var transitionPrefix = \"webkitTransition\" in testElement.style ? \"webkitTransition\" : \"transition\";                // 118\n    var transformPrefix = \"webkitTransform\" in testElement.style ? \"webkitTransform\" : \"transform\";                    // 119\n    var transformProperty = transformPrefix === \"webkitTransform\" ? \"-webkit-transform\" : \"transform\";                 // 120\n    var userSelectPrefix = \"webkitUserSelect\" in testElement.style ? \"webkitUserSelect\" : \"userSelect\";                // 121\n                                                                                                                       // 122\n    testElement.style[transformPrefix] = 'translateZ(0)';                                                              // 123\n    var hwLayerMagic = testElement.style[transformPrefix] ? 'translateZ(0) ' : '';                                     // 124\n    var hwTopLayerMagic = testElement.style[transformPrefix] ? 'translateZ(1px) ' : '';                                // 125\n    testElement = null;                                                                                                // 126\n                                                                                                                       // 127\n    var globalInstances = 0;                                                                                           // 128\n    var attachedBodyHandlerHack = false;                                                                               // 129\n    var nullHandler = function(){};                                                                                    // 130\n                                                                                                                       // 131\n    function Slip(container, options) {                                                                                // 132\n        if ('string' === typeof container) container = document.querySelector(container);                              // 133\n        if (!container || !container.addEventListener) throw new Error(\"Please specify DOM node to attach to\");        // 134\n                                                                                                                       // 135\n        if (!this || this === window) return new Slip(container, options);                                             // 136\n                                                                                                                       // 137\n        this.options = options;                                                                                        // 138\n                                                                                                                       // 139\n        // Functions used for as event handlers need usable `this` and must not change to be removable                 // 140\n        this.cancel = this.setState.bind(this, this.states.idle);                                                      // 141\n        this.onTouchStart = this.onTouchStart.bind(this);                                                              // 142\n        this.onTouchMove = this.onTouchMove.bind(this);                                                                // 143\n        this.onTouchEnd = this.onTouchEnd.bind(this);                                                                  // 144\n        this.onMouseDown = this.onMouseDown.bind(this);                                                                // 145\n        this.onMouseMove = this.onMouseMove.bind(this);                                                                // 146\n        this.onMouseUp = this.onMouseUp.bind(this);                                                                    // 147\n        this.onMouseLeave = this.onMouseLeave.bind(this);                                                              // 148\n        this.onSelection = this.onSelection.bind(this);                                                                // 149\n                                                                                                                       // 150\n        this.setState(this.states.idle);                                                                               // 151\n        this.attach(container);                                                                                        // 152\n    }                                                                                                                  // 153\n                                                                                                                       // 154\n    function getTransform(node) {                                                                                      // 155\n        var transform = node.style[transformPrefix];                                                                   // 156\n        if (transform) {                                                                                               // 157\n            return {                                                                                                   // 158\n                value:transform,                                                                                       // 159\n                original:transform,                                                                                    // 160\n            };                                                                                                         // 161\n        }                                                                                                              // 162\n                                                                                                                       // 163\n        if (window.getComputedStyle) {                                                                                 // 164\n            var style = window.getComputedStyle(node).getPropertyValue(transformProperty);                             // 165\n            if (style && style !== 'none') return {value:style, original:''};                                          // 166\n        }                                                                                                              // 167\n        return {value:'', original:''};                                                                                // 168\n    }                                                                                                                  // 169\n                                                                                                                       // 170\n    function findIndex(target, nodes) {                                                                                // 171\n      var originalIndex = 0;                                                                                           // 172\n      var listCount = 0;                                                                                               // 173\n                                                                                                                       // 174\n      for (var i=0; i < nodes.length; i++) {                                                                           // 175\n        if (nodes[i].nodeType === 1) {                                                                                 // 176\n          listCount++;                                                                                                 // 177\n          if (nodes[i] === target.node) {                                                                              // 178\n            originalIndex = listCount-1;                                                                               // 179\n          }                                                                                                            // 180\n        }                                                                                                              // 181\n      }                                                                                                                // 182\n                                                                                                                       // 183\n      return originalIndex;                                                                                            // 184\n    }                                                                                                                  // 185\n                                                                                                                       // 186\n    // All functions in states are going to be executed in context of Slip object                                      // 187\n    Slip.prototype = {                                                                                                 // 188\n                                                                                                                       // 189\n        container: null,                                                                                               // 190\n        options: {},                                                                                                   // 191\n        state: null,                                                                                                   // 192\n                                                                                                                       // 193\n        target: null, // the tapped/swiped/reordered node with height and backed up styles                             // 194\n                                                                                                                       // 195\n        usingTouch: false, // there's no good way to detect touchscreen preference other than receiving a touch event (really, trust me).\n        mouseHandlersAttached: false,                                                                                  // 197\n                                                                                                                       // 198\n        startPosition: null, // x,y,time where first touch began                                                       // 199\n        latestPosition: null, // x,y,time where the finger is currently                                                // 200\n        previousPosition: null, // x,y,time where the finger was ~100ms ago (for velocity calculation)                 // 201\n                                                                                                                       // 202\n        canPreventScrolling: false,                                                                                    // 203\n                                                                                                                       // 204\n        states: {                                                                                                      // 205\n            idle: function idleStateInit() {                                                                           // 206\n                this.target = null;                                                                                    // 207\n                this.usingTouch = false;                                                                               // 208\n                this.removeMouseHandlers();                                                                            // 209\n                                                                                                                       // 210\n                return {                                                                                               // 211\n                    allowTextSelection: true,                                                                          // 212\n                };                                                                                                     // 213\n            },                                                                                                         // 214\n                                                                                                                       // 215\n            undecided: function undecidedStateInit() {                                                                 // 216\n                this.target.height = this.target.node.offsetHeight;                                                    // 217\n                this.target.node.style[transitionPrefix] = '';                                                         // 218\n                                                                                                                       // 219\n                if (!this.dispatch(this.target.originalTarget, 'beforewait')) {                                        // 220\n                  if (this.dispatch(this.target.originalTarget, 'beforereorder')) {                                    // 221\n                    this.setState(this.states.reorder);                                                                // 222\n                  }                                                                                                    // 223\n                } else {                                                                                               // 224\n                    var holdTimer = setTimeout(function(){                                                             // 225\n                        var move = this.getAbsoluteMovement();                                                         // 226\n                        if (this.canPreventScrolling && move.x < 15 && move.y < 25) {                                  // 227\n                            if (this.dispatch(this.target.originalTarget, 'beforereorder')) {                          // 228\n                                this.setState(this.states.reorder);                                                    // 229\n                            }                                                                                          // 230\n                        }                                                                                              // 231\n                    }.bind(this), 300);                                                                                // 232\n                }                                                                                                      // 233\n                                                                                                                       // 234\n                return {                                                                                               // 235\n                    leaveState: function() {                                                                           // 236\n                        clearTimeout(holdTimer);                                                                       // 237\n                    },                                                                                                 // 238\n                                                                                                                       // 239\n                    onMove: function() {                                                                               // 240\n                        var move = this.getAbsoluteMovement();                                                         // 241\n                                                                                                                       // 242\n                        if (move.x > 20 && move.y < Math.max(100, this.target.height)) {                               // 243\n                            if (this.dispatch(this.target.originalTarget, 'beforeswipe')) {                            // 244\n                                this.setState(this.states.swipe);                                                      // 245\n                                return false;                                                                          // 246\n                            } else {                                                                                   // 247\n                                this.setState(this.states.idle);                                                       // 248\n                            }                                                                                          // 249\n                        }                                                                                              // 250\n                        if (move.y > 20) {                                                                             // 251\n                            this.setState(this.states.idle);                                                           // 252\n                        }                                                                                              // 253\n                                                                                                                       // 254\n                        // Chrome likes sideways scrolling :(                                                          // 255\n                        if (move.x > move.y*1.2) return false;                                                         // 256\n                    },                                                                                                 // 257\n                                                                                                                       // 258\n                    onLeave: function() {                                                                              // 259\n                        this.setState(this.states.idle);                                                               // 260\n                    },                                                                                                 // 261\n                                                                                                                       // 262\n                    onEnd: function() {                                                                                // 263\n                        var allowDefault = this.dispatch(this.target.originalTarget, 'tap');                           // 264\n                        this.setState(this.states.idle);                                                               // 265\n                        return allowDefault;                                                                           // 266\n                    },                                                                                                 // 267\n                };                                                                                                     // 268\n            },                                                                                                         // 269\n                                                                                                                       // 270\n            swipe: function swipeStateInit() {                                                                         // 271\n                var swipeSuccess = false;                                                                              // 272\n                var container = this.container;                                                                        // 273\n                                                                                                                       // 274\n                var originalIndex = findIndex(this.target, this.container.childNodes);                                 // 275\n                                                                                                                       // 276\n                container.className += ' slip-swiping-container';                                                      // 277\n                function removeClass() {                                                                               // 278\n                    container.className = container.className.replace(/(?:^| )slip-swiping-container/,'');             // 279\n                }                                                                                                      // 280\n                                                                                                                       // 281\n                this.target.height = this.target.node.offsetHeight;                                                    // 282\n                                                                                                                       // 283\n                return {                                                                                               // 284\n                    leaveState: function() {                                                                           // 285\n                        if (swipeSuccess) {                                                                            // 286\n                            this.animateSwipe(function(target){                                                        // 287\n                                target.node.style[transformPrefix] = target.baseTransform.original;                    // 288\n                                target.node.style[transitionPrefix] = '';                                              // 289\n                                if (this.dispatch(target.node, 'afterswipe')) {                                        // 290\n                                    removeClass();                                                                     // 291\n                                    return true;                                                                       // 292\n                                } else {                                                                               // 293\n                                    this.animateToZero(undefined, target);                                             // 294\n                                }                                                                                      // 295\n                            }.bind(this));                                                                             // 296\n                        } else {                                                                                       // 297\n                            this.animateToZero(removeClass);                                                           // 298\n                            this.dispatch(this.target.node, 'cancelswipe');                                            // 299\n                        }                                                                                              // 300\n                    },                                                                                                 // 301\n                                                                                                                       // 302\n                    onMove: function() {                                                                               // 303\n                        var move = this.getTotalMovement();                                                            // 304\n                                                                                                                       // 305\n                        if (Math.abs(move.y) < this.target.height+20) {                                                // 306\n                            this.target.node.style[transformPrefix] = 'translate(' + move.x + 'px,0) ' + hwLayerMagic + this.target.baseTransform.value;\n                            return false;                                                                              // 308\n                        } else {                                                                                       // 309\n                            this.setState(this.states.idle);                                                           // 310\n                        }                                                                                              // 311\n                    },                                                                                                 // 312\n                                                                                                                       // 313\n                    onLeave: function() {                                                                              // 314\n                        this.state.onEnd.call(this);                                                                   // 315\n                    },                                                                                                 // 316\n                                                                                                                       // 317\n                    onEnd: function() {                                                                                // 318\n                        var dx = this.latestPosition.x - this.previousPosition.x;                                      // 319\n                        var dy = this.latestPosition.y - this.previousPosition.y;                                      // 320\n                        var velocity = Math.sqrt(dx*dx + dy*dy) / (this.latestPosition.time - this.previousPosition.time + 1);\n                                                                                                                       // 322\n                        var move = this.getAbsoluteMovement();                                                         // 323\n                        var swiped = velocity > 0.6 && move.time > 110;                                                // 324\n                                                                                                                       // 325\n                        var direction;                                                                                 // 326\n                        if (dx > 0) {                                                                                  // 327\n                            direction = \"right\";                                                                       // 328\n                        } else {                                                                                       // 329\n                            direction = \"left\";                                                                        // 330\n                        }                                                                                              // 331\n                                                                                                                       // 332\n                        if (swiped) {                                                                                  // 333\n                            if (this.dispatch(this.target.node, 'swipe', {direction: direction, originalIndex: originalIndex})) {\n                                swipeSuccess = true; // can't animate here, leaveState overrides anim                  // 335\n                            }                                                                                          // 336\n                        }                                                                                              // 337\n                        this.setState(this.states.idle);                                                               // 338\n                        return !swiped;                                                                                // 339\n                    },                                                                                                 // 340\n                };                                                                                                     // 341\n            },                                                                                                         // 342\n                                                                                                                       // 343\n            reorder: function reorderStateInit() {                                                                     // 344\n                this.target.height = this.target.node.offsetHeight;                                                    // 345\n                                                                                                                       // 346\n                var nodes = this.container.childNodes;                                                                 // 347\n                var originalIndex = findIndex(this.target, nodes);                                                     // 348\n                var mouseOutsideTimer;                                                                                 // 349\n                var zero = this.target.node.offsetTop + this.target.height/2;                                          // 350\n                var otherNodes = [];                                                                                   // 351\n                for(var i=0; i < nodes.length; i++) {                                                                  // 352\n                    if (nodes[i].nodeType != 1 || nodes[i] === this.target.node) continue;                             // 353\n                    var t = nodes[i].offsetTop;                                                                        // 354\n                    nodes[i].style[transitionPrefix] = transformProperty + ' 0.2s ease-in-out';                        // 355\n                    otherNodes.push({                                                                                  // 356\n                        node: nodes[i],                                                                                // 357\n                        baseTransform: getTransform(nodes[i]),                                                         // 358\n                        pos: t + (t < zero ? nodes[i].offsetHeight : 0) - zero,                                        // 359\n                    });                                                                                                // 360\n                }                                                                                                      // 361\n                                                                                                                       // 362\n                this.target.node.className += ' slip-reordering';                                                      // 363\n                this.target.node.style.zIndex = '99999';                                                               // 364\n                this.target.node.style[userSelectPrefix] = 'none';                                                     // 365\n                if (compositorDoesNotOrderLayers) {                                                                    // 366\n                    // Chrome's compositor doesn't sort 2D layers                                                      // 367\n                    this.container.style.webkitTransformStyle = 'preserve-3d';                                         // 368\n                }                                                                                                      // 369\n                                                                                                                       // 370\n                function setPosition() {                                                                               // 371\n                    /*jshint validthis:true */                                                                         // 372\n                                                                                                                       // 373\n                    if (mouseOutsideTimer) {                                                                           // 374\n                        // don't care where the mouse is as long as it moves                                           // 375\n                        clearTimeout(mouseOutsideTimer); mouseOutsideTimer = null;                                     // 376\n                    }                                                                                                  // 377\n                                                                                                                       // 378\n                    var move = this.getTotalMovement();                                                                // 379\n                    this.target.node.style[transformPrefix] = 'translate(0,' + move.y + 'px) ' + hwTopLayerMagic + this.target.baseTransform.value;\n                                                                                                                       // 381\n                    var height = this.target.height;                                                                   // 382\n                    otherNodes.forEach(function(o){                                                                    // 383\n                        var off = 0;                                                                                   // 384\n                        if (o.pos < 0 && move.y < 0 && o.pos > move.y) {                                               // 385\n                            off = height;                                                                              // 386\n                        }                                                                                              // 387\n                        else if (o.pos > 0 && move.y > 0 && o.pos < move.y) {                                          // 388\n                            off = -height;                                                                             // 389\n                        }                                                                                              // 390\n                        // FIXME: should change accelerated/non-accelerated state lazily                               // 391\n                        o.node.style[transformPrefix] = off ? 'translate(0,'+off+'px) ' + hwLayerMagic + o.baseTransform.value : o.baseTransform.original;\n                    });                                                                                                // 393\n                    return false;                                                                                      // 394\n                }                                                                                                      // 395\n                                                                                                                       // 396\n                setPosition.call(this);                                                                                // 397\n                                                                                                                       // 398\n                return {                                                                                               // 399\n                    leaveState: function() {                                                                           // 400\n                        if (mouseOutsideTimer) clearTimeout(mouseOutsideTimer);                                        // 401\n                                                                                                                       // 402\n                        if (compositorDoesNotOrderLayers) {                                                            // 403\n                            this.container.style.webkitTransformStyle = '';                                            // 404\n                        }                                                                                              // 405\n                                                                                                                       // 406\n                        this.target.node.className = this.target.node.className.replace(/(?:^| )slip-reordering/,'');  // 407\n                        this.target.node.style[userSelectPrefix] = '';                                                 // 408\n                                                                                                                       // 409\n                        this.animateToZero(function(target){                                                           // 410\n                            target.node.style.zIndex = '';                                                             // 411\n                        });                                                                                            // 412\n                        otherNodes.forEach(function(o){                                                                // 413\n                            o.node.style[transformPrefix] = o.baseTransform.original;                                  // 414\n                            o.node.style[transitionPrefix] = ''; // FIXME: animate to new position                     // 415\n                        });                                                                                            // 416\n                    },                                                                                                 // 417\n                                                                                                                       // 418\n                    onMove: setPosition,                                                                               // 419\n                                                                                                                       // 420\n                    onLeave: function() {                                                                              // 421\n                        // don't let element get stuck if mouse left the window                                        // 422\n                        // but don't cancel immediately as it'd be annoying near window edges                          // 423\n                        if (mouseOutsideTimer) clearTimeout(mouseOutsideTimer);                                        // 424\n                        mouseOutsideTimer = setTimeout(function(){                                                     // 425\n                            mouseOutsideTimer = null;                                                                  // 426\n                            this.cancel();                                                                             // 427\n                        }.bind(this), 700);                                                                            // 428\n                    },                                                                                                 // 429\n                                                                                                                       // 430\n                    onEnd: function() {                                                                                // 431\n                        var move = this.getTotalMovement();                                                            // 432\n                        if (move.y < 0) {                                                                              // 433\n                            for(var i=0; i < otherNodes.length; i++) {                                                 // 434\n                                if (otherNodes[i].pos > move.y) {                                                      // 435\n                                    this.dispatch(this.target.node, 'reorder', {spliceIndex:i, insertBefore:otherNodes[i].node, originalIndex: originalIndex});\n                                    break;                                                                             // 437\n                                }                                                                                      // 438\n                            }                                                                                          // 439\n                        } else {                                                                                       // 440\n                            for(var i=otherNodes.length-1; i >= 0; i--) {                                              // 441\n                                if (otherNodes[i].pos < move.y) {                                                      // 442\n                                    this.dispatch(this.target.node, 'reorder', {spliceIndex:i+1, insertBefore:otherNodes[i+1] ? otherNodes[i+1].node : null, originalIndex: originalIndex});\n                                    break;                                                                             // 444\n                                }                                                                                      // 445\n                            }                                                                                          // 446\n                        }                                                                                              // 447\n                        this.setState(this.states.idle);                                                               // 448\n                        return false;                                                                                  // 449\n                    },                                                                                                 // 450\n                };                                                                                                     // 451\n            },                                                                                                         // 452\n        },                                                                                                             // 453\n                                                                                                                       // 454\n        attach: function(container) {                                                                                  // 455\n            globalInstances++;                                                                                         // 456\n            if (this.container) this.detach();                                                                         // 457\n                                                                                                                       // 458\n            // In some cases taps on list elements send *only* click events and no touch events. Spotted only in Chrome 32+\n            // Having event listener on body seems to solve the issue (although AFAIK may disable smooth scrolling as a side-effect)\n            if (!attachedBodyHandlerHack && needsBodyHandlerHack) {                                                    // 461\n                attachedBodyHandlerHack = true;                                                                        // 462\n                document.body.addEventListener('touchstart', nullHandler, false);                                      // 463\n            }                                                                                                          // 464\n                                                                                                                       // 465\n            this.container = container;                                                                                // 466\n            this.otherNodes = [];                                                                                      // 467\n                                                                                                                       // 468\n            // selection on iOS interferes with reordering                                                             // 469\n            document.addEventListener(\"selectionchange\", this.onSelection, false);                                     // 470\n                                                                                                                       // 471\n            // cancel is called e.g. when iOS detects multitasking gesture                                             // 472\n            this.container.addEventListener('touchcancel', this.cancel, false);                                        // 473\n            this.container.addEventListener('touchstart', this.onTouchStart, false);                                   // 474\n            this.container.addEventListener('touchmove', this.onTouchMove, false);                                     // 475\n            this.container.addEventListener('touchend', this.onTouchEnd, false);                                       // 476\n            this.container.addEventListener('mousedown', this.onMouseDown, false);                                     // 477\n            // mousemove and mouseup are attached dynamically                                                          // 478\n        },                                                                                                             // 479\n                                                                                                                       // 480\n        detach: function() {                                                                                           // 481\n            this.cancel();                                                                                             // 482\n                                                                                                                       // 483\n            this.container.removeEventListener('mousedown', this.onMouseDown, false);                                  // 484\n            this.container.removeEventListener('touchend', this.onTouchEnd, false);                                    // 485\n            this.container.removeEventListener('touchmove', this.onTouchMove, false);                                  // 486\n            this.container.removeEventListener('touchstart', this.onTouchStart, false);                                // 487\n            this.container.removeEventListener('touchcancel', this.cancel, false);                                     // 488\n                                                                                                                       // 489\n            document.removeEventListener(\"selectionchange\", this.onSelection, false);                                  // 490\n                                                                                                                       // 491\n            globalInstances--;                                                                                         // 492\n            if (!globalInstances && attachedBodyHandlerHack) {                                                         // 493\n                attachedBodyHandlerHack = false;                                                                       // 494\n                document.body.removeEventListener('touchstart', nullHandler, false);                                   // 495\n            }                                                                                                          // 496\n        },                                                                                                             // 497\n                                                                                                                       // 498\n        setState: function(newStateCtor){                                                                              // 499\n            if (this.state) {                                                                                          // 500\n                if (this.state.ctor === newStateCtor) return;                                                          // 501\n                if (this.state.leaveState) this.state.leaveState.call(this);                                           // 502\n            }                                                                                                          // 503\n                                                                                                                       // 504\n            // Must be re-entrant in case ctor changes state                                                           // 505\n            var prevState = this.state;                                                                                // 506\n            var nextState = newStateCtor.call(this);                                                                   // 507\n            if (this.state === prevState) {                                                                            // 508\n                nextState.ctor = newStateCtor;                                                                         // 509\n                this.state = nextState;                                                                                // 510\n            }                                                                                                          // 511\n        },                                                                                                             // 512\n                                                                                                                       // 513\n        findTargetNode: function(targetNode) {                                                                         // 514\n            while(targetNode && targetNode.parentNode !== this.container) {                                            // 515\n                targetNode = targetNode.parentNode;                                                                    // 516\n            }                                                                                                          // 517\n            return targetNode;                                                                                         // 518\n        },                                                                                                             // 519\n                                                                                                                       // 520\n        onSelection: function(e) {                                                                                     // 521\n            var isRelated = e.target === document || this.findTargetNode(e);                                           // 522\n            if (!isRelated) return;                                                                                    // 523\n                                                                                                                       // 524\n            if (e.cancelable || e.defaultPrevented) {                                                                  // 525\n                if (!this.state.allowTextSelection) {                                                                  // 526\n                    e.preventDefault();                                                                                // 527\n                }                                                                                                      // 528\n            } else {                                                                                                   // 529\n                // iOS doesn't allow selection to be prevented                                                         // 530\n                this.setState(this.states.idle);                                                                       // 531\n            }                                                                                                          // 532\n        },                                                                                                             // 533\n                                                                                                                       // 534\n        addMouseHandlers: function() {                                                                                 // 535\n            // unlike touch events, mousemove/up is not conveniently fired on the same element,                        // 536\n            // but I don't need to listen to unrelated events all the time                                             // 537\n            if (!this.mouseHandlersAttached) {                                                                         // 538\n                this.mouseHandlersAttached = true;                                                                     // 539\n                document.documentElement.addEventListener('mouseleave', this.onMouseLeave, false);                     // 540\n                window.addEventListener('mousemove', this.onMouseMove, true);                                          // 541\n                window.addEventListener('mouseup', this.onMouseUp, true);                                              // 542\n                window.addEventListener('blur', this.cancel, false);                                                   // 543\n            }                                                                                                          // 544\n        },                                                                                                             // 545\n                                                                                                                       // 546\n        removeMouseHandlers: function() {                                                                              // 547\n            if (this.mouseHandlersAttached) {                                                                          // 548\n                this.mouseHandlersAttached = false;                                                                    // 549\n                document.documentElement.removeEventListener('mouseleave', this.onMouseLeave, false);                  // 550\n                window.removeEventListener('mousemove', this.onMouseMove, true);                                       // 551\n                window.removeEventListener('mouseup', this.onMouseUp, true);                                           // 552\n                window.removeEventListener('blur', this.cancel, false);                                                // 553\n            }                                                                                                          // 554\n        },                                                                                                             // 555\n                                                                                                                       // 556\n        onMouseLeave: function(e) {                                                                                    // 557\n            if (this.usingTouch) return;                                                                               // 558\n                                                                                                                       // 559\n            if (e.target === document.documentElement || e.relatedTarget === document.documentElement) {               // 560\n                if (this.state.onLeave) {                                                                              // 561\n                    this.state.onLeave.call(this);                                                                     // 562\n                }                                                                                                      // 563\n            }                                                                                                          // 564\n        },                                                                                                             // 565\n                                                                                                                       // 566\n        onMouseDown: function(e) {                                                                                     // 567\n            if (this.usingTouch || e.button != 0 || !this.setTarget(e)) return;                                        // 568\n                                                                                                                       // 569\n            this.addMouseHandlers(); // mouseup, etc.                                                                  // 570\n                                                                                                                       // 571\n            this.canPreventScrolling = true; // or rather it doesn't apply to mouse                                    // 572\n                                                                                                                       // 573\n            this.startAtPosition({                                                                                     // 574\n                x: e.clientX,                                                                                          // 575\n                y: e.clientY,                                                                                          // 576\n                time: e.timeStamp,                                                                                     // 577\n            });                                                                                                        // 578\n        },                                                                                                             // 579\n                                                                                                                       // 580\n        onTouchStart: function(e) {                                                                                    // 581\n            this.usingTouch = true;                                                                                    // 582\n            this.canPreventScrolling = true;                                                                           // 583\n                                                                                                                       // 584\n            // This implementation cares only about single touch                                                       // 585\n            if (e.touches.length > 1) {                                                                                // 586\n                this.setState(this.states.idle);                                                                       // 587\n                return;                                                                                                // 588\n            }                                                                                                          // 589\n                                                                                                                       // 590\n            if (!this.setTarget(e)) return;                                                                            // 591\n                                                                                                                       // 592\n            this.startAtPosition({                                                                                     // 593\n                x: e.touches[0].clientX,                                                                               // 594\n                y: e.touches[0].clientY - window.scrollY,                                                              // 595\n                time: e.timeStamp,                                                                                     // 596\n            });                                                                                                        // 597\n        },                                                                                                             // 598\n                                                                                                                       // 599\n        setTarget: function(e) {                                                                                       // 600\n            var targetNode = this.findTargetNode(e.target);                                                            // 601\n            if (!targetNode) {                                                                                         // 602\n                this.setState(this.states.idle);                                                                       // 603\n                return false;                                                                                          // 604\n            }                                                                                                          // 605\n                                                                                                                       // 606\n            //check for a scrollable parent                                                                            // 607\n            var scrollContainer = targetNode.parentNode;                                                               // 608\n            while (scrollContainer){                                                                                   // 609\n              if (scrollContainer.scrollHeight > scrollContainer.clientHeight && window.getComputedStyle(scrollContainer)['overflow-y'] != 'visible') break;\n              else scrollContainer = scrollContainer.parentNode;                                                       // 611\n            }                                                                                                          // 612\n                                                                                                                       // 613\n            this.target = {                                                                                            // 614\n                originalTarget: e.target,                                                                              // 615\n                node: targetNode,                                                                                      // 616\n                scrollContainer: scrollContainer,                                                                      // 617\n                baseTransform: getTransform(targetNode),                                                               // 618\n            };                                                                                                         // 619\n            return true;                                                                                               // 620\n        },                                                                                                             // 621\n                                                                                                                       // 622\n        startAtPosition: function(pos) {                                                                               // 623\n            this.startPosition = this.previousPosition = this.latestPosition = pos;                                    // 624\n            this.setState(this.states.undecided);                                                                      // 625\n        },                                                                                                             // 626\n                                                                                                                       // 627\n        updatePosition: function(e, pos) {                                                                             // 628\n            if(this.target == null)                                                                                    // 629\n                return;                                                                                                // 630\n            this.latestPosition = pos;                                                                                 // 631\n                                                                                                                       // 632\n            var triggerOffset = 40,                                                                                    // 633\n                offset = 0;                                                                                            // 634\n                                                                                                                       // 635\n            var scrollable = this.target.scrollContainer || document.body,                                             // 636\n                containerRect = scrollable.getBoundingClientRect(),                                                    // 637\n                targetRect = this.target.node.getBoundingClientRect(),                                                 // 638\n                bottomOffset = Math.min(containerRect.bottom, window.innerHeight) - targetRect.bottom,                 // 639\n                topOffset = targetRect.top - Math.max(containerRect.top, 0);                                           // 640\n                                                                                                                       // 641\n            if (bottomOffset < triggerOffset){                                                                         // 642\n              offset = triggerOffset - bottomOffset;                                                                   // 643\n            }                                                                                                          // 644\n            else if (topOffset < triggerOffset){                                                                       // 645\n              offset = topOffset - triggerOffset;                                                                      // 646\n            }                                                                                                          // 647\n                                                                                                                       // 648\n            var prevScrollTop = scrollable.scrollTop;                                                                  // 649\n            scrollable.scrollTop += offset;                                                                            // 650\n            if (prevScrollTop != scrollable.scrollTop) this.startPosition.y += prevScrollTop-scrollable.scrollTop;     // 651\n                                                                                                                       // 652\n            if (this.state.onMove) {                                                                                   // 653\n                if (this.state.onMove.call(this) === false) {                                                          // 654\n                    e.preventDefault();                                                                                // 655\n                }                                                                                                      // 656\n            }                                                                                                          // 657\n                                                                                                                       // 658\n            // sample latestPosition 100ms for velocity                                                                // 659\n            if (this.latestPosition.time - this.previousPosition.time > 100) {                                         // 660\n                this.previousPosition = this.latestPosition;                                                           // 661\n            }                                                                                                          // 662\n        },                                                                                                             // 663\n                                                                                                                       // 664\n        onMouseMove: function(e) {                                                                                     // 665\n            this.updatePosition(e, {                                                                                   // 666\n                x: e.clientX,                                                                                          // 667\n                y: e.clientY,                                                                                          // 668\n                time: e.timeStamp,                                                                                     // 669\n            });                                                                                                        // 670\n        },                                                                                                             // 671\n                                                                                                                       // 672\n        onTouchMove: function(e) {                                                                                     // 673\n            this.updatePosition(e, {                                                                                   // 674\n                x: e.touches[0].clientX,                                                                               // 675\n                y: e.touches[0].clientY - window.scrollY,                                                              // 676\n                time: e.timeStamp,                                                                                     // 677\n            });                                                                                                        // 678\n                                                                                                                       // 679\n            // In Apple's touch model only the first move event after touchstart can prevent scrolling (and event.cancelable is broken)\n            this.canPreventScrolling = false;                                                                          // 681\n        },                                                                                                             // 682\n                                                                                                                       // 683\n        onMouseUp: function(e) {                                                                                       // 684\n            if (this.usingTouch || e.button !== 0) return;                                                             // 685\n                                                                                                                       // 686\n            if (this.state.onEnd && false === this.state.onEnd.call(this)) {                                           // 687\n                e.preventDefault();                                                                                    // 688\n            }                                                                                                          // 689\n        },                                                                                                             // 690\n                                                                                                                       // 691\n        onTouchEnd: function(e) {                                                                                      // 692\n            if (e.touches.length > 1) {                                                                                // 693\n                this.cancel();                                                                                         // 694\n            } else if (this.state.onEnd && false === this.state.onEnd.call(this)) {                                    // 695\n                e.preventDefault();                                                                                    // 696\n            }                                                                                                          // 697\n        },                                                                                                             // 698\n                                                                                                                       // 699\n        getTotalMovement: function() {                                                                                 // 700\n            return {                                                                                                   // 701\n                x:this.latestPosition.x - this.startPosition.x,                                                        // 702\n                y:this.latestPosition.y - this.startPosition.y,                                                        // 703\n            };                                                                                                         // 704\n        },                                                                                                             // 705\n                                                                                                                       // 706\n        getAbsoluteMovement: function() {                                                                              // 707\n            return {                                                                                                   // 708\n                x: Math.abs(this.latestPosition.x - this.startPosition.x),                                             // 709\n                y: Math.abs(this.latestPosition.y - this.startPosition.y),                                             // 710\n                time:this.latestPosition.time - this.startPosition.time,                                               // 711\n            };                                                                                                         // 712\n        },                                                                                                             // 713\n                                                                                                                       // 714\n        dispatch: function(targetNode, eventName, detail) {                                                            // 715\n            var event = document.createEvent('CustomEvent');                                                           // 716\n            if (event && event.initCustomEvent) {                                                                      // 717\n                event.initCustomEvent('slip:' + eventName, true, true, detail);                                        // 718\n            } else {                                                                                                   // 719\n                event = document.createEvent('Event');                                                                 // 720\n                event.initEvent('slip:' + eventName, true, true);                                                      // 721\n                event.detail = detail;                                                                                 // 722\n            }                                                                                                          // 723\n            return targetNode.dispatchEvent(event);                                                                    // 724\n        },                                                                                                             // 725\n                                                                                                                       // 726\n        getSiblings: function(target) {                                                                                // 727\n            var siblings = [];                                                                                         // 728\n            var tmp = target.node.nextSibling;                                                                         // 729\n            while(tmp) {                                                                                               // 730\n                if (tmp.nodeType == 1) siblings.push({                                                                 // 731\n                    node: tmp,                                                                                         // 732\n                    baseTransform: getTransform(tmp),                                                                  // 733\n                });                                                                                                    // 734\n                tmp = tmp.nextSibling;                                                                                 // 735\n            }                                                                                                          // 736\n            return siblings;                                                                                           // 737\n        },                                                                                                             // 738\n                                                                                                                       // 739\n        animateToZero: function(callback, target) {                                                                    // 740\n            // save, because this.target/container could change during animation                                       // 741\n            target = target || this.target;                                                                            // 742\n                                                                                                                       // 743\n           // target.node.style[transitionPrefix] = transformProperty + ' 5s ease-out';                                // 744\n            target.node.style[transformPrefix] = 'translate(0,0) ' + hwLayerMagic + target.baseTransform.value;        // 745\n            setTimeout(function(){                                                                                     // 746\n                target.node.style[transitionPrefix] = '';                                                              // 747\n                target.node.style[transformPrefix] = target.baseTransform.original;                                    // 748\n                if (callback) callback.call(this, target);                                                             // 749\n            }.bind(this), 101);                                                                                        // 750\n        },                                                                                                             // 751\n                                                                                                                       // 752\n        animateSwipe: function(callback) {                                                                             // 753\n            var target = this.target;                                                                                  // 754\n            var siblings = this.getSiblings(target);                                                                   // 755\n            var emptySpaceTransform = 'translate(0,' + this.target.height + 'px) ' + hwLayerMagic + ' ';               // 756\n                                                                                                                       // 757\n            // FIXME: animate with real velocity                                                                       // 758\n            target.node.style[transitionPrefix] = 'all 0.1s linear';                                                   // 759\n            target.node.style[transformPrefix] = ' translate(' + (this.getTotalMovement().x > 0 ? '' : '-') + '100%,0) ' + hwLayerMagic + target.baseTransform.value;\n                                                                                                                       // 761\n            setTimeout(function(){                                                                                     // 762\n                if (callback.call(this, target)) {                                                                     // 763\n                    siblings.forEach(function(o){                                                                      // 764\n                        o.node.style[transitionPrefix] = '';                                                           // 765\n                        o.node.style[transformPrefix] = emptySpaceTransform + o.baseTransform.value;                   // 766\n                    });                                                                                                // 767\n                    setTimeout(function(){                                                                             // 768\n                        siblings.forEach(function(o){                                                                  // 769\n                            o.node.style[transitionPrefix] = transformProperty + ' 0.1s ease-in-out';                  // 770\n                            o.node.style[transformPrefix] = 'translate(0,0) ' + hwLayerMagic + o.baseTransform.value;  // 771\n                        });                                                                                            // 772\n                        setTimeout(function(){                                                                         // 773\n                            siblings.forEach(function(o){                                                              // 774\n                                o.node.style[transitionPrefix] = '';                                                   // 775\n                                o.node.style[transformPrefix] = o.baseTransform.original;                              // 776\n                            });                                                                                        // 777\n                        },101);                                                                                        // 778\n                    }, 1);                                                                                             // 779\n                }                                                                                                      // 780\n            }.bind(this), 101);                                                                                        // 781\n        },                                                                                                             // 782\n    };                                                                                                                 // 783\n                                                                                                                       // 784\n    // AMD                                                                                                             // 785\n    if ('function' === typeof define && define.amd) {                                                                  // 786\n        define(function(){                                                                                             // 787\n            return Slip;                                                                                               // 788\n        });                                                                                                            // 789\n    }                                                                                                                  // 790\n    return Slip;                                                                                                       // 791\n})();                                                                                                                  // 792\n                                                                                                                       // 793\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionActionSheet/template.ionActionSheet.js                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionActionSheet\");                                                                                // 2\nTemplate[\"ionActionSheet\"] = new Template(\"Template.ionActionSheet\", (function() {                                     // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": \"action-sheet-backdrop\"                                                                                   // 6\n  }, \"\\n    \", HTML.DIV({                                                                                              // 7\n    \"class\": \"action-sheet-wrapper\"                                                                                    // 8\n  }, \"\\n      \", HTML.DIV({                                                                                            // 9\n    \"class\": \"action-sheet\"                                                                                            // 10\n  }, \"\\n        \", HTML.DIV({                                                                                          // 11\n    \"class\": \"action-sheet-group\"                                                                                      // 12\n  }, \"\\n          \", Blaze.If(function() {                                                                             // 13\n    return Spacebars.call(view.lookup(\"titleText\"));                                                                   // 14\n  }, function() {                                                                                                      // 15\n    return [ \"\\n            \", HTML.DIV({                                                                              // 16\n      \"class\": \"action-sheet-title\"                                                                                    // 17\n    }, \"\\n              \", Blaze.View(\"lookup:titleText\", function() {                                                 // 18\n      return Spacebars.mustache(view.lookup(\"titleText\"));                                                             // 19\n    }), \"\\n            \"), \"\\n          \" ];                                                                           // 20\n  }), \"\\n          \", Blaze.Each(function() {                                                                          // 21\n    return Spacebars.call(view.lookup(\"buttons\"));                                                                     // 22\n  }, function() {                                                                                                      // 23\n    return [ \"\\n            \", HTML.BUTTON({                                                                           // 24\n      \"class\": \"button\",                                                                                               // 25\n      \"data-index\": function() {                                                                                       // 26\n        return Spacebars.mustache(view.lookup(\"index\"));                                                               // 27\n      }                                                                                                                // 28\n    }, Blaze.View(\"lookup:text\", function() {                                                                          // 29\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"text\")));                                               // 30\n    })), \"\\n          \" ];                                                                                             // 31\n  }), \"\\n        \"), \"\\n        \", Blaze.If(function() {                                                               // 32\n    return Spacebars.call(view.lookup(\"destructiveText\"));                                                             // 33\n  }, function() {                                                                                                      // 34\n    return [ \"\\n          \", HTML.DIV({                                                                                // 35\n      \"class\": \"action-sheet-group\"                                                                                    // 36\n    }, \"\\n            \", HTML.BUTTON({                                                                                 // 37\n      \"class\": \"button destructive\",                                                                                   // 38\n      \"data-destructive\": \"\"                                                                                           // 39\n    }, Blaze.View(\"lookup:destructiveText\", function() {                                                               // 40\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"destructiveText\")));                                    // 41\n    })), \"\\n          \"), \"\\n        \" ];                                                                              // 42\n  }), \"\\n        \", Blaze.If(function() {                                                                              // 43\n    return Spacebars.call(view.lookup(\"cancelText\"));                                                                  // 44\n  }, function() {                                                                                                      // 45\n    return [ \"\\n          \", HTML.DIV({                                                                                // 46\n      \"class\": \"action-sheet-group\"                                                                                    // 47\n    }, \"\\n            \", HTML.BUTTON({                                                                                 // 48\n      \"class\": \"button\",                                                                                               // 49\n      \"data-cancel\": \"\"                                                                                                // 50\n    }, Blaze.View(\"lookup:cancelText\", function() {                                                                    // 51\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"cancelText\")));                                         // 52\n    })), \"\\n          \"), \"\\n        \" ];                                                                              // 53\n  }), \"\\n      \"), \"\\n    \"), \"\\n  \");                                                                                 // 54\n}));                                                                                                                   // 55\n                                                                                                                       // 56\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionActionSheet/ionActionSheet.js                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nIonActionSheet = {                                                                                                     // 1\n  transitionEndEvent: 'transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd',                              // 2\n                                                                                                                       // 3\n  show: function (options) {                                                                                           // 4\n    this.template = Template.ionActionSheet;                                                                           // 5\n                                                                                                                       // 6\n    var buttons = [];                                                                                                  // 7\n    for (var i = 0; i < options.buttons.length; i++) {                                                                 // 8\n      var button = options.buttons[i];                                                                                 // 9\n      buttons.push({                                                                                                   // 10\n        text: button.text,                                                                                             // 11\n        index: i                                                                                                       // 12\n      });                                                                                                              // 13\n    }                                                                                                                  // 14\n                                                                                                                       // 15\n    var data = {                                                                                                       // 16\n      titleText: options.titleText,                                                                                    // 17\n      destructiveText: options.destructiveText,                                                                        // 18\n      cancelText: options.cancelText,                                                                                  // 19\n      buttons: buttons                                                                                                 // 20\n    };                                                                                                                 // 21\n                                                                                                                       // 22\n    this.callbacks = {                                                                                                 // 23\n      cancel: options.cancel,                                                                                          // 24\n      destructiveButtonClicked: options.destructiveButtonClicked,                                                      // 25\n      buttonClicked: options.buttonClicked                                                                             // 26\n    };                                                                                                                 // 27\n                                                                                                                       // 28\n    this.view = Blaze.renderWithData(this.template, data, $('.ionic-body').get(0));                                    // 29\n    $('body').addClass('action-sheet-open');                                                                           // 30\n                                                                                                                       // 31\n    var $backdrop = $(this.view.firstNode());                                                                          // 32\n    $backdrop.addClass('active');                                                                                      // 33\n                                                                                                                       // 34\n    var $wrapper = $backdrop.find('.action-sheet-wrapper');                                                            // 35\n    Meteor.setTimeout(function () {                                                                                    // 36\n      $wrapper.addClass('action-sheet-up');                                                                            // 37\n    }, 20);                                                                                                            // 38\n  },                                                                                                                   // 39\n                                                                                                                       // 40\n  cancel: function () {                                                                                                // 41\n    this.close(this.callbacks.cancel);                                                                                 // 42\n  },                                                                                                                   // 43\n                                                                                                                       // 44\n  buttonClicked: function (index) {                                                                                    // 45\n    var callback = this.callbacks.buttonClicked;                                                                       // 46\n    if (callback(index) === true) {                                                                                    // 47\n      IonActionSheet.close();                                                                                          // 48\n    }                                                                                                                  // 49\n  },                                                                                                                   // 50\n                                                                                                                       // 51\n  destructiveButtonClicked: function () {                                                                              // 52\n    var callback = this.callbacks.destructiveButtonClicked;                                                            // 53\n    if (callback() === true) {                                                                                         // 54\n      IonActionSheet.close();                                                                                          // 55\n    }                                                                                                                  // 56\n  },                                                                                                                   // 57\n                                                                                                                       // 58\n  close: function (callback) {                                                                                         // 59\n    var $backdrop = $(this.view.firstNode());                                                                          // 60\n    $backdrop.removeClass('active');                                                                                   // 61\n                                                                                                                       // 62\n    var $wrapper = $backdrop.find('.action-sheet-wrapper');                                                            // 63\n    Meteor.setTimeout(function() {                                                                                     // 64\n      $wrapper.removeClass('action-sheet-up');                                                                         // 65\n    }.bind(this), 10);                                                                                                 // 66\n                                                                                                                       // 67\n    $wrapper.on(this.transitionEndEvent, function () {                                                                 // 68\n      $('body').removeClass('action-sheet-open');                                                                      // 69\n      Blaze.remove(this.view);                                                                                         // 70\n                                                                                                                       // 71\n      if (typeof(callback) === 'function') {                                                                           // 72\n        callback();                                                                                                    // 73\n      }                                                                                                                // 74\n    }.bind(this));                                                                                                     // 75\n  }                                                                                                                    // 76\n};                                                                                                                     // 77\n                                                                                                                       // 78\nTemplate.ionActionSheet.rendered = function () {                                                                       // 79\n  $(window).on('keyup.ionActionSheet', function(event) {                                                               // 80\n    if (event.which == 27) {                                                                                           // 81\n      IonActionSheet.cancel();                                                                                         // 82\n    }                                                                                                                  // 83\n  });                                                                                                                  // 84\n};                                                                                                                     // 85\n                                                                                                                       // 86\nTemplate.ionActionSheet.destroyed = function () {                                                                      // 87\n  $(window).off('keyup.ionActionSheet');                                                                               // 88\n};                                                                                                                     // 89\n                                                                                                                       // 90\nTemplate.ionActionSheet.events({                                                                                       // 91\n  // Handle clicking the backdrop                                                                                      // 92\n  'click': function (event, template) {                                                                                // 93\n    if ($(event.target).hasClass('action-sheet-backdrop')) {                                                           // 94\n      IonActionSheet.cancel();                                                                                         // 95\n    }                                                                                                                  // 96\n  },                                                                                                                   // 97\n                                                                                                                       // 98\n  'click [data-index]': function (event, template) {                                                                   // 99\n    var index = $(event.target).data('index');                                                                         // 100\n    IonActionSheet.buttonClicked(index);                                                                               // 101\n  },                                                                                                                   // 102\n                                                                                                                       // 103\n  'click [data-destructive]': function (event, template) {                                                             // 104\n    IonActionSheet.destructiveButtonClicked();                                                                         // 105\n  },                                                                                                                   // 106\n                                                                                                                       // 107\n  'click [data-cancel]': function (event, template) {                                                                  // 108\n    IonActionSheet.cancel();                                                                                           // 109\n  }                                                                                                                    // 110\n                                                                                                                       // 111\n});                                                                                                                    // 112\n                                                                                                                       // 113\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionBackdrop/template.ionBackdrop.js                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionBackdrop\");                                                                                   // 2\nTemplate[\"ionBackdrop\"] = new Template(\"Template.ionBackdrop\", (function() {                                           // 3\n  var view = this;                                                                                                     // 4\n  return HTML.Raw('<div class=\"backdrop\"></div>');                                                                     // 5\n}));                                                                                                                   // 6\n                                                                                                                       // 7\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionBackdrop/ionBackdrop.js                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nIonBackdrop = {                                                                                                        // 1\n  holds: 0,                                                                                                            // 2\n  retain: function () {                                                                                                // 3\n    this.holds++;                                                                                                      // 4\n                                                                                                                       // 5\n    if (this.holds === 1) {                                                                                            // 6\n      this.template = Template['ionBackdrop'];                                                                         // 7\n      this.view = Blaze.renderWithData(this.template, {}, $('.ionic-body').get(0));                                    // 8\n                                                                                                                       // 9\n      var $backdropEl = $(this.view.firstNode());                                                                      // 10\n      $backdropEl.addClass('visible');                                                                                 // 11\n                                                                                                                       // 12\n      Meteor.setTimeout(function () {                                                                                  // 13\n        $backdropEl.addClass('active');                                                                                // 14\n      }, 10);                                                                                                          // 15\n    }                                                                                                                  // 16\n  },                                                                                                                   // 17\n                                                                                                                       // 18\n  release: function () {                                                                                               // 19\n    this.holds--;                                                                                                      // 20\n                                                                                                                       // 21\n    if (this.holds === 0) {                                                                                            // 22\n      var $backdropEl = $(this.view.firstNode());                                                                      // 23\n      $backdropEl.removeClass('active');                                                                               // 24\n                                                                                                                       // 25\n      Meteor.setTimeout(function () {                                                                                  // 26\n        $backdropEl.removeClass('visible');                                                                            // 27\n        Blaze.remove(this.view);                                                                                       // 28\n      }.bind(this), 400);                                                                                              // 29\n    }                                                                                                                  // 30\n  }                                                                                                                    // 31\n};                                                                                                                     // 32\n                                                                                                                       // 33\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionBody/template.ionBody.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionBody\");                                                                                       // 2\nTemplate[\"ionBody\"] = new Template(\"Template.ionBody\", (function() {                                                   // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": function() {                                                                                              // 6\n      return [ \"ionic-body \", Spacebars.mustache(view.lookup(\"platformClasses\")) ];                                    // 7\n    }                                                                                                                  // 8\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {                                                          // 9\n    return Spacebars.include(function() {                                                                              // 10\n      return Spacebars.call(view.templateContentBlock);                                                                // 11\n    });                                                                                                                // 12\n  }), \"\\n  \");                                                                                                         // 13\n}));                                                                                                                   // 14\n                                                                                                                       // 15\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionBody/ionBody.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nPlatform = {                                                                                                           // 1\n  isIOS: function () {                                                                                                 // 2\n    return (!!navigator.userAgent.match(/iPad/i) || !!navigator.userAgent.match(/iPhone/i) || !!navigator.userAgent.match(/iPod/i))\n           || Session.get('platformOverride') === 'iOS';                                                               // 4\n  },                                                                                                                   // 5\n                                                                                                                       // 6\n  isAndroid: function () {                                                                                             // 7\n    return navigator.userAgent.indexOf('Android') > 0                                                                  // 8\n           || Session.get('platformOverride') === 'Android';                                                           // 9\n  }                                                                                                                    // 10\n};                                                                                                                     // 11\n                                                                                                                       // 12\nTemplate.registerHelper('isIOS', function () {                                                                         // 13\n  return Platform.isIOS();                                                                                             // 14\n});                                                                                                                    // 15\n                                                                                                                       // 16\nTemplate.registerHelper('isAndroid', function () {                                                                     // 17\n  return Platform.isAndroid();                                                                                         // 18\n});                                                                                                                    // 19\n                                                                                                                       // 20\nTemplate.ionBody.helpers({                                                                                             // 21\n  platformClasses: function () {                                                                                       // 22\n    var classes = ['grade-a'];                                                                                         // 23\n                                                                                                                       // 24\n    if (Meteor.isCordova) {                                                                                            // 25\n      classes.push('platform-cordova');                                                                                // 26\n    }                                                                                                                  // 27\n    if (Meteor.isClient) {                                                                                             // 28\n      classes.push('platform-web');                                                                                    // 29\n    }                                                                                                                  // 30\n    if ((Meteor.isCordova && Platform.isIOS()) || Session.get('platformOverride') === 'iOS') {                         // 31\n      classes.push('platform-ios');                                                                                    // 32\n    }                                                                                                                  // 33\n    if ((Meteor.isCordova && Platform.isAndroid()) || Session.get('platformOverride') === 'Android') {                 // 34\n      classes.push('platform-android');                                                                                // 35\n    }                                                                                                                  // 36\n                                                                                                                       // 37\n    return classes.join(' ');                                                                                          // 38\n  }                                                                                                                    // 39\n});                                                                                                                    // 40\n                                                                                                                       // 41\nTemplate.ionBody.rendered = function () {                                                                              // 42\n  window.addEventListener('statusTap', function() {                                                                    // 43\n    $('.content.overflow-scroll').animate({                                                                            // 44\n      scrollTop: 0                                                                                                     // 45\n    }, 500);                                                                                                           // 46\n  });                                                                                                                  // 47\n};                                                                                                                     // 48\n                                                                                                                       // 49\nTemplate.ionBody.events({                                                                                              // 50\n  'click [data-ion-modal]': function (event, template) {                                                               // 51\n    var templateName = $(event.currentTarget).data('ion-modal');                                                       // 52\n    IonModal.open(templateName, $(event.currentTarget).data());                                                        // 53\n  },                                                                                                                   // 54\n                                                                                                                       // 55\n  'click [data-ion-popover]': function (event, template) {                                                             // 56\n    var templateName = $(event.currentTarget).data('ion-popover');                                                     // 57\n    IonPopover.show(templateName, $(event.currentTarget).data(), event.currentTarget);                                 // 58\n  },                                                                                                                   // 59\n                                                                                                                       // 60\n  'click [data-nav-direction]': function (event, template) {                                                           // 61\n    $('[data-nav-container]').addClass('nav-view-direction-' + $(event.target).data('nav-direction'));                 // 62\n    $('[data-navbar-container]').addClass('nav-bar-direction-' + $(event.target).data('nav-direction'));               // 63\n  },                                                                                                                   // 64\n                                                                                                                       // 65\n  'click [data-ion-menu-toggle]': function (event, template) {                                                         // 66\n    if (!IonSideMenu.snapper) {                                                                                        // 67\n      return;                                                                                                          // 68\n    }                                                                                                                  // 69\n                                                                                                                       // 70\n    var direction;                                                                                                     // 71\n    var $el = $(event.target);                                                                                         // 72\n                                                                                                                       // 73\n    if ($el.data('ion-menu-toggle') !== '') {                                                                          // 74\n      direction = $el.data('ion-menu-toggle');                                                                         // 75\n    } else {                                                                                                           // 76\n      direction = 'left';                                                                                              // 77\n    }                                                                                                                  // 78\n                                                                                                                       // 79\n    if(IonSideMenu.snapper.state().state === direction){                                                               // 80\n      IonSideMenu.snapper.close();                                                                                     // 81\n    } else {                                                                                                           // 82\n      IonSideMenu.snapper.open(direction);                                                                             // 83\n    }                                                                                                                  // 84\n  },                                                                                                                   // 85\n                                                                                                                       // 86\n  'click [data-ion-menu-close]': function (event, template) {                                                          // 87\n    if (!IonSideMenu.snapper) {                                                                                        // 88\n      return;                                                                                                          // 89\n    }                                                                                                                  // 90\n    IonSideMenu.snapper.close();                                                                                       // 91\n  },                                                                                                                   // 92\n  'click [data-ion-list-toggle]': function (event, template) {                                                         // 93\n    var direction;                                                                                                     // 94\n    var $el = $(event.target);                                                                                         // 95\n    if ($el.data('ion-list-toggle') !== '') {                                                                          // 96\n      direction = $el.data('ion-list-toggle');                                                                         // 97\n    } else {                                                                                                           // 98\n      direction = 'left';                                                                                              // 99\n    }                                                                                                                  // 100\n                                                                                                                       // 101\n    direction = direction.trim(); //just in case..                                                                     // 102\n                                                                                                                       // 103\n    switch(direction){                                                                                                 // 104\n      case \"left\":                                                                                                     // 105\n      toggleListIcons(\"left\");                                                                                         // 106\n      break;                                                                                                           // 107\n      case \"right\":                                                                                                    // 108\n      toggleListIcons(\"right\");                                                                                        // 109\n      break;                                                                                                           // 110\n      case \"both\":                                                                                                     // 111\n      toggleListIcons(\"left\");                                                                                         // 112\n      toggleListIcons(\"right\");                                                                                        // 113\n    }                                                                                                                  // 114\n                                                                                                                       // 115\n    function toggleListIcons(direction){                                                                               // 116\n     template.$('.list').toggleClass('list-' + direction + '-editing');                                                // 117\n     if (template.$('.item-' + direction + '-edit').hasClass('visible')){                                              // 118\n      template.$('.item-' + direction + '-edit').removeClass('active').delay(125).queue(function(next){                // 119\n        $(this).removeClass('visible');                                                                                // 120\n        next();                                                                                                        // 121\n      });                                                                                                              // 122\n    } else {                                                                                                           // 123\n      template.$('.item-' + direction + '-edit').addClass('visible').delay(10).queue(function(next){                   // 124\n        $(this).addClass('active');                                                                                    // 125\n        next();                                                                                                        // 126\n      });                                                                                                              // 127\n    }                                                                                                                  // 128\n                                                                                                                       // 129\n  }                                                                                                                    // 130\n                                                                                                                       // 131\n},                                                                                                                     // 132\n                                                                                                                       // 133\n'mousedown .button, touchstart .button': function (event, template) {                                                  // 134\n  $(event.target).addClass('active');                                                                                  // 135\n},                                                                                                                     // 136\n                                                                                                                       // 137\n'mouseup .button, touchend .button': function (event, template) {                                                      // 138\n  $(event.target).removeClass('active');                                                                               // 139\n}                                                                                                                      // 140\n});                                                                                                                    // 141\n                                                                                                                       // 142\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionContent/template.ionContent.js                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionContent\");                                                                                    // 2\nTemplate[\"ionContent\"] = new Template(\"Template.ionContent\", (function() {                                             // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": \"scroll-content ionic-scroll\"                                                                             // 6\n  }, \"\\n    \", HTML.DIV({                                                                                              // 7\n    \"class\": function() {                                                                                              // 8\n      return Spacebars.mustache(view.lookup(\"classes\"));                                                               // 9\n    }                                                                                                                  // 10\n  }, \"\\n      \", Blaze._InOuterTemplateScope(view, function() {                                                        // 11\n    return Spacebars.include(function() {                                                                              // 12\n      return Spacebars.call(view.templateContentBlock);                                                                // 13\n    });                                                                                                                // 14\n  }), \"\\n    \"), \"\\n  \");                                                                                              // 15\n}));                                                                                                                   // 16\n                                                                                                                       // 17\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionContent/ionContent.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.ionContent.helpers({                                                                                          // 1\n  classes: function () {                                                                                               // 2\n    var classes = ['content'];                                                                                         // 3\n                                                                                                                       // 4\n    if (this.class) {                                                                                                  // 5\n      classes.push(this.class);                                                                                        // 6\n    }                                                                                                                  // 7\n                                                                                                                       // 8\n    if (this.scroll !== false) {                                                                                       // 9\n      classes.push('overflow-scroll');                                                                                 // 10\n    }                                                                                                                  // 11\n                                                                                                                       // 12\n    if (Session.get('hasHeader')) {                                                                                    // 13\n      classes.push('has-header');                                                                                      // 14\n    }                                                                                                                  // 15\n                                                                                                                       // 16\n    if (Session.get('hasSubheader')) {                                                                                 // 17\n      classes.push('has-subheader');                                                                                   // 18\n    }                                                                                                                  // 19\n                                                                                                                       // 20\n    if (Session.get('hasTabs')) {                                                                                      // 21\n      classes.push('has-tabs');                                                                                        // 22\n    }                                                                                                                  // 23\n                                                                                                                       // 24\n    if (Session.get('hasTabsTop')) {                                                                                   // 25\n      classes.push('has-tabs-top');                                                                                    // 26\n    }                                                                                                                  // 27\n                                                                                                                       // 28\n    if (Session.get('hasFooter')) {                                                                                    // 29\n      classes.push('has-footer');                                                                                      // 30\n    }                                                                                                                  // 31\n                                                                                                                       // 32\n    if (Session.get('hasSubfooter')) {                                                                                 // 33\n      classes.push('has-subfooter');                                                                                   // 34\n    }                                                                                                                  // 35\n                                                                                                                       // 36\n    return classes.join(' ');                                                                                          // 37\n  }                                                                                                                    // 38\n});                                                                                                                    // 39\n                                                                                                                       // 40\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionFooterBar/template.ionFooterBar.js                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionFooterBar\");                                                                                  // 2\nTemplate[\"ionFooterBar\"] = new Template(\"Template.ionFooterBar\", (function() {                                         // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": function() {                                                                                              // 6\n      return Spacebars.mustache(view.lookup(\"classes\"));                                                               // 7\n    }                                                                                                                  // 8\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {                                                          // 9\n    return Spacebars.include(function() {                                                                              // 10\n      return Spacebars.call(view.templateContentBlock);                                                                // 11\n    });                                                                                                                // 12\n  }), \"\\n  \");                                                                                                         // 13\n}));                                                                                                                   // 14\n                                                                                                                       // 15\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionFooterBar/ionFooterBar.js                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.ionFooterBar.rendered = function () {                                                                         // 1\n  Session.set('hasFooter', true);                                                                                      // 2\n};                                                                                                                     // 3\n                                                                                                                       // 4\nTemplate.ionFooterBar.destroyed = function () {                                                                        // 5\n  Session.set('hasFooter', false);                                                                                     // 6\n};                                                                                                                     // 7\n                                                                                                                       // 8\nTemplate.ionFooterBar.helpers({                                                                                        // 9\n  classes: function () {                                                                                               // 10\n    var classes = ['bar', 'bar-footer'];                                                                               // 11\n                                                                                                                       // 12\n    if (this.class) {                                                                                                  // 13\n      classes.push(this.class);                                                                                        // 14\n    } else {                                                                                                           // 15\n      classes.push('bar-stable');                                                                                      // 16\n    }                                                                                                                  // 17\n                                                                                                                       // 18\n    if (Session.get('hasTabs')) {                                                                                      // 19\n      classes.push('has-tabs');                                                                                        // 20\n    }                                                                                                                  // 21\n                                                                                                                       // 22\n    return classes.join(' ');                                                                                          // 23\n  }                                                                                                                    // 24\n});                                                                                                                    // 25\n                                                                                                                       // 26\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionHeaderBar/template.ionHeaderBar.js                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionHeaderBar\");                                                                                  // 2\nTemplate[\"ionHeaderBar\"] = new Template(\"Template.ionHeaderBar\", (function() {                                         // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": function() {                                                                                              // 6\n      return Spacebars.mustache(view.lookup(\"classes\"));                                                               // 7\n    }                                                                                                                  // 8\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {                                                          // 9\n    return Spacebars.include(function() {                                                                              // 10\n      return Spacebars.call(view.templateContentBlock);                                                                // 11\n    });                                                                                                                // 12\n  }), \"\\n  \");                                                                                                         // 13\n}));                                                                                                                   // 14\n                                                                                                                       // 15\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionHeaderBar/ionHeaderBar.js                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nIonHeaderBar = {                                                                                                       // 1\n  alignTitle: function () {                                                                                            // 2\n    var align = this.data.alignTitle || 'center';                                                                      // 3\n    var $title = this.$('.title');                                                                                     // 4\n                                                                                                                       // 5\n    if (Platform.isAndroid() && !this.alignTitle) {                                                                    // 6\n      $title.addClass('title-left');                                                                                   // 7\n      return;                                                                                                          // 8\n    }                                                                                                                  // 9\n                                                                                                                       // 10\n    if (align === 'center') {                                                                                          // 11\n      $title.addClass('title-center');                                                                                 // 12\n    } else if (align === 'left') {                                                                                     // 13\n      $title.addClass('title-left');                                                                                   // 14\n    } else if (align === 'right') {                                                                                    // 15\n      $title.addClass('title-right');                                                                                  // 16\n    }                                                                                                                  // 17\n  },                                                                                                                   // 18\n                                                                                                                       // 19\n  positionTitle: function () {                                                                                         // 20\n    var $title = this.$('.title');                                                                                     // 21\n    var $leftButton = $('.button.pull-left');                                                                          // 22\n    var $rightButton = $('.button.pull-right');                                                                        // 23\n                                                                                                                       // 24\n    // Find out which button is wider,                                                                                 // 25\n    // use that to offset the title on both sides                                                                      // 26\n    var leftButtonWidth = 0;                                                                                           // 27\n    var rightButtonWidth = 0;                                                                                          // 28\n    if ($leftButton.length) {                                                                                          // 29\n      $leftButton.each(function(index, element){                                                                       // 30\n        leftButtonWidth += $(element).outerWidth();                                                                    // 31\n      });                                                                                                              // 32\n    }                                                                                                                  // 33\n    if ($rightButton.length) {                                                                                         // 34\n      $rightButton.each(function(index, element){                                                                      // 35\n        rightButtonWidth += $(element).outerWidth();                                                                   // 36\n      });                                                                                                              // 37\n    }                                                                                                                  // 38\n                                                                                                                       // 39\n    // If we're on Android, we only care about the left button                                                         // 40\n    var margin;                                                                                                        // 41\n    if (Platform.isAndroid()) {                                                                                        // 42\n      margin = leftButtonWidth;                                                                                        // 43\n    } else {                                                                                                           // 44\n      margin = Math.max(leftButtonWidth, rightButtonWidth);                                                            // 45\n    }                                                                                                                  // 46\n    $title.css('left', margin);                                                                                        // 47\n    $title.css('right', margin);                                                                                       // 48\n  }                                                                                                                    // 49\n};                                                                                                                     // 50\n                                                                                                                       // 51\nTemplate.ionHeaderBar.created = function () {                                                                          // 52\n  this.data = this.data || {};                                                                                         // 53\n};                                                                                                                     // 54\n                                                                                                                       // 55\nTemplate.ionHeaderBar.rendered = function () {                                                                         // 56\n  Session.set('hasHeader', true);                                                                                      // 57\n  IonHeaderBar.alignTitle.call(this);                                                                                  // 58\n  IonHeaderBar.positionTitle.call(this);                                                                               // 59\n};                                                                                                                     // 60\n                                                                                                                       // 61\nTemplate.ionHeaderBar.destroyed = function () {                                                                        // 62\n  Session.set('hasHeader', false);                                                                                     // 63\n};                                                                                                                     // 64\n                                                                                                                       // 65\nTemplate.ionHeaderBar.helpers({                                                                                        // 66\n  classes: function () {                                                                                               // 67\n    var classes = ['bar', 'bar-header'];                                                                               // 68\n                                                                                                                       // 69\n    if (this.class) {                                                                                                  // 70\n      classes.push(this.class);                                                                                        // 71\n    } else {                                                                                                           // 72\n      classes.push('bar-stable');                                                                                      // 73\n    }                                                                                                                  // 74\n                                                                                                                       // 75\n    return classes.join(' ');                                                                                          // 76\n  }                                                                                                                    // 77\n});                                                                                                                    // 78\n                                                                                                                       // 79\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionIcon/template.ionIcon.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionIcon\");                                                                                       // 2\nTemplate[\"ionIcon\"] = new Template(\"Template.ionIcon\", (function() {                                                   // 3\n  var view = this;                                                                                                     // 4\n  return HTML.I({                                                                                                      // 5\n    \"class\": function() {                                                                                              // 6\n      return Spacebars.mustache(view.lookup(\"classes\"));                                                               // 7\n    }                                                                                                                  // 8\n  });                                                                                                                  // 9\n}));                                                                                                                   // 10\n                                                                                                                       // 11\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionIcon/ionIcon.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.ionIcon.helpers({                                                                                             // 1\n  classes: function () {                                                                                               // 2\n    var classes = ['icon'];                                                                                            // 3\n    classes.push('ion-' + this.icon);                                                                                  // 4\n                                                                                                                       // 5\n    if (this.class) {                                                                                                  // 6\n      classes.push(this.class);                                                                                        // 7\n    }                                                                                                                  // 8\n                                                                                                                       // 9\n    return classes.join(' ');                                                                                          // 10\n  }                                                                                                                    // 11\n});                                                                                                                    // 12\n                                                                                                                       // 13\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionItem/template.ionItem.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionItem\");                                                                                       // 2\nTemplate[\"ionItem\"] = new Template(\"Template.ionItem\", (function() {                                                   // 3\n  var view = this;                                                                                                     // 4\n  return Blaze.If(function() {                                                                                         // 5\n    return Spacebars.call(view.lookup(\"isAnchor\"));                                                                    // 6\n  }, function() {                                                                                                      // 7\n    return [ \"\\n    \", HTML.A({                                                                                        // 8\n      \"class\": function() {                                                                                            // 9\n        return Spacebars.mustache(view.lookup(\"itemClasses\"));                                                         // 10\n      },                                                                                                               // 11\n      href: function() {                                                                                               // 12\n        return Spacebars.mustache(view.lookup(\"url\"));                                                                 // 13\n      },                                                                                                               // 14\n      id: function() {                                                                                                 // 15\n        return Spacebars.mustache(view.lookup(\"idAttribute\"));                                                         // 16\n      },                                                                                                               // 17\n      target: function() {                                                                                             // 18\n        return Spacebars.mustache(view.lookup(\"target\"));                                                              // 19\n      }                                                                                                                // 20\n    }, \"\\n      \", Blaze._InOuterTemplateScope(view, function() {                                                      // 21\n      return Spacebars.include(function() {                                                                            // 22\n        return Spacebars.call(view.templateContentBlock);                                                              // 23\n      });                                                                                                              // 24\n    }), \"\\n    \"), \"\\n  \" ];                                                                                           // 25\n  }, function() {                                                                                                      // 26\n    return [ \"\\n    \", HTML.DIV({                                                                                      // 27\n      \"class\": function() {                                                                                            // 28\n        return Spacebars.mustache(view.lookup(\"itemClasses\"));                                                         // 29\n      },                                                                                                               // 30\n      id: function() {                                                                                                 // 31\n        return Spacebars.mustache(view.lookup(\"idAttribute\"));                                                         // 32\n      }                                                                                                                // 33\n    }, \"\\n      \", Blaze._InOuterTemplateScope(view, function() {                                                      // 34\n      return Spacebars.include(function() {                                                                            // 35\n        return Spacebars.call(view.templateContentBlock);                                                              // 36\n      });                                                                                                              // 37\n    }), \"\\n    \"), \"\\n  \" ];                                                                                           // 38\n  });                                                                                                                  // 39\n}));                                                                                                                   // 40\n                                                                                                                       // 41\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionItem/ionItem.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.ionItem.helpers({                                                                                             // 1\n  idAttribute: function () {                                                                                           // 2\n    if (this.id) {                                                                                                     // 3\n      return this.id;                                                                                                  // 4\n    }                                                                                                                  // 5\n  },                                                                                                                   // 6\n  itemClasses: function () {                                                                                           // 7\n    var classes = ['item'];                                                                                            // 8\n                                                                                                                       // 9\n    if (this.class) {                                                                                                  // 10\n      var customClasses = this.class.split(' ');                                                                       // 11\n      _(customClasses).each(function (customClass) {                                                                   // 12\n        classes.push(customClass);                                                                                     // 13\n      });                                                                                                              // 14\n    }                                                                                                                  // 15\n                                                                                                                       // 16\n    if (this.avatar) {                                                                                                 // 17\n      classes.push('item-avatar' + (this.avatar === 'right' ? '-right' : ''));                                         // 18\n    }                                                                                                                  // 19\n                                                                                                                       // 20\n    if (this.iconLeft) {                                                                                               // 21\n      classes.push('item-icon-left');                                                                                  // 22\n    }                                                                                                                  // 23\n                                                                                                                       // 24\n    if (this.iconRight) {                                                                                              // 25\n      classes.push('item-icon-right');                                                                                 // 26\n    }                                                                                                                  // 27\n                                                                                                                       // 28\n    if (this.buttonLeft) {                                                                                             // 29\n      classes.push('item-button-left');                                                                                // 30\n    }                                                                                                                  // 31\n                                                                                                                       // 32\n    if(Session.get('ionSortable')){                                                                                    // 33\n      classes.push('item-complex', 'item-left-editable');                                                              // 34\n    }                                                                                                                  // 35\n                                                                                                                       // 36\n    if (this.buttonRight) {                                                                                            // 37\n      classes.push('item-button-right');                                                                               // 38\n    }                                                                                                                  // 39\n                                                                                                                       // 40\n    if (this.textWrap) {                                                                                               // 41\n      classes.push('item-text-wrap');                                                                                  // 42\n    }                                                                                                                  // 43\n                                                                                                                       // 44\n    return classes.join(' ');                                                                                          // 45\n  },                                                                                                                   // 46\n                                                                                                                       // 47\n  isAnchor: function () {                                                                                              // 48\n    return _.some([this.href,this.path,this.url,this.route],function(path){return path != undefined});                 // 49\n  },                                                                                                                   // 50\n                                                                                                                       // 51\n  target: function () {                                                                                                // 52\n    return this.target;                                                                                                // 53\n  },                                                                                                                   // 54\n                                                                                                                       // 55\n  url: function () {                                                                                                   // 56\n    if (this.href) {                                                                                                   // 57\n      return this.href;                                                                                                // 58\n    }                                                                                                                  // 59\n                                                                                                                       // 60\n    if ( this.path || this.url || this.route ) {                                                                       // 61\n                                                                                                                       // 62\n      var path = _.find([this.path,this.url,this.route],function(path){return path !=undefined});                      // 63\n                                                                                                                       // 64\n      if ( this.query || this.hash || this.data ){                                                                     // 65\n                                                                                                                       // 66\n        var hash = {};                                                                                                 // 67\n        hash.route = path;                                                                                             // 68\n        hash.query = this.query;                                                                                       // 69\n        hash.hash = this.hash;                                                                                         // 70\n        hash.data = this.data;                                                                                         // 71\n        var options = new Spacebars.kw(hash);                                                                          // 72\n                                                                                                                       // 73\n        // Devs may pass 'route=x' instead of 'path=' or 'url='                                                        // 74\n        // Should doing that throw an error? Not sure but we decided to                                                // 75\n        // parse it as if the dev passed it as 'path='                                                                 // 76\n        if (this.url){                                                                                                 // 77\n          return Blaze._globalHelpers.urlFor(options)                                                                  // 78\n        } else if( this.path || this.route ) {                                                                         // 79\n          return Blaze._globalHelpers.pathFor(options)                                                                 // 80\n        }                                                                                                              // 81\n                                                                                                                       // 82\n      } else {                                                                                                         // 83\n        return Router.routes[path].path(Template.parentData(1));                                                       // 84\n      }                                                                                                                // 85\n    }                                                                                                                  // 86\n  }                                                                                                                    // 87\n});                                                                                                                    // 88\n                                                                                                                       // 89\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionKeyboard/ionKeyboard.js                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nMeteor.startup(function () {                                                                                           // 1\n  if (Meteor.isCordova) {                                                                                              // 2\n    IonKeyboard.disableScroll();                                                                                       // 3\n  }                                                                                                                    // 4\n});                                                                                                                    // 5\n                                                                                                                       // 6\nIonKeyboard = {                                                                                                        // 7\n  close: function () {                                                                                                 // 8\n    if (Meteor.isCordova) {                                                                                            // 9\n      cordova.plugins.Keyboard.close();                                                                                // 10\n    }                                                                                                                  // 11\n  },                                                                                                                   // 12\n                                                                                                                       // 13\n  show: function () {                                                                                                  // 14\n    if (Meteor.isCordova) {                                                                                            // 15\n      cordova.plugins.Keyboard.show();                                                                                 // 16\n    }                                                                                                                  // 17\n  },                                                                                                                   // 18\n                                                                                                                       // 19\n  hideKeyboardAccessoryBar: function () {                                                                              // 20\n    if (Meteor.isCordova) {                                                                                            // 21\n      cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);                                                         // 22\n    }                                                                                                                  // 23\n  },                                                                                                                   // 24\n                                                                                                                       // 25\n  showKeyboardAccessoryBar: function () {                                                                              // 26\n    if (Meteor.isCordova) {                                                                                            // 27\n      cordova.plugins.Keyboard.hideKeyboardAccessoryBar(false);                                                        // 28\n    }                                                                                                                  // 29\n  },                                                                                                                   // 30\n                                                                                                                       // 31\n  disableScroll: function () {                                                                                         // 32\n    if (Meteor.isCordova) {                                                                                            // 33\n      cordova.plugins.Keyboard.disableScroll(true);                                                                    // 34\n    }                                                                                                                  // 35\n  },                                                                                                                   // 36\n                                                                                                                       // 37\n  enableScroll: function () {                                                                                          // 38\n    if (Meteor.isCordova) {                                                                                            // 39\n      cordova.plugins.Keyboard.disableScroll(false);                                                                   // 40\n    }                                                                                                                  // 41\n  }                                                                                                                    // 42\n};                                                                                                                     // 43\n                                                                                                                       // 44\nwindow.addEventListener('native.keyboardshow', function (event) {                                                      // 45\n                                                                                                                       // 46\n  // TODO: Android is having problems                                                                                  // 47\n  if (Platform.isAndroid()) {                                                                                          // 48\n    return;                                                                                                            // 49\n  }                                                                                                                    // 50\n                                                                                                                       // 51\n  $('body').addClass('keyboard-open');                                                                                 // 52\n  var keyboardHeight = event.keyboardHeight;                                                                           // 53\n                                                                                                                       // 54\n  // Attach any elements that want to be attached                                                                      // 55\n  $('[data-keyboard-attach]').each(function (index, el) {                                                              // 56\n    $(el).data('ionkeyboard.bottom', $(el).css('bottom'));                                                             // 57\n    $(el).css({bottom: keyboardHeight});                                                                               // 58\n  });                                                                                                                  // 59\n                                                                                                                       // 60\n  // Move the bottom of the content area(s) above the top of the keyboard                                              // 61\n  $('.content.overflow-scroll').each(function (index, el) {                                                            // 62\n    $(el).data('ionkeyboard.bottom', $(el).css('bottom'));                                                             // 63\n    $(el).css({bottom: keyboardHeight});                                                                               // 64\n  });                                                                                                                  // 65\n                                                                                                                       // 66\n  // Scroll to the focused element                                                                                     // 67\n  scrollToFocusedElement(null, keyboardHeight);                                                                        // 68\n                                                                                                                       // 69\n});                                                                                                                    // 70\n                                                                                                                       // 71\nwindow.addEventListener('native.keyboardhide', function (event) {                                                      // 72\n                                                                                                                       // 73\n  // TODO: Android is having problems                                                                                  // 74\n  if (Platform.isAndroid()) {                                                                                          // 75\n    return;                                                                                                            // 76\n  }                                                                                                                    // 77\n                                                                                                                       // 78\n  // $('input, textarea').blur();                                                                                      // 79\n  $('body').removeClass('keyboard-open');                                                                              // 80\n                                                                                                                       // 81\n  // Detach any elements that were attached                                                                            // 82\n  $('[data-keyboard-attach]').each(function (index, el) {                                                              // 83\n    $(el).css({bottom: $(el).data('ionkeyboard.bottom')});                                                             // 84\n  });                                                                                                                  // 85\n                                                                                                                       // 86\n  // Reset the content area(s)                                                                                         // 87\n  $('.content.overflow-scroll').each(function (index, el) {                                                            // 88\n    $(el).css({bottom: $(el).data('ionkeyboard.bottom')});                                                             // 89\n  });                                                                                                                  // 90\n                                                                                                                       // 91\n});                                                                                                                    // 92\n                                                                                                                       // 93\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionKeyboard/ionInputFocus.js                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nMeteor.startup(function() {                                                                                            // 1\n  if (Meteor.isCordova) {                                                                                              // 2\n                                                                                                                       // 3\n    var getScrollContainer = function($element) {                                                                      // 4\n      return $($element.parents('.content.overflow-scroll').get(0));                                                   // 5\n    }                                                                                                                  // 6\n                                                                                                                       // 7\n    var focusPadding = 20;                                                                                             // 8\n    var isBehindKeyboard = function($focused, keyboardHeight) {                                                        // 9\n      var keyboardTop = $(window).innerHeight() - keyboardHeight;                                                      // 10\n      var focusedBottom = $focused.offset().top + $focused.innerHeight();                                              // 11\n      var focusedIsBehindKeyboard = focusedBottom > keyboardTop - focusPadding;                                        // 12\n      return focusedIsBehindKeyboard;                                                                                  // 13\n    }                                                                                                                  // 14\n                                                                                                                       // 15\n    var getScrollToPosition = function($focused, $container, keyboardHeight) {                                         // 16\n                                                                                                                       // 17\n      var scrollTo = $container.scrollTop() + $focused.offset().top - $container.offset().top - focusPadding;          // 18\n      return scrollTo;                                                                                                 // 19\n                                                                                                                       // 20\n    }                                                                                                                  // 21\n                                                                                                                       // 22\n    // Scroll to make input on top of the page                                                                         // 23\n    // #TODO Correct behavior should be: if the input is behind the keyboard, scroll to make it visible on top of the keyboard\n    scrollToFocusedElement = function($focused, keyboardHeight) {                                                      // 25\n      $focused = $focused || $(':focus');                                                                              // 26\n      var $container = getScrollContainer($focused);                                                                   // 27\n      if (!$focused.length || !$container.length) return;                                                              // 28\n      var focusedIsBehindKeyboard = isBehindKeyboard($focused, keyboardHeight);                                        // 29\n      if (!focusedIsBehindKeyboard) return;                                                                            // 30\n      var scrollTo = getScrollToPosition($focused, $container, keyboardHeight);                                        // 31\n      setTimeout(function() {                                                                                          // 32\n        $container.animate({ scrollTop: scrollTo }, {                                                                  // 33\n          duration: 400,                                                                                               // 34\n          complete: function() {                                                                                       // 35\n            // Fix floating input cursor bug (https://github.com/twbs/bootstrap/issues/14708, https://github.com/cubiq/iscroll/issues/178)\n            var display = $focused.css('display');                                                                     // 37\n            $focused.css({ display: 'none' }).css({ display: display });                                               // 38\n          }                                                                                                            // 39\n        });                                                                                                            // 40\n      }, 0);                                                                                                           // 41\n    }                                                                                                                  // 42\n                                                                                                                       // 43\n    var $scrollContainer, scrollPosStart, scrollPosEnd, scrollDistance, scrollHappened, scrollThreshold = 10;          // 44\n                                                                                                                       // 45\n    // Trigger focus on input through touchend for long taps                                                           // 46\n    $(document).on('touchstart', function(event) {                                                                     // 47\n      $scrollContainer = getScrollContainer($(event.target));                                                          // 48\n      scrollPosStart = $scrollContainer.scrollTop();                                                                   // 49\n    });                                                                                                                // 50\n                                                                                                                       // 51\n    $(document).on('touchend', function(event) {                                                                       // 52\n      $scrollContainer = getScrollContainer($(event.target));                                                          // 53\n      scrollPosEnd = $scrollContainer.scrollTop();                                                                     // 54\n      scrollDistance = Math.abs(scrollPosStart - scrollPosEnd);                                                        // 55\n      scrollHappened = scrollDistance > scrollThreshold;                                                               // 56\n      var $target = $(event.target);                                                                                   // 57\n      var isInput = _.contains(['INPUT', 'TEXTAREA'], event.target.tagName);                                           // 58\n      var isFocused = $target.is(':focus');                                                                            // 59\n      if (isInput && !isFocused && !scrollHappened) $target.focus();                                                   // 60\n    });                                                                                                                // 61\n                                                                                                                       // 62\n  }                                                                                                                    // 63\n});                                                                                                                    // 64\n                                                                                                                       // 65\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionList/template.ionList.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionList\");                                                                                       // 2\nTemplate[\"ionList\"] = new Template(\"Template.ionList\", (function() {                                                   // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": function() {                                                                                              // 6\n      return Spacebars.mustache(view.lookup(\"classes\"));                                                               // 7\n    },                                                                                                                 // 8\n    \"data-snap-ignore\": \"true\"                                                                                         // 9\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {                                                          // 10\n    return Spacebars.include(function() {                                                                              // 11\n      return Spacebars.call(view.templateContentBlock);                                                                // 12\n    });                                                                                                                // 13\n  }), \"\\n  \");                                                                                                         // 14\n}));                                                                                                                   // 15\n                                                                                                                       // 16\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionList/ionList.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.ionList.helpers({                                                                                             // 1\n  classes: function () {                                                                                               // 2\n    var classes = ['list'];                                                                                            // 3\n                                                                                                                       // 4\n    if (this.class) {                                                                                                  // 5\n      var customClasses = this.class.split(' ');                                                                       // 6\n      _(customClasses).each(function (customClass) {                                                                   // 7\n        classes.push(customClass);                                                                                     // 8\n      });                                                                                                              // 9\n    }                                                                                                                  // 10\n                                                                                                                       // 11\n    return classes.join(' ');                                                                                          // 12\n  }                                                                                                                    // 13\n});                                                                                                                    // 14\n                                                                                                                       // 15\n                                                                                                                       // 16\nTemplate.ionList.rendered = function() {                                                                               // 17\n                                                                                                                       // 18\n if (this.data && this.data.ionSortable){                                                                              // 19\n  Session.set(\"ionSortable\", true );                                                                                   // 20\n  var list = this.$('.list')[0];                                                                                       // 21\n  new Slip(list);                                                                                                      // 22\n}                                                                                                                      // 23\n                                                                                                                       // 24\n};                                                                                                                     // 25\n                                                                                                                       // 26\n                                                                                                                       // 27\nTemplate.ionList.events({                                                                                              // 28\n  'click .item-delete' : function(e, template){                                                                        // 29\n    e.preventDefault();                                                                                                // 30\n                                                                                                                       // 31\n    var target = $(e.target).closest('.item').get(0);                                                                  // 32\n    var targetData = Blaze.getData(target.getElementsByClassName('item-content')[0])._id || undefined;                 // 33\n                                                                                                                       // 34\n    template.data.ionSortable.find({}).forEach(function(item, i) {                                                     // 35\n      if (item._id === targetData) {                                                                                   // 36\n        template.data.ionSortable._collection.remove({                                                                 // 37\n          _id: item._id                                                                                                // 38\n        }, function(error, result) { });                                                                               // 39\n      }                                                                                                                // 40\n    });                                                                                                                // 41\n  },                                                                                                                   // 42\n  'slip:swipe .list, slip:beforeswipe .list, slip:beforewait .list, slip:afterswipe .list': function(e, template) {    // 43\n    e.preventDefault();                                                                                                // 44\n  },                                                                                                                   // 45\n  'slip:beforereorder .list': function(e, template) {                                                                  // 46\n    if (e.originalEvent.target.className.indexOf('instant') == -1) {                                                   // 47\n      e.preventDefault();                                                                                              // 48\n    }                                                                                                                  // 49\n  },                                                                                                                   // 50\n  'slip:reorder .list': function(e, template) {                                                                        // 51\n    spliceIndex = e.originalEvent.detail.spliceIndex                                                                   // 52\n    originalIndex = e.originalEvent.detail.originalIndex                                                               // 53\n                                                                                                                       // 54\n    if (spliceIndex != originalIndex) {                                                                                // 55\n                                                                                                                       // 56\n      template.data.ionSortable.find({}, {                                                                             // 57\n        sort: {                                                                                                        // 58\n          order: 1                                                                                                     // 59\n        }                                                                                                              // 60\n      }).forEach(function(item, i) {                                                                                   // 61\n        template.data.ionSortable._collection.pauseObservers()                                                         // 62\n        if (item._id == Blaze.getData(e.target.getElementsByClassName('item-content')[0])._id) {                       // 63\n          temp = template.data.ionSortable.update({                                                                    // 64\n            _id: item._id                                                                                              // 65\n          }, {                                                                                                         // 66\n            $set: {                                                                                                    // 67\n              order: spliceIndex                                                                                       // 68\n            }                                                                                                          // 69\n          })                                                                                                           // 70\n        } else {                                                                                                       // 71\n          if (spliceIndex > originalIndex) {                                                                           // 72\n            newOrder = ((spliceIndex >= i) && (originalIndex < i)) ? (i - 1) : i                                       // 73\n          } else if (spliceIndex == '0') {                                                                             // 74\n            newOrder = (originalIndex > i) ? (i + 1) : i                                                               // 75\n          } else {                                                                                                     // 76\n            newOrder = ((spliceIndex <= i) && (originalIndex > i)) ? (i + 1) : i                                       // 77\n          }                                                                                                            // 78\n                                                                                                                       // 79\n          temp = template.data.ionSortable.update({                                                                    // 80\n            _id: item._id                                                                                              // 81\n          }, {                                                                                                         // 82\n            $set: {                                                                                                    // 83\n              order: newOrder                                                                                          // 84\n            }                                                                                                          // 85\n          })                                                                                                           // 86\n        }                                                                                                              // 87\n        template.data.ionSortable._collection.resumeObservers()                                                        // 88\n      })                                                                                                               // 89\n                                                                                                                       // 90\n    }                                                                                                                  // 91\n  }                                                                                                                    // 92\n                                                                                                                       // 93\n});                                                                                                                    // 94\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionListButton/template.ionListButton.js                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionListButton\");                                                                                 // 2\nTemplate[\"ionListButton\"] = new Template(\"Template.ionListButton\", (function() {                                       // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": function() {                                                                                              // 6\n      return Spacebars.mustache(view.lookup(\"classes\"));                                                               // 7\n    }                                                                                                                  // 8\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {                                                          // 9\n    return Spacebars.include(function() {                                                                              // 10\n      return Spacebars.call(view.templateContentBlock);                                                                // 11\n    });                                                                                                                // 12\n  }), \"\\n  \");                                                                                                         // 13\n}));                                                                                                                   // 14\n                                                                                                                       // 15\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionListButton/ionListButton.js                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.ionListButton.helpers({                                                                                       // 2\n  classes: function(){                                                                                                 // 3\n                                                                                                                       // 4\n    var classes = [];                                                                                                  // 5\n                                                                                                                       // 6\n    var action = this.action || 'delete';                                                                              // 7\n    var side = this.side || 'left';                                                                                    // 8\n    classes.push('item-' + action);                                                                                    // 9\n    classes.push('item-' + side + '-edit');                                                                            // 10\n                                                                                                                       // 11\n    classes.push('enable-pointer-events');                                                                             // 12\n                                                                                                                       // 13\n    return classes.join(' ');                                                                                          // 14\n                                                                                                                       // 15\n  }                                                                                                                    // 16\n})                                                                                                                     // 17\n                                                                                                                       // 18\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionLoading/template.ionLoading.js                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionLoading\");                                                                                    // 2\nTemplate[\"ionLoading\"] = new Template(\"Template.ionLoading\", (function() {                                             // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": \"loading-container\"                                                                                       // 6\n  }, \"\\n    \", HTML.DIV({                                                                                              // 7\n    \"class\": \"loading\"                                                                                                 // 8\n  }, \"\\n      \", Blaze.If(function() {                                                                                 // 9\n    return Spacebars.call(view.lookup(\"template\"));                                                                    // 10\n  }, function() {                                                                                                      // 11\n    return [ \"\\n        \", Blaze.View(\"lookup:template\", function() {                                                  // 12\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"template\")));                                           // 13\n    }), \"\\n      \" ];                                                                                                  // 14\n  }, function() {                                                                                                      // 15\n    return [ \"\\n        \", HTML.I({                                                                                    // 16\n      \"class\": \"icon ion-loading-d\"                                                                                    // 17\n    }), \"\\n      \" ];                                                                                                  // 18\n  }), \"\\n    \"), \"\\n  \");                                                                                              // 19\n}));                                                                                                                   // 20\n                                                                                                                       // 21\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionLoading/ionLoading.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nIonLoading = {                                                                                                         // 1\n  show: function (userOptions) {                                                                                       // 2\n    var userOptions = userOptions || {};                                                                               // 3\n    var options = _.extend({                                                                                           // 4\n      delay: 0,                                                                                                        // 5\n      duration: null,                                                                                                  // 6\n      customTemplate: null,                                                                                            // 7\n      backdrop: false                                                                                                  // 8\n    }, userOptions);                                                                                                   // 9\n                                                                                                                       // 10\n    if (options.backdrop) {                                                                                            // 11\n      IonBackdrop.retain();                                                                                            // 12\n      $('.backdrop').addClass('backdrop-loading');                                                                     // 13\n    }                                                                                                                  // 14\n                                                                                                                       // 15\n    Meteor.setTimeout(function () {                                                                                    // 16\n      this.template = Template['ionLoading'];                                                                          // 17\n      this.view = Blaze.renderWithData(this.template, {template: options.customTemplate}, $('.ionic-body').get(0));    // 18\n                                                                                                                       // 19\n      var $loadingEl = $(this.view.firstNode());                                                                       // 20\n      $loadingEl.addClass('visible');                                                                                  // 21\n                                                                                                                       // 22\n      Meteor.setTimeout(function () {                                                                                  // 23\n        $loadingEl.addClass('active');                                                                                 // 24\n      }, 10);                                                                                                          // 25\n    }.bind(this), options.delay);                                                                                      // 26\n                                                                                                                       // 27\n    if (options.duration) {                                                                                            // 28\n      Meteor.setTimeout(function () {                                                                                  // 29\n        this.hide();                                                                                                   // 30\n      }.bind(this), options.duration);                                                                                 // 31\n    }                                                                                                                  // 32\n  },                                                                                                                   // 33\n                                                                                                                       // 34\n  hide: function () {                                                                                                  // 35\n    if (this.view) {                                                                                                   // 36\n      var $loadingEl = $(this.view.firstNode());                                                                       // 37\n      $loadingEl.removeClass('active');                                                                                // 38\n                                                                                                                       // 39\n      Meteor.setTimeout(function () {                                                                                  // 40\n        IonBackdrop.release();                                                                                         // 41\n        $loadingEl.removeClass('visible');                                                                             // 42\n        Blaze.remove(this.view);                                                                                       // 43\n        this.view = null;                                                                                              // 44\n      }.bind(this), 0);                                                                                                // 45\n    }                                                                                                                  // 46\n    Meteor.setTimeout(function() {                                                                                     // 47\n      $('.loading-container').remove();                                                                                // 48\n    }, 0)                                                                                                              // 49\n  }                                                                                                                    // 50\n};                                                                                                                     // 51\n                                                                                                                       // 52\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionModal/template.ionModal.js                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionModal\");                                                                                      // 2\nTemplate[\"ionModal\"] = new Template(\"Template.ionModal\", (function() {                                                 // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": \"modal-backdrop\"                                                                                          // 6\n  }, \"\\n    \", HTML.DIV({                                                                                              // 7\n    \"class\": \"modal-wrapper\"                                                                                           // 8\n  }, \"\\n      \", HTML.DIV({                                                                                            // 9\n    \"class\": function() {                                                                                              // 10\n      return Spacebars.mustache(view.lookup(\"classes\"));                                                               // 11\n    }                                                                                                                  // 12\n  }, \"\\n\\n        \", Blaze.If(function() {                                                                             // 13\n    return Spacebars.call(view.lookup(\"customTemplate\"));                                                              // 14\n  }, function() {                                                                                                      // 15\n    return [ \"\\n          \", Blaze._InOuterTemplateScope(view, function() {                                            // 16\n      return Spacebars.include(function() {                                                                            // 17\n        return Spacebars.call(view.templateContentBlock);                                                              // 18\n      });                                                                                                              // 19\n    }), \"\\n        \" ];                                                                                                // 20\n  }, function() {                                                                                                      // 21\n    return [ \"\\n          \", HTML.DIV({                                                                                // 22\n      \"class\": function() {                                                                                            // 23\n        return Spacebars.mustache(view.lookup(\"barClass\"));                                                            // 24\n      }                                                                                                                // 25\n    }, \"\\n            \", HTML.H2({                                                                                     // 26\n      \"class\": function() {                                                                                            // 27\n        return Spacebars.mustache(view.lookup(\"titleClass\"));                                                          // 28\n      }                                                                                                                // 29\n    }, Blaze.View(\"lookup:title\", function() {                                                                         // 30\n      return Spacebars.mustache(view.lookup(\"title\"));                                                                 // 31\n    })), \"\\n            \", Blaze.If(function() {                                                                       // 32\n      return Spacebars.call(view.lookup(\"closeText\"));                                                                 // 33\n    }, function() {                                                                                                    // 34\n      return [ \"\\n              \", HTML.BUTTON({                                                                       // 35\n        \"data-dismiss\": \"modal\",                                                                                       // 36\n        \"class\": \"button button-positive button-clear\"                                                                 // 37\n      }, Blaze.View(\"lookup:closeText\", function() {                                                                   // 38\n        return Spacebars.mustache(view.lookup(\"closeText\"));                                                           // 39\n      })), \"\\n            \" ];                                                                                         // 40\n    }, function() {                                                                                                    // 41\n      return [ \"\\n              \", HTML.BUTTON({                                                                       // 42\n        \"data-dismiss\": \"modal\",                                                                                       // 43\n        \"class\": \"button button-icon\"                                                                                  // 44\n      }, HTML.I({                                                                                                      // 45\n        \"class\": \"icon ion-ios-close-empty\"                                                                            // 46\n      })), \"\\n            \" ];                                                                                         // 47\n    }), \"\\n          \"), \"\\n          \", HTML.DIV({                                                                    // 48\n      \"class\": \"content has-header overflow-scroll\"                                                                    // 49\n    }, \"\\n            \", Blaze._InOuterTemplateScope(view, function() {                                                // 50\n      return Spacebars.include(function() {                                                                            // 51\n        return Spacebars.call(view.templateContentBlock);                                                              // 52\n      });                                                                                                              // 53\n    }), \"\\n          \"), \"\\n        \" ];                                                                               // 54\n  }), \"\\n\\n      \"), \"\\n    \"), \"\\n  \");                                                                               // 55\n}));                                                                                                                   // 56\n                                                                                                                       // 57\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionModal/ionModal.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nIonModal = {                                                                                                           // 1\n  transitionEndEvent: 'transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd',                              // 2\n  animationEndEvent: 'animationend webkitAnimationEnd oAnimationEnd MSAnimationEnd',                                   // 3\n  enterClasses: ['ng-enter', 'slide-in-up'],                                                                           // 4\n  enterActiveClass: 'ng-enter-active',                                                                                 // 5\n  leaveClasses: ['ng-leave', 'slide-in-up'],                                                                           // 6\n  leaveActiveClass: 'ng-leave-active',                                                                                 // 7\n  view: {},                                                                                                            // 8\n  views: [],                                                                                                           // 9\n  open: function (templateName, data) {                                                                                // 10\n                                                                                                                       // 11\n    Meteor.setTimeout(function () {                                                                                    // 12\n                                                                                                                       // 13\n      this.template = Template[templateName];                                                                          // 14\n      this.views.push(templateName);                                                                                   // 15\n      if (!this.view[templateName]) this.view[templateName] = [];                                                      // 16\n                                                                                                                       // 17\n      var view = Blaze.renderWithData(this.template, data, $('.ionic-body').get(0));                                   // 18\n      this.view[templateName].push(view);                                                                              // 19\n                                                                                                                       // 20\n      var $modalBackdrop = $(view.firstNode());                                                                        // 21\n      var $modal = $('.modal', $modalBackdrop);                                                                        // 22\n                                                                                                                       // 23\n      if (this.views.length === 1) {                                                                                   // 24\n        $modalBackdrop.addClass('active');                                                                             // 25\n      }                                                                                                                // 26\n                                                                                                                       // 27\n      $modal.addClass(this.enterClasses.join(' '));                                                                    // 28\n      Meteor.setTimeout(function () {                                                                                  // 29\n        $modal.addClass(this.enterActiveClass);                                                                        // 30\n      }.bind(this), 50);                                                                                               // 31\n                                                                                                                       // 32\n    }.bind(this), 0);                                                                                                  // 33\n                                                                                                                       // 34\n  },                                                                                                                   // 35\n  close: function (templateName) {                                                                                     // 36\n                                                                                                                       // 37\n    this.templateClosed = templateName;                                                                                // 38\n    Meteor.setTimeout(function () {                                                                                    // 39\n                                                                                                                       // 40\n      var templateName = this.templateClosed || this.views.slice(-1)[0];                                               // 41\n      delete this.templateClosed;                                                                                      // 42\n                                                                                                                       // 43\n      var view = (this.view[templateName] || []).slice(-1)[0];                                                         // 44\n      if (!view) return;                                                                                               // 45\n                                                                                                                       // 46\n      var $modalBackdrop = $(view.firstNode());                                                                        // 47\n      var $modal = $('.modal', $modalBackdrop);                                                                        // 48\n                                                                                                                       // 49\n      $modal.addClass(this.leaveClasses.join(' '));                                                                    // 50\n      Meteor.setTimeout(function () {                                                                                  // 51\n        $modal.addClass(this.leaveActiveClass);                                                                        // 52\n      }.bind(this), 50);                                                                                               // 53\n                                                                                                                       // 54\n      $modalBackdrop.fadeOut(500, function() {                                                                         // 55\n        $('body').removeClass('modal-open');                                                                           // 56\n      });                                                                                                              // 57\n                                                                                                                       // 58\n    }.bind(this), 0);                                                                                                  // 59\n                                                                                                                       // 60\n  }                                                                                                                    // 61\n};                                                                                                                     // 62\n                                                                                                                       // 63\n$(document).delegate('.modal', IonModal.transitionEndEvent, function(e) {                                              // 64\n  var $modal = $(e.currentTarget);                                                                                     // 65\n  if ($modal.hasClass(IonModal.enterClasses.join(' ')) || $modal.hasClass(IonModal.enterActiveClasse)) {               // 66\n    $modal.removeClass(IonModal.enterClasses.join(' ')).removeClass(IonModal.enterActiveClass);                        // 67\n    $('body').addClass('modal-open');                                                                                  // 68\n  } else if ($modal.hasClass(IonModal.leaveClasses.join(' ')) || $modal.hasClass(IonModal.leaveActiveClasse)) {        // 69\n    var firstChild = $modal.children().first();                                                                        // 70\n    var templateName = getElementModalTemplateName(firstChild);                                                        // 71\n    IonModal.views = _.without(IonModal.views, templateName);                                                          // 72\n    var view = IonModal.view[templateName].pop();                                                                      // 73\n    var $modalBackdrop = $(view.firstNode());                                                                          // 74\n    $modalBackdrop.removeClass('active');                                                                              // 75\n    $modal.removeClass(IonModal.leaveClasses.join(' ')).removeClass(IonModal.leaveActiveClass).off(IonModal.transitionEndEvent);\n    $('body').removeClass('modal-open');                                                                               // 77\n    $(e.target).parents('.modal-backdrop').remove();                                                                   // 78\n    Blaze.remove(view);                                                                                                // 79\n  }                                                                                                                    // 80\n});                                                                                                                    // 81\n                                                                                                                       // 82\nTemplate.ionModal.created = function () {                                                                              // 83\n  this.data = this.data || {};                                                                                         // 84\n  this.customTemplate = this.data.customTemplate || false;                                                             // 85\n  this.title = this.data.title;                                                                                        // 86\n  this.title = this.data.closeText;                                                                                    // 87\n  this.focusFirstInput = _.isUndefined(this.data.focusFirstInput) ? true : this.data.focusFirstInput;                  // 88\n  this.animation = this.data.animation || 'slide-in-up';                                                               // 89\n};                                                                                                                     // 90\n                                                                                                                       // 91\nTemplate.ionModal.rendered = function () {                                                                             // 92\n  if (this.focusFirstInput) {                                                                                          // 93\n    Meteor.setTimeout(function () {                                                                                    // 94\n      if (!this._domrange) return;                                                                                     // 95\n      this.$('input:first').focus();                                                                                   // 96\n    }.bind(this), 600);                                                                                                // 97\n  }                                                                                                                    // 98\n  $(window).on('keyup.ionModal', function(event) {                                                                     // 99\n    event.stopImmediatePropagation();                                                                                  // 100\n    if (event.which == 27) {                                                                                           // 101\n      IonModal.close();                                                                                                // 102\n    }                                                                                                                  // 103\n  });                                                                                                                  // 104\n};                                                                                                                     // 105\n                                                                                                                       // 106\nTemplate.ionModal.destroyed = function () {                                                                            // 107\n  if (!IonModal.views.length) {                                                                                        // 108\n    $(window).off('keyup.ionModal');                                                                                   // 109\n  }                                                                                                                    // 110\n};                                                                                                                     // 111\n                                                                                                                       // 112\nTemplate.ionModal.helpers({                                                                                            // 113\n  barClass: function () {                                                                                              // 114\n    var defaultClasses = ['bar', 'bar-header', 'bar-stable'].join(' ');                                                // 115\n    var customClasses = _.isString(this.barClass) ? this.barClass : '';                                                // 116\n    return [defaultClasses, customClasses].join(' ');                                                                  // 117\n  },                                                                                                                   // 118\n                                                                                                                       // 119\n  titleClass: function () {                                                                                            // 120\n    var classes = ['title'];                                                                                           // 121\n                                                                                                                       // 122\n    if (Platform.isAndroid()) {                                                                                        // 123\n      classes.push('title-left');                                                                                      // 124\n    }                                                                                                                  // 125\n                                                                                                                       // 126\n    return classes.join(' ');                                                                                          // 127\n  },                                                                                                                   // 128\n                                                                                                                       // 129\n  title: function () {                                                                                                 // 130\n    return this.title;                                                                                                 // 131\n  },                                                                                                                   // 132\n                                                                                                                       // 133\n  closeText: function () {                                                                                             // 134\n    return this.closeText;                                                                                             // 135\n  },                                                                                                                   // 136\n                                                                                                                       // 137\n  animation: function () {                                                                                             // 138\n    return this.animation || 'slide-in-up';                                                                            // 139\n  },                                                                                                                   // 140\n                                                                                                                       // 141\n  customTemplate: function () {                                                                                        // 142\n    return this.customTemplate;                                                                                        // 143\n  },                                                                                                                   // 144\n                                                                                                                       // 145\n  classes: function () {                                                                                               // 146\n    var classes = ['modal'];                                                                                           // 147\n                                                                                                                       // 148\n    if (this.class) {                                                                                                  // 149\n      classes.push(this.class);                                                                                        // 150\n    }                                                                                                                  // 151\n                                                                                                                       // 152\n    return classes.join(' ');                                                                                          // 153\n  }                                                                                                                    // 154\n                                                                                                                       // 155\n});                                                                                                                    // 156\n                                                                                                                       // 157\nTemplate.ionModal.events({                                                                                             // 158\n  // Handle clicking the backdrop                                                                                      // 159\n  'click': function (event, template) {                                                                                // 160\n    if ($(event.target).hasClass('modal-backdrop')) {                                                                  // 161\n      IonModal.close();                                                                                                // 162\n    }                                                                                                                  // 163\n  },                                                                                                                   // 164\n  'click [data-dismiss=modal]': function (event, template) {                                                           // 165\n    var tplName = getElementModalTemplateName(event.currentTarget);                                                    // 166\n    IonModal.close(tplName);                                                                                           // 167\n  }                                                                                                                    // 168\n});                                                                                                                    // 169\n                                                                                                                       // 170\nvar getElementModalTemplateName = function(element) {                                                                  // 171\n  var modal = $(element).parents('.modal').get(0);                                                                     // 172\n  var modalView = Blaze.getView(modal);                                                                                // 173\n  var tplView = Meteor._get(modalView, 'parentView', 'parentView'); // Twice because the parent view is a #with block  // 174\n  var tplName = tplView.name.slice('Template.'.length, tplView.name.length);                                           // 175\n  return tplName;                                                                                                      // 176\n};                                                                                                                     // 177\n                                                                                                                       // 178\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionNavBar/template.ionNavBar.js                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionNavBar\");                                                                                     // 2\nTemplate[\"ionNavBar\"] = new Template(\"Template.ionNavBar\", (function() {                                               // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": function() {                                                                                              // 6\n      return [ Spacebars.mustache(view.lookup(\"classes\")), \" nav-bar-block nav-bar-transition-\", Spacebars.mustache(view.lookup(\"transition\")), \" nav-bar-direction-forward\" ];\n    },                                                                                                                 // 8\n    \"data-navbar-container\": \"\"                                                                                        // 9\n  }, \"\\n    \", Blaze._TemplateWith(function() {                                                                        // 10\n    return \"headerButtonLeft\";                                                                                         // 11\n  }, function() {                                                                                                      // 12\n    return Spacebars.include(view.lookupTemplate(\"yield\"));                                                            // 13\n  }), \"\\n    \", Blaze._TemplateWith(function() {                                                                       // 14\n    return \"headerTitle\";                                                                                              // 15\n  }, function() {                                                                                                      // 16\n    return Spacebars.include(view.lookupTemplate(\"yield\"));                                                            // 17\n  }), \"\\n    \", Blaze._TemplateWith(function() {                                                                       // 18\n    return \"headerButtonRight\";                                                                                        // 19\n  }, function() {                                                                                                      // 20\n    return Spacebars.include(view.lookupTemplate(\"yield\"));                                                            // 21\n  }), \"\\n  \");                                                                                                         // 22\n}));                                                                                                                   // 23\n                                                                                                                       // 24\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionNavBar/ionNavBar.js                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.ionNavBar.created = function () {                                                                             // 1\n  this.data = this.data || {};                                                                                         // 2\n                                                                                                                       // 3\n  if (Platform.isAndroid()) {                                                                                          // 4\n    this.transition = 'android';                                                                                       // 5\n  } else {                                                                                                             // 6\n    this.transition = 'ios';                                                                                           // 7\n  }                                                                                                                    // 8\n                                                                                                                       // 9\n  // Allow overriding the transition                                                                                   // 10\n  if (this.data.transition) {                                                                                          // 11\n    this.transition = this.data.transition;                                                                            // 12\n  }                                                                                                                    // 13\n                                                                                                                       // 14\n  if (this.transition === 'ios') {                                                                                     // 15\n    this.transitionDuration = 450;                                                                                     // 16\n  } else {                                                                                                             // 17\n    this.transitionDuration = 200;                                                                                     // 18\n  }                                                                                                                    // 19\n};                                                                                                                     // 20\n                                                                                                                       // 21\nTemplate.ionNavBar.rendered = function () {                                                                            // 22\n  Session.set('hasHeader', true);                                                                                      // 23\n                                                                                                                       // 24\n  IonHeaderBar.alignTitle.call(this);                                                                                  // 25\n  IonHeaderBar.positionTitle.call(this);                                                                               // 26\n                                                                                                                       // 27\n  var template = this;                                                                                                 // 28\n  var container = this.find('[data-navbar-container]');                                                                // 29\n  container._uihooks = {                                                                                               // 30\n    insertElement: function(node, next) {                                                                              // 31\n      var $node = $(node);                                                                                             // 32\n                                                                                                                       // 33\n      if (!$node.hasClass('title') && !$node.hasClass('button') || IonNavigation.skipTransitions) {                    // 34\n        container.insertBefore(node, next);                                                                            // 35\n        // Changing tabs skips transition animations, but we still want to update the position of the title            // 36\n        IonHeaderBar.alignTitle.call(template);                                                                        // 37\n        IonHeaderBar.positionTitle.call(template);                                                                     // 38\n        return;                                                                                                        // 39\n      }                                                                                                                // 40\n                                                                                                                       // 41\n      if ($node.hasClass('title')) {                                                                                   // 42\n        container.insertBefore(node, next);                                                                            // 43\n        $node.addClass('title-entering title-stage');                                                                  // 44\n                                                                                                                       // 45\n        IonHeaderBar.alignTitle.call(template);                                                                        // 46\n        IonHeaderBar.positionTitle.call(template);                                                                     // 47\n                                                                                                                       // 48\n        Meteor.setTimeout(function() {                                                                                 // 49\n          $node.removeClass('title-stage').addClass('title-active');                                                   // 50\n        }, 16);                                                                                                        // 51\n                                                                                                                       // 52\n        Meteor.setTimeout(function () {                                                                                // 53\n          $(this).removeClass('title-entering');                                                                       // 54\n          $('[data-navbar-container]').removeClass('nav-bar-direction-back').addClass('nav-bar-direction-forward');    // 55\n        }, template.transitionDuration + 16);                                                                          // 56\n      }                                                                                                                // 57\n                                                                                                                       // 58\n      if ($node.hasClass('button')) {                                                                                  // 59\n        container.insertBefore(node, next);                                                                            // 60\n        $node.addClass('button-entering button-stage');                                                                // 61\n        Meteor.setTimeout(function() {                                                                                 // 62\n          $node.removeClass('button-stage').addClass('button-active');                                                 // 63\n        }, 16);                                                                                                        // 64\n                                                                                                                       // 65\n        Meteor.setTimeout(function () {                                                                                // 66\n          $(this).removeClass('button-entering');                                                                      // 67\n        }, template.transitionDuration + 16);                                                                          // 68\n      }                                                                                                                // 69\n    },                                                                                                                 // 70\n                                                                                                                       // 71\n    removeElement: function(node) {                                                                                    // 72\n      var $node = $(node);                                                                                             // 73\n      if (!$node.hasClass('title') && !$node.hasClass('button') || IonNavigation.skipTransitions) {                    // 74\n        $node.remove();                                                                                                // 75\n        return;                                                                                                        // 76\n      }                                                                                                                // 77\n                                                                                                                       // 78\n      if ($node.hasClass('title')) {                                                                                   // 79\n        $node.addClass('title-leaving title-stage');                                                                   // 80\n        Meteor.setTimeout(function() {                                                                                 // 81\n          $node.removeClass('title-stage').addClass('title-active');                                                   // 82\n        }, 16);                                                                                                        // 83\n                                                                                                                       // 84\n        Meteor.setTimeout(function () {                                                                                // 85\n          $node.remove();                                                                                              // 86\n        }, template.transitionDuration + 16);                                                                          // 87\n      }                                                                                                                // 88\n                                                                                                                       // 89\n      if ($node.hasClass('button')) {                                                                                  // 90\n        $node.remove();                                                                                                // 91\n      }                                                                                                                // 92\n    }                                                                                                                  // 93\n  };                                                                                                                   // 94\n};                                                                                                                     // 95\n                                                                                                                       // 96\nTemplate.ionNavBar.destroyed = function () {                                                                           // 97\n  Session.set('hasHeader', false);                                                                                     // 98\n};                                                                                                                     // 99\n                                                                                                                       // 100\nTemplate.ionNavBar.helpers({                                                                                           // 101\n  classes: function () {                                                                                               // 102\n    var classes = ['bar', 'bar-header'];                                                                               // 103\n                                                                                                                       // 104\n    if (this.class) {                                                                                                  // 105\n      classes.push(this.class);                                                                                        // 106\n    } else {                                                                                                           // 107\n      classes.push('bar-stable');                                                                                      // 108\n    }                                                                                                                  // 109\n                                                                                                                       // 110\n    return classes.join(' ');                                                                                          // 111\n  },                                                                                                                   // 112\n                                                                                                                       // 113\n  transition: function () {                                                                                            // 114\n    return Template.instance().transition;                                                                             // 115\n  }                                                                                                                    // 116\n});                                                                                                                    // 117\n                                                                                                                       // 118\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionNavBackButton/template.ionNavBackButton.js                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionNavBackButton\");                                                                              // 2\nTemplate[\"ionNavBackButton\"] = new Template(\"Template.ionNavBackButton\", (function() {                                 // 3\n  var view = this;                                                                                                     // 4\n  return HTML.BUTTON({                                                                                                 // 5\n    \"class\": function() {                                                                                              // 6\n      return Spacebars.mustache(view.lookup(\"classes\"));                                                               // 7\n    }                                                                                                                  // 8\n  }, \"\\n    \", Blaze._TemplateWith(function() {                                                                        // 9\n    return {                                                                                                           // 10\n      icon: Spacebars.call(view.lookup(\"icon\"))                                                                        // 11\n    };                                                                                                                 // 12\n  }, function() {                                                                                                      // 13\n    return Spacebars.include(view.lookupTemplate(\"ionIcon\"));                                                          // 14\n  }), \"\\n    \", Blaze.Unless(function() {                                                                              // 15\n    return Spacebars.call(view.lookup(\"isAndroid\"));                                                                   // 16\n  }, function() {                                                                                                      // 17\n    return [ \"\\n      \", HTML.SPAN({                                                                                   // 18\n      \"class\": \"back-text\"                                                                                             // 19\n    }, \"\\n        \", Blaze.View(\"lookup:text\", function() {                                                            // 20\n      return Spacebars.mustache(view.lookup(\"text\"));                                                                  // 21\n    }), \"\\n      \"), \"\\n    \" ];                                                                                       // 22\n  }), \"\\n  \");                                                                                                         // 23\n}));                                                                                                                   // 24\n                                                                                                                       // 25\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionNavBackButton/ionNavBackButton.js                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nIonScrollPositions = {};                                                                                               // 1\n                                                                                                                       // 2\nRouter.onStop(function () {                                                                                            // 3\n  IonScrollPositions[this.route.path(this.params)] = $('.overflow-scroll').scrollTop();                                // 4\n});                                                                                                                    // 5\n                                                                                                                       // 6\nTemplate.ionNavBackButton.events({                                                                                     // 7\n  'click': function (event, template) {                                                                                // 8\n    $('[data-nav-container]').addClass('nav-view-direction-back');                                                     // 9\n    $('[data-navbar-container]').addClass('nav-bar-direction-back');                                                   // 10\n                                                                                                                       // 11\n    //get most up-to-date url, if it exists                                                                            // 12\n    backUrl = template.getBackUrl()                                                                                    // 13\n    if (backUrl) {                                                                                                     // 14\n      Router.go(backUrl);                                                                                              // 15\n    } else {                                                                                                           // 16\n      window.history.back();                                                                                           // 17\n    }                                                                                                                  // 18\n  }                                                                                                                    // 19\n});                                                                                                                    // 20\n                                                                                                                       // 21\nTemplate.ionNavBackButton.created = function () {                                                                      // 22\n  this.data = this.data || {};                                                                                         // 23\n};                                                                                                                     // 24\n                                                                                                                       // 25\nTemplate.ionNavBackButton.rendered = function () {                                                                     // 26\n  var self = this;                                                                                                     // 27\n  this.getBackUrl = function () {                                                                                      // 28\n    var backUrl = null;                                                                                                // 29\n                                                                                                                       // 30\n    self.data = self.data || {};                                                                                       // 31\n                                                                                                                       // 32\n    if (self.data.href) {                                                                                              // 33\n      backUrl = self.data.href;                                                                                        // 34\n    }                                                                                                                  // 35\n                                                                                                                       // 36\n    if (self.data.path) {                                                                                              // 37\n      backRoute = Router.routes[self.data.path]                                                                        // 38\n      if (!backRoute) {                                                                                                // 39\n        console.warn(\"back to nonexistent route: \", self.data.path);                                                   // 40\n        return;                                                                                                        // 41\n      }                                                                                                                // 42\n      backUrl = backRoute.path(Template.parentData(1));                                                                // 43\n    }                                                                                                                  // 44\n    return backUrl;                                                                                                    // 45\n  };                                                                                                                   // 46\n};                                                                                                                     // 47\n                                                                                                                       // 48\nTemplate.ionNavBackButton.helpers({                                                                                    // 49\n  classes: function () {                                                                                               // 50\n    var classes = ['buttons button button-clear back-button pull-left'];                                               // 51\n                                                                                                                       // 52\n    if (this.class) {                                                                                                  // 53\n      classes.push(this.class);                                                                                        // 54\n    }                                                                                                                  // 55\n                                                                                                                       // 56\n    return classes.join(' ');                                                                                          // 57\n  },                                                                                                                   // 58\n                                                                                                                       // 59\n  icon: function () {                                                                                                  // 60\n    if (this.icon) {                                                                                                   // 61\n      return this.icon;                                                                                                // 62\n    }                                                                                                                  // 63\n                                                                                                                       // 64\n    if (Platform.isAndroid()) {                                                                                        // 65\n      return 'android-arrow-back';                                                                                     // 66\n    }                                                                                                                  // 67\n                                                                                                                       // 68\n    return 'ios-arrow-back';                                                                                           // 69\n  },                                                                                                                   // 70\n                                                                                                                       // 71\n  text: function () {                                                                                                  // 72\n    if (this.text) {                                                                                                   // 73\n      return this.text;                                                                                                // 74\n    } else if(this.text !== false) {                                                                                   // 75\n      return 'Back';                                                                                                   // 76\n    }                                                                                                                  // 77\n  }                                                                                                                    // 78\n});                                                                                                                    // 79\n                                                                                                                       // 80\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionNavView/template.ionNavView.js                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionNavView\");                                                                                    // 2\nTemplate[\"ionNavView\"] = new Template(\"Template.ionNavView\", (function() {                                             // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"data-nav-container\": \"\",                                                                                          // 6\n    \"class\": function() {                                                                                              // 7\n      return [ \"nav-view-transition-\", Spacebars.mustache(view.lookup(\"transition\")), \" nav-view-direction-forward\" ];\n    }                                                                                                                  // 9\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {                                                          // 10\n    return Spacebars.include(function() {                                                                              // 11\n      return Spacebars.call(view.templateContentBlock);                                                                // 12\n    });                                                                                                                // 13\n  }), \"\\n  \");                                                                                                         // 14\n}));                                                                                                                   // 15\n                                                                                                                       // 16\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionNavView/ionNavView.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nIonNavigation = {                                                                                                      // 1\n  skipTransitions: false                                                                                               // 2\n};                                                                                                                     // 3\n                                                                                                                       // 4\nTemplate.ionNavView.created = function () {                                                                            // 5\n  this.data = this.data || {};                                                                                         // 6\n  Session.setDefault('ionNavDirection', 'forward');                                                                    // 7\n                                                                                                                       // 8\n  if (Platform.isAndroid()) {                                                                                          // 9\n    this.transition = 'android';                                                                                       // 10\n  } else {                                                                                                             // 11\n    this.transition = 'ios';                                                                                           // 12\n  }                                                                                                                    // 13\n                                                                                                                       // 14\n  // Allow overriding the transition                                                                                   // 15\n  if (this.data && this.data.transition) {                                                                             // 16\n    this.transition = this.data.transition;                                                                            // 17\n  }                                                                                                                    // 18\n                                                                                                                       // 19\n  if (this.transition === 'ios') {                                                                                     // 20\n    this.transitionDuration = 450;                                                                                     // 21\n  } else {                                                                                                             // 22\n    this.transitionDuration = 320;                                                                                     // 23\n  }                                                                                                                    // 24\n};                                                                                                                     // 25\n                                                                                                                       // 26\nTemplate.ionNavView.rendered = function () {                                                                           // 27\n  var template = this;                                                                                                 // 28\n  var container = this.find('[data-nav-container]');                                                                   // 29\n                                                                                                                       // 30\n  container._uihooks = {                                                                                               // 31\n    insertElement: function(node, next) {                                                                              // 32\n      var $node = $(node);                                                                                             // 33\n      if (!template.transition || !$node.hasClass('view') || IonNavigation.skipTransitions) {                          // 34\n        container.insertBefore(node, next);                                                                            // 35\n        return;                                                                                                        // 36\n      }                                                                                                                // 37\n                                                                                                                       // 38\n      $node.addClass('nav-view-entering nav-view-stage');                                                              // 39\n      container.insertBefore(node, next);                                                                              // 40\n      Meteor.setTimeout(function() {                                                                                   // 41\n        $node.removeClass('nav-view-stage').addClass('nav-view-active');                                               // 42\n      }, 0);                                                                                                           // 43\n                                                                                                                       // 44\n      Meteor.setTimeout(function () {                                                                                  // 45\n        $(this).removeClass('nav-view-entering');                                                                      // 46\n        $('[data-nav-container]').removeClass('nav-view-direction-back').addClass('nav-view-direction-forward');       // 47\n      }, template.transitionDuration);                                                                                 // 48\n    },                                                                                                                 // 49\n                                                                                                                       // 50\n    removeElement: function(node) {                                                                                    // 51\n      var $node = $(node);                                                                                             // 52\n      if (!template.transition || !$node.hasClass('view') || IonNavigation.skipTransitions) {                          // 53\n        $node.remove();                                                                                                // 54\n        return;                                                                                                        // 55\n      }                                                                                                                // 56\n                                                                                                                       // 57\n      $node.addClass('nav-view-leaving nav-view-stage');                                                               // 58\n      Meteor.setTimeout(function() {                                                                                   // 59\n        $node.removeClass('nav-view-stage').addClass('nav-view-active');                                               // 60\n      }, 0);                                                                                                           // 61\n                                                                                                                       // 62\n      Meteor.setTimeout(function () {                                                                                  // 63\n        $node.remove();                                                                                                // 64\n        Session.set('ionNavDirection', 'forward');                                                                     // 65\n      }, template.transitionDuration);                                                                                 // 66\n    }                                                                                                                  // 67\n  };                                                                                                                   // 68\n};                                                                                                                     // 69\n                                                                                                                       // 70\nTemplate.ionNavView.helpers({                                                                                          // 71\n  transition: function () {                                                                                            // 72\n    return Template.instance().transition;                                                                             // 73\n  }                                                                                                                    // 74\n});                                                                                                                    // 75\n                                                                                                                       // 76\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionPane/template.ionPane.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionPane\");                                                                                       // 2\nTemplate[\"ionPane\"] = new Template(\"Template.ionPane\", (function() {                                                   // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": \"pane\"                                                                                                    // 6\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {                                                          // 7\n    return Spacebars.include(function() {                                                                              // 8\n      return Spacebars.call(view.templateContentBlock);                                                                // 9\n    });                                                                                                                // 10\n  }), \"\\n  \");                                                                                                         // 11\n}));                                                                                                                   // 12\n                                                                                                                       // 13\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionPane/ionPane.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionPopover/template.ionPopover.js                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionPopover\");                                                                                    // 2\nTemplate[\"ionPopover\"] = new Template(\"Template.ionPopover\", (function() {                                             // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": \"popover-backdrop\"                                                                                        // 6\n  }, \"\\n    \", HTML.DIV({                                                                                              // 7\n    \"class\": \"popover-wrapper\"                                                                                         // 8\n  }, \"\\n      \", HTML.DIV({                                                                                            // 9\n    \"class\": \"popover\"                                                                                                 // 10\n  }, \"\\n        \", HTML.Raw('<div class=\"popover-arrow\"></div>'), \"\\n        \", Blaze._InOuterTemplateScope(view, function() {\n    return Spacebars.include(function() {                                                                              // 12\n      return Spacebars.call(view.templateContentBlock);                                                                // 13\n    });                                                                                                                // 14\n  }), \"\\n      \"), \"\\n    \"), \"\\n  \");                                                                                 // 15\n}));                                                                                                                   // 16\n                                                                                                                       // 17\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionPopover/ionPopover.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nPOPOVER_BODY_PADDING = 6;                                                                                              // 1\n                                                                                                                       // 2\nIonPopover = {                                                                                                         // 3\n  show: function (templateName, data, button) {                                                                        // 4\n    this.template = Template[templateName];                                                                            // 5\n    this.view = Blaze.renderWithData(this.template, data, $('.ionic-body').get(0));                                    // 6\n                                                                                                                       // 7\n    var $backdrop = $(this.view.firstNode());                                                                          // 8\n    var $popover = $backdrop.find('.popover');                                                                         // 9\n    var $button = $(button);                                                                                           // 10\n    var $arrow = $backdrop.find('.popover-arrow');                                                                     // 11\n                                                                                                                       // 12\n    var bodyWidth = $('body').width();                                                                                 // 13\n    var bodyHeight = $(window).innerHeight();                                                                          // 14\n    var buttonPosition = $button.offset();                                                                             // 15\n    var buttonWidth = $button.outerWidth();                                                                            // 16\n    var buttonHeight = $button.outerHeight();                                                                          // 17\n    var popoverWidth = $popover.outerWidth();                                                                          // 18\n    var popoverHeight = $popover.outerHeight();                                                                        // 19\n                                                                                                                       // 20\n    var popoverCSS = {                                                                                                 // 21\n      marginLeft: '0',                                                                                                 // 22\n      opacity: 1,                                                                                                      // 23\n      left: buttonPosition.left + buttonWidth / 2 - popoverWidth / 2                                                   // 24\n    };                                                                                                                 // 25\n                                                                                                                       // 26\n    if (popoverCSS.left < POPOVER_BODY_PADDING) {                                                                      // 27\n      popoverCSS.left = POPOVER_BODY_PADDING;                                                                          // 28\n    } else if(popoverCSS.left + popoverWidth + POPOVER_BODY_PADDING > bodyWidth) {                                     // 29\n      popoverCSS.left = bodyWidth - popoverWidth - POPOVER_BODY_PADDING;                                               // 30\n    }                                                                                                                  // 31\n                                                                                                                       // 32\n    if (buttonPosition.top + buttonHeight + popoverHeight > bodyHeight) {                                              // 33\n      popoverCSS.top = buttonPosition.top - popoverHeight;                                                             // 34\n      $popover.addClass('popover-bottom');                                                                             // 35\n    } else {                                                                                                           // 36\n      popoverCSS.top = buttonPosition.top + buttonHeight;                                                              // 37\n      $popover.removeClass('popover-bottom');                                                                          // 38\n    }                                                                                                                  // 39\n                                                                                                                       // 40\n    $backdrop.addClass('active');                                                                                      // 41\n    $arrow.css({                                                                                                       // 42\n      left: buttonPosition.left + buttonWidth / 2 - $arrow.outerWidth() / 2 - popoverCSS.left + 'px'                   // 43\n    });                                                                                                                // 44\n    $popover.css(popoverCSS);                                                                                          // 45\n  },                                                                                                                   // 46\n                                                                                                                       // 47\n  hide: function () {                                                                                                  // 48\n    if (typeof this.view !== 'undefined') {                                                                            // 49\n      var $backdrop = $(this.view.firstNode());                                                                        // 50\n      $backdrop.removeClass('active');                                                                                 // 51\n                                                                                                                       // 52\n      var $popover = $backdrop.find('.popover');                                                                       // 53\n      $popover.css({opacity: 0});                                                                                      // 54\n                                                                                                                       // 55\n      Blaze.remove(this.view);                                                                                         // 56\n    }                                                                                                                  // 57\n  }                                                                                                                    // 58\n};                                                                                                                     // 59\n                                                                                                                       // 60\nTemplate.ionPopover.rendered = function () {                                                                           // 61\n  $(window).on('keyup.ionPopover', function(event) {                                                                   // 62\n    if (event.which == 27) {                                                                                           // 63\n      IonPopover.hide();                                                                                               // 64\n    }                                                                                                                  // 65\n  });                                                                                                                  // 66\n};                                                                                                                     // 67\n                                                                                                                       // 68\nTemplate.ionPopover.destroyed = function () {                                                                          // 69\n  $(window).off('keyup.ionPopover');                                                                                   // 70\n};                                                                                                                     // 71\n                                                                                                                       // 72\nTemplate.ionPopover.events({                                                                                           // 73\n  // Handle clicking the backdrop                                                                                      // 74\n  'click': function (event, template) {                                                                                // 75\n    if ($(event.target).hasClass('popover-backdrop')) {                                                                // 76\n      IonPopover.hide();                                                                                               // 77\n    }                                                                                                                  // 78\n  }                                                                                                                    // 79\n});                                                                                                                    // 80\n                                                                                                                       // 81\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionPopup/template.ionPopup.js                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionPopup\");                                                                                      // 2\nTemplate[\"ionPopup\"] = new Template(\"Template.ionPopup\", (function() {                                                 // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": \"backdrop\"                                                                                                // 6\n  }, \"\\n    \", HTML.DIV({                                                                                              // 7\n    \"class\": \"popup-container\"                                                                                         // 8\n  }, \"\\n      \", HTML.DIV({                                                                                            // 9\n    \"class\": \"popup\"                                                                                                   // 10\n  }, \"\\n        \", Blaze.If(function() {                                                                               // 11\n    return Spacebars.call(view.lookup(\"hasHead\"));                                                                     // 12\n  }, function() {                                                                                                      // 13\n    return [ \"\\n          \", HTML.DIV({                                                                                // 14\n      \"class\": \"popup-head\"                                                                                            // 15\n    }, \"\\n            \", Blaze.If(function() {                                                                         // 16\n      return Spacebars.call(view.lookup(\"title\"));                                                                     // 17\n    }, function() {                                                                                                    // 18\n      return [ \"\\n              \", HTML.H3({                                                                           // 19\n        \"class\": \"popup-title\"                                                                                         // 20\n      }, Blaze.View(\"lookup:title\", function() {                                                                       // 21\n        return Spacebars.mustache(view.lookup(\"title\"));                                                               // 22\n      })), \"\\n            \" ];                                                                                         // 23\n    }), \"\\n            \", Blaze.If(function() {                                                                        // 24\n      return Spacebars.call(view.lookup(\"subTitle\"));                                                                  // 25\n    }, function() {                                                                                                    // 26\n      return [ \"\\n              \", HTML.H5({                                                                           // 27\n        \"class\": \"popup-sub-title\"                                                                                     // 28\n      }, Blaze.View(\"lookup:subTitle\", function() {                                                                    // 29\n        return Spacebars.mustache(view.lookup(\"subTitle\"));                                                            // 30\n      })), \"\\n            \" ];                                                                                         // 31\n    }), \"\\n          \"), \"\\n        \" ];                                                                               // 32\n  }), \"\\n        \", Blaze.If(function() {                                                                              // 33\n    return Spacebars.call(view.lookup(\"template\"));                                                                    // 34\n  }, function() {                                                                                                      // 35\n    return [ \"\\n          \", HTML.DIV({                                                                                // 36\n      \"class\": \"popup-body\"                                                                                            // 37\n    }, \"\\n            \", Blaze.View(\"lookup:template\", function() {                                                    // 38\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"template\")));                                           // 39\n    }), \"\\n          \"), \"\\n        \" ];                                                                               // 40\n  }), \"\\n        \", Blaze.If(function() {                                                                              // 41\n    return Spacebars.call(Spacebars.dot(view.lookup(\"buttons\"), \"length\"));                                            // 42\n  }, function() {                                                                                                      // 43\n    return [ \"\\n          \", HTML.DIV({                                                                                // 44\n      \"class\": \"popup-buttons\"                                                                                         // 45\n    }, \"\\n            \", Blaze.Each(function() {                                                                       // 46\n      return Spacebars.call(view.lookup(\"buttons\"));                                                                   // 47\n    }, function() {                                                                                                    // 48\n      return [ \"\\n              \", HTML.BUTTON({                                                                       // 49\n        \"data-action\": \"buttonTapped\",                                                                                 // 50\n        \"data-index\": function() {                                                                                     // 51\n          return Spacebars.mustache(view.lookup(\"index\"));                                                             // 52\n        },                                                                                                             // 53\n        \"class\": function() {                                                                                          // 54\n          return [ \"button \", Spacebars.mustache(view.lookup(\"type\")) ];                                               // 55\n        }                                                                                                              // 56\n      }, \"\\n                \", Blaze.View(\"lookup:text\", function() {                                                  // 57\n        return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"text\")));                                             // 58\n      }), \"\\n              \"), \"\\n            \" ];                                                                     // 59\n    }), \"\\n          \"), \"\\n        \" ];                                                                               // 60\n  }), \"\\n      \"), \"\\n    \"), \"\\n  \");                                                                                 // 61\n}));                                                                                                                   // 62\n                                                                                                                       // 63\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionPopup/ionPopup.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nIonPopup = {                                                                                                           // 1\n  show: function (options) {                                                                                           // 2\n    this.template = Template.ionPopup;                                                                                 // 3\n    this.buttons = [];                                                                                                 // 4\n                                                                                                                       // 5\n    for (var i = 0; i < options.buttons.length; i++) {                                                                 // 6\n      var button = options.buttons[i];                                                                                 // 7\n      this.buttons.push({                                                                                              // 8\n        text: button.text,                                                                                             // 9\n        type: button.type,                                                                                             // 10\n        index: i,                                                                                                      // 11\n        onTap: button.onTap                                                                                            // 12\n      });                                                                                                              // 13\n    }                                                                                                                  // 14\n                                                                                                                       // 15\n    // Figure out if a template or just a html string was passed                                                       // 16\n    var innerTemplate = '';                                                                                            // 17\n    if (options.templateName) {                                                                                        // 18\n      innerTemplate = Template[options.templateName].renderFunction().value;                                           // 19\n    } else if (options.template) {                                                                                     // 20\n      innerTemplate = '<span>' + options.template + '</span>';                                                         // 21\n    }                                                                                                                  // 22\n                                                                                                                       // 23\n    var data = {                                                                                                       // 24\n      title: options.title,                                                                                            // 25\n      subTitle: options.subTitle,                                                                                      // 26\n      buttons: this.buttons,                                                                                           // 27\n      template: innerTemplate                                                                                          // 28\n    };                                                                                                                 // 29\n                                                                                                                       // 30\n    this.view = Blaze.renderWithData(this.template, data, $('.ionic-body').get(0));                                    // 31\n    $('body').addClass('popup-open');                                                                                  // 32\n                                                                                                                       // 33\n    var $backdrop = $(this.view.firstNode());                                                                          // 34\n    $backdrop.addClass('visible active');                                                                              // 35\n    var $popup = $backdrop.find('.popup-container');                                                                   // 36\n    $popup.addClass('popup-showing active');                                                                           // 37\n  },                                                                                                                   // 38\n                                                                                                                       // 39\n  alert: function (options) {                                                                                          // 40\n    IonPopup.show({                                                                                                    // 41\n      title: options.title,                                                                                            // 42\n      subTitle: options.subTitle,                                                                                      // 43\n      template: options.template,                                                                                      // 44\n      templateName: options.templateName,                                                                              // 45\n      buttons: [                                                                                                       // 46\n        {                                                                                                              // 47\n          text: options.okText ? options.okText : 'Ok',                                                                // 48\n          type: options.okType ? options.okType : 'button-positive',                                                   // 49\n          onTap: function(event, template) {                                                                           // 50\n            if (options.onOk) options.onOk(event, template);                                                           // 51\n            return true;                                                                                               // 52\n          }                                                                                                            // 53\n        }                                                                                                              // 54\n      ]                                                                                                                // 55\n    });                                                                                                                // 56\n  },                                                                                                                   // 57\n                                                                                                                       // 58\n  confirm: function (options) {                                                                                        // 59\n    IonPopup.show({                                                                                                    // 60\n      title: options.title,                                                                                            // 61\n      subTitle: options.subTitle,                                                                                      // 62\n      template: options.template,                                                                                      // 63\n      templateName: options.templateName,                                                                              // 64\n      buttons: [                                                                                                       // 65\n        {                                                                                                              // 66\n          text: options.cancelText ? options.cancelText : 'Cancel',                                                    // 67\n          type: options.cancelType ? options.cancelType : 'button-default',                                            // 68\n          onTap: function (event, template) {                                                                          // 69\n            if (options.onCancel) options.onCancel(event, template);                                                   // 70\n            return true;                                                                                               // 71\n          }                                                                                                            // 72\n        },                                                                                                             // 73\n        {                                                                                                              // 74\n          text: options.okText ? options.okText : 'Ok',                                                                // 75\n          type: options.okType ? options.okType : 'button-positive',                                                   // 76\n          onTap: function (event, template) {                                                                          // 77\n            if (options.onOk) options.onOk(event, template);                                                           // 78\n            return true;                                                                                               // 79\n          }                                                                                                            // 80\n        }                                                                                                              // 81\n      ]                                                                                                                // 82\n    });                                                                                                                // 83\n  },                                                                                                                   // 84\n                                                                                                                       // 85\n  prompt: function (options) {                                                                                         // 86\n                                                                                                                       // 87\n    var template = '';                                                                                                 // 88\n    if (options.templateName) {                                                                                        // 89\n      template = Template[options.templateName].renderFunction().value;                                                // 90\n    } else if (options.template) {                                                                                     // 91\n      template = '<span class=\"popup-prompt-text\">' + options.template + '</span>';                                    // 92\n    }                                                                                                                  // 93\n                                                                                                                       // 94\n    options.inputType = options.inputType || 'text';                                                                   // 95\n    options.inputPlaceholder = options.inputPlaceholder || '';                                                         // 96\n    template += '<input type=\"' + options.inputType + '\" placeholder=\"' +                                              // 97\n      options.inputPlaceholder + '\" name=\"prompt\" >';                                                                  // 98\n                                                                                                                       // 99\n    IonPopup.show({                                                                                                    // 100\n      title: options.title,                                                                                            // 101\n      subTitle: options.subTitle,                                                                                      // 102\n      template: template,                                                                                              // 103\n      buttons: [                                                                                                       // 104\n        {                                                                                                              // 105\n          text: options.cancelText ? options.cancelText : 'Cancel',                                                    // 106\n          type: options.cancelType ? options.cancelType : 'button-default',                                            // 107\n          onTap: function (event, template) {                                                                          // 108\n            if (options.onCancel) options.onCancel(event, template);                                                   // 109\n            return true;                                                                                               // 110\n          }                                                                                                            // 111\n        },                                                                                                             // 112\n        {                                                                                                              // 113\n          text: options.okText ? options.okText : 'Ok',                                                                // 114\n          type: options.okType ? options.okType : 'button-positive',                                                   // 115\n          onTap: function (event, template) {                                                                          // 116\n            var inputVal = $(template.firstNode).find('[name=prompt]').val();                                          // 117\n            if (options.onOk) options.onOk(event, inputVal);                                                           // 118\n            return true;                                                                                               // 119\n          }                                                                                                            // 120\n        }                                                                                                              // 121\n      ]                                                                                                                // 122\n    });                                                                                                                // 123\n  },                                                                                                                   // 124\n                                                                                                                       // 125\n  close: function () {                                                                                                 // 126\n    var $popup = this._domrange ? $(this.view.firstNode()).find('.popup-container') : $('.popup-container');           // 127\n    $popup.addClass('popup-hidden').removeClass('active');                                                             // 128\n                                                                                                                       // 129\n    setTimeout(function () {                                                                                           // 130\n      $('body').removeClass('popup-open');                                                                             // 131\n      $('.backdrop').remove();                                                                                         // 132\n      Blaze.remove(this.view);                                                                                         // 133\n    }.bind(this), 100);                                                                                                // 134\n  },                                                                                                                   // 135\n                                                                                                                       // 136\n  buttonClicked: function (index, event, template) {                                                                   // 137\n    var callback = this.buttons[index].onTap;                                                                          // 138\n    if(callback){                                                                                                      // 139\n      if (callback(event, template) === true) {                                                                        // 140\n        IonPopup.close();                                                                                              // 141\n      }                                                                                                                // 142\n    }                                                                                                                  // 143\n  }                                                                                                                    // 144\n};                                                                                                                     // 145\n                                                                                                                       // 146\nTemplate.ionPopup.rendered = function () {                                                                             // 147\n  $(window).on('keyup.ionPopup', function(event) {                                                                     // 148\n    if (event.which == 27) {                                                                                           // 149\n      IonPopup.close();                                                                                                // 150\n    }                                                                                                                  // 151\n  });                                                                                                                  // 152\n};                                                                                                                     // 153\n                                                                                                                       // 154\nTemplate.ionPopup.destroyed = function () {                                                                            // 155\n  $(window).off('keyup.ionPopup');                                                                                     // 156\n};                                                                                                                     // 157\n                                                                                                                       // 158\nTemplate.ionPopup.events({                                                                                             // 159\n  // Handle clicking the backdrop                                                                                      // 160\n  'click': function (event, template) {                                                                                // 161\n    if ($(event.target).hasClass('popup-container')) {                                                                 // 162\n      IonPopup.close();                                                                                                // 163\n    }                                                                                                                  // 164\n  },                                                                                                                   // 165\n                                                                                                                       // 166\n  'click [data-index]': function (event, template) {                                                                   // 167\n    var index = $(event.target).data('index');                                                                         // 168\n    IonPopup.buttonClicked(index, event, template);                                                                    // 169\n  }                                                                                                                    // 170\n                                                                                                                       // 171\n});                                                                                                                    // 172\n                                                                                                                       // 173\nTemplate.ionPopup.helpers({                                                                                            // 174\n  hasHead: function() {                                                                                                // 175\n    return this.title || this.subTitle;                                                                                // 176\n  }                                                                                                                    // 177\n});                                                                                                                    // 178\n                                                                                                                       // 179\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionRadio/template.ionRadio.js                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionRadio\");                                                                                      // 2\nTemplate[\"ionRadio\"] = new Template(\"Template.ionRadio\", (function() {                                                 // 3\n  var view = this;                                                                                                     // 4\n  return HTML.LABEL({                                                                                                  // 5\n    \"class\": \"item item-radio\"                                                                                         // 6\n  }, \"\\n    \", HTML.INPUT(HTML.Attrs(function() {                                                                      // 7\n    return Spacebars.attrMustache(view.lookup(\"inputAttrs\"));                                                          // 8\n  })), \"\\n    \", HTML.DIV({                                                                                            // 9\n    \"class\": \"item-content disable-pointer-events\"                                                                     // 10\n  }, \"\\n      \", Blaze._InOuterTemplateScope(view, function() {                                                        // 11\n    return Spacebars.include(function() {                                                                              // 12\n      return Spacebars.call(view.templateContentBlock);                                                                // 13\n    });                                                                                                                // 14\n  }), \"\\n    \"), HTML.Raw('\\n    <i class=\"radio-icon disable-pointer-events icon ion-checkmark\"></i>\\n  '));          // 15\n}));                                                                                                                   // 16\n                                                                                                                       // 17\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionRadio/ionRadio.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.ionRadio.helpers({                                                                                            // 1\n  inputAttrs: function () {                                                                                            // 2\n    var attrs = {                                                                                                      // 3\n      type: 'radio'                                                                                                    // 4\n    };                                                                                                                 // 5\n                                                                                                                       // 6\n    if (this.name) {                                                                                                   // 7\n      attrs.name = this.name;                                                                                          // 8\n    } else {                                                                                                           // 9\n      attrs.name = 'radio-group';                                                                                      // 10\n    }                                                                                                                  // 11\n                                                                                                                       // 12\n    if (this.value) {                                                                                                  // 13\n      attrs.value = this.value;                                                                                        // 14\n    } else {                                                                                                           // 15\n      attrs.value = '';                                                                                                // 16\n    }                                                                                                                  // 17\n                                                                                                                       // 18\n    if (this.disabled) {                                                                                               // 19\n      attrs.disabled = true;                                                                                           // 20\n    }                                                                                                                  // 21\n                                                                                                                       // 22\n    if (this.checked) {                                                                                                // 23\n      attrs.checked = true;                                                                                            // 24\n    }                                                                                                                  // 25\n                                                                                                                       // 26\n    return attrs;                                                                                                      // 27\n  }                                                                                                                    // 28\n})                                                                                                                     // 29\n                                                                                                                       // 30\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionSideMenu/template.ionSideMenu.js                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionSideMenu\");                                                                                   // 2\nTemplate[\"ionSideMenu\"] = new Template(\"Template.ionSideMenu\", (function() {                                           // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": function() {                                                                                              // 6\n      return Spacebars.mustache(view.lookup(\"classes\"));                                                               // 7\n    }                                                                                                                  // 8\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {                                                          // 9\n    return Spacebars.include(function() {                                                                              // 10\n      return Spacebars.call(view.templateContentBlock);                                                                // 11\n    });                                                                                                                // 12\n  }), \"\\n  \");                                                                                                         // 13\n}));                                                                                                                   // 14\n                                                                                                                       // 15\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionSideMenu/ionSideMenu.js                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.ionSideMenu.helpers({                                                                                         // 1\n  classes: function () {                                                                                               // 2\n    var classes = ['snap-drawer'];                                                                                     // 3\n                                                                                                                       // 4\n    if (this.side) {                                                                                                   // 5\n      classes.push('menu-' + this.side);                                                                               // 6\n      classes.push('snap-drawer-' + this.side);                                                                        // 7\n    } else {                                                                                                           // 8\n      classes.push('menu-left');                                                                                       // 9\n      classes.push('snap-drawer-left');                                                                                // 10\n    }                                                                                                                  // 11\n                                                                                                                       // 12\n    return classes.join(' ');                                                                                          // 13\n  }                                                                                                                    // 14\n});                                                                                                                    // 15\n                                                                                                                       // 16\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionSideMenuContainer/template.ionSideMenuContainer.js                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionSideMenuContainer\");                                                                          // 2\nTemplate[\"ionSideMenuContainer\"] = new Template(\"Template.ionSideMenuContainer\", (function() {                         // 3\n  var view = this;                                                                                                     // 4\n  return Blaze._InOuterTemplateScope(view, function() {                                                                // 5\n    return Spacebars.include(function() {                                                                              // 6\n      return Spacebars.call(view.templateContentBlock);                                                                // 7\n    });                                                                                                                // 8\n  });                                                                                                                  // 9\n}));                                                                                                                   // 10\n                                                                                                                       // 11\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionSideMenuContainer/ionSideMenuContainer.js                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nIonSideMenu = {                                                                                                        // 1\n  snapper: null                                                                                                        // 2\n};                                                                                                                     // 3\n                                                                                                                       // 4\nTemplate.ionSideMenuContainer.created = function () {                                                                  // 5\n  this.data = this.data || {};                                                                                         // 6\n  this.side = this.data.side || 'both';                                                                                // 7\n  this.dragContent = true;                                                                                             // 8\n  if (typeof this.data.dragContent != 'undefined') {                                                                   // 9\n    this.dragContent = this.data.dragContent                                                                           // 10\n  }                                                                                                                    // 11\n};                                                                                                                     // 12\n                                                                                                                       // 13\nTemplate.ionSideMenuContainer.rendered = function () {                                                                 // 14\n  $snapperEl = this.$('.snap-content');                                                                                // 15\n  if (!$snapperEl) {                                                                                                   // 16\n    return;                                                                                                            // 17\n  }                                                                                                                    // 18\n                                                                                                                       // 19\n  var disable;                                                                                                         // 20\n  if (this.side == 'both') {                                                                                           // 21\n    disable = 'none';                                                                                                  // 22\n  }                                                                                                                    // 23\n  if (this.side == 'left') {                                                                                           // 24\n    disable = 'right';                                                                                                 // 25\n  }                                                                                                                    // 26\n  if (this.side == 'right') {                                                                                          // 27\n    disable = 'left';                                                                                                  // 28\n  }                                                                                                                    // 29\n                                                                                                                       // 30\n  IonSideMenu.snapper = new Snap({                                                                                     // 31\n    element: $snapperEl.get(0),                                                                                        // 32\n    disable: disable,                                                                                                  // 33\n    touchToDrag: this.dragContent                                                                                      // 34\n  });                                                                                                                  // 35\n};                                                                                                                     // 36\n                                                                                                                       // 37\nTemplate.ionSideMenuContainer.destroyed = function () {                                                                // 38\n  IonSideMenu.snapper = null;                                                                                          // 39\n};                                                                                                                     // 40\n                                                                                                                       // 41\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionSideMenuContent/template.ionSideMenuContent.js                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionSideMenuContent\");                                                                            // 2\nTemplate[\"ionSideMenuContent\"] = new Template(\"Template.ionSideMenuContent\", (function() {                             // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": function() {                                                                                              // 6\n      return Spacebars.mustache(view.lookup(\"classes\"));                                                               // 7\n    }                                                                                                                  // 8\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {                                                          // 9\n    return Spacebars.include(function() {                                                                              // 10\n      return Spacebars.call(view.templateContentBlock);                                                                // 11\n    });                                                                                                                // 12\n  }), \"\\n  \");                                                                                                         // 13\n}));                                                                                                                   // 14\n                                                                                                                       // 15\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionSideMenuContent/ionSideMenuContent.js                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.ionSideMenuContent.helpers({                                                                                  // 1\n  classes: function () {                                                                                               // 2\n    var classes = ['menu-content', 'snap-content', 'pane'];                                                            // 3\n    return classes.join(' ');                                                                                          // 4\n  }                                                                                                                    // 5\n});                                                                                                                    // 6\n                                                                                                                       // 7\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionSideMenus/template.ionSideMenus.js                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionSideMenus\");                                                                                  // 2\nTemplate[\"ionSideMenus\"] = new Template(\"Template.ionSideMenus\", (function() {                                         // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": function() {                                                                                              // 6\n      return Spacebars.mustache(view.lookup(\"classes\"));                                                               // 7\n    }                                                                                                                  // 8\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {                                                          // 9\n    return Spacebars.include(function() {                                                                              // 10\n      return Spacebars.call(view.templateContentBlock);                                                                // 11\n    });                                                                                                                // 12\n  }), \"\\n  \");                                                                                                         // 13\n}));                                                                                                                   // 14\n                                                                                                                       // 15\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionSideMenus/ionSideMenus.js                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.ionSideMenus.helpers({                                                                                        // 1\n  classes: function () {                                                                                               // 2\n    var classes = ['view', 'snap-drawers'];                                                                            // 3\n    return classes.join(' ');                                                                                          // 4\n  }                                                                                                                    // 5\n});                                                                                                                    // 6\n                                                                                                                       // 7\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionSlideBox/template.ionSlideBox.js                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionSlideBox\");                                                                                   // 2\nTemplate[\"ionSlideBox\"] = new Template(\"Template.ionSlideBox\", (function() {                                           // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": \"ion-slide-box\"                                                                                           // 6\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {                                                          // 7\n    return Spacebars.include(function() {                                                                              // 8\n      return Spacebars.call(view.templateContentBlock);                                                                // 9\n    });                                                                                                                // 10\n  }), \"\\n  \");                                                                                                         // 11\n}));                                                                                                                   // 12\n                                                                                                                       // 13\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionSlideBox/ionSlideBox.js                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.ionSlideBox.created = function () {                                                                           // 1\n  this.data = this.data || {};                                                                                         // 2\n  this.doesContinue = this.data.doesContinue || false;                                                                 // 3\n  this.autoPlay = this.data.autoPlay || false;                                                                         // 4\n  this.slideInterval = this.data.slideInterval || 4000;                                                                // 5\n  this.showPager = typeof this.data.showPager != 'undefined' ? this.data.showPager : true;                             // 6\n  this.initialSlide = this.data.initialSlide || Session.get('ion-slide-initial-slide') || 0;                           // 7\n};                                                                                                                     // 8\n                                                                                                                       // 9\nTemplate.ionSlideBox.rendered = function () {                                                                          // 10\n  this.$('.ion-slide-box').slick({                                                                                     // 11\n    infinite: this.doesContinue,                                                                                       // 12\n    autoplay: this.autoPlay,                                                                                           // 13\n    autoplaySpeed: this.slideInterval,                                                                                 // 14\n    arrows: false,                                                                                                     // 15\n    dots: this.showPager,                                                                                              // 16\n    dotsClass: 'slider-pager',                                                                                         // 17\n    initialSlide: this.initialSlide,                                                                                   // 18\n    customPaging: function(slider, i) {                                                                                // 19\n      return '<span class=\"slider-pager-page icon ion-record\"></span>';                                                // 20\n    }                                                                                                                  // 21\n  });                                                                                                                  // 22\n  this.$('.ion-slide-box').on('afterChange', function (event, slick, currentSlide) {                                   // 23\n    $(this).trigger({type: 'onSlideChanged', index: currentSlide});                                                    // 24\n  });                                                                                                                  // 25\n};                                                                                                                     // 26\n                                                                                                                       // 27\nTemplate.ionSlideBox.destroyed = function () {                                                                         // 28\n  var $slideBox = this.$('.ion-slide-box');                                                                            // 29\n  if ($slideBox.hasClass('slick-initialized')) $slideBox.slick('unslick');                                             // 30\n};                                                                                                                     // 31\n                                                                                                                       // 32\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionSpinner/template.ionSpinner.js                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionSpinner\");                                                                                    // 2\nTemplate[\"ionSpinner\"] = new Template(\"Template.ionSpinner\", (function() {                                             // 3\n  var view = this;                                                                                                     // 4\n  return HTML.I({                                                                                                      // 5\n    \"class\": function() {                                                                                              // 6\n      return [ \"spinner \", Spacebars.mustache(view.lookup(\"classes\")), \" \", Spacebars.mustache(view.lookup(\"icon\")) ];\n    }                                                                                                                  // 8\n  });                                                                                                                  // 9\n}));                                                                                                                   // 10\n                                                                                                                       // 11\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionSpinner/ionSpinner.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.ionSpinner.helpers({                                                                                          // 2\n  classes: function() {                                                                                                // 3\n    classes = [];                                                                                                      // 4\n    if (this.class) {                                                                                                  // 5\n      var customClasses = this.class.split(' ');                                                                       // 6\n      _(customClasses).each(function(customClass) {                                                                    // 7\n        classes.push(customClass);                                                                                     // 8\n      });                                                                                                              // 9\n    }                                                                                                                  // 10\n    return classes.join(' ');                                                                                          // 11\n  },                                                                                                                   // 12\n                                                                                                                       // 13\n  icon: function() {                                                                                                   // 14\n   iconName = \"spinner-\" + (this.icon || 'ios');                                                                       // 15\n                                                                                                                       // 16\n   return iconName;                                                                                                    // 17\n  }                                                                                                                    // 18\n});                                                                                                                    // 19\n                                                                                                                       // 20\n// the relevant code for getting the spinner element and assigning the                                                 // 21\n// spinner names is in the init function at the bottom of this file.                                                   // 22\n// Almost all of the rest of the code is from the ionic version.                                                       // 23\n                                                                                                                       // 24\nTemplate.ionSpinner.rendered = function() {                                                                            // 25\n                                                                                                                       // 26\n                                                                                                                       // 27\n  var TRANSLATE32 = 'translate(32,32)';                                                                                // 28\n  var STROKE_OPACITY = 'stroke-opacity';                                                                               // 29\n  var ROUND = 'round';                                                                                                 // 30\n  var INDEFINITE = 'indefinite';                                                                                       // 31\n  var DURATION = '750ms';                                                                                              // 32\n  var NONE = 'none';                                                                                                   // 33\n  var SHORTCUTS = {                                                                                                    // 34\n    a: 'animate',                                                                                                      // 35\n    an: 'attributeName',                                                                                               // 36\n    at: 'animateTransform',                                                                                            // 37\n    c: 'circle',                                                                                                       // 38\n    da: 'stroke-dasharray',                                                                                            // 39\n    os: 'stroke-dashoffset',                                                                                           // 40\n    f: 'fill',                                                                                                         // 41\n    lc: 'stroke-linecap',                                                                                              // 42\n    rc: 'repeatCount',                                                                                                 // 43\n    sw: 'stroke-width',                                                                                                // 44\n    t: 'transform',                                                                                                    // 45\n    v: 'values'                                                                                                        // 46\n  };                                                                                                                   // 47\n                                                                                                                       // 48\n  var SPIN_ANIMATION = {                                                                                               // 49\n    v: '0,32,32;360,32,32',                                                                                            // 50\n    an: 'transform',                                                                                                   // 51\n    type: 'rotate',                                                                                                    // 52\n    rc: INDEFINITE,                                                                                                    // 53\n    dur: DURATION                                                                                                      // 54\n  };                                                                                                                   // 55\n                                                                                                                       // 56\n  //get icon name and element from blaze template                                                                      // 57\n                                                                                                                       // 58\n  var iconElement = this.firstNode;                                                                                    // 59\n  this.data = this.data || {};                                                                                         // 60\n  iconName = this.data.icon || 'ios';                                                                                  // 61\n                                                                                                                       // 62\n                                                                                                                       // 63\n  function createSvgElement(tagName, data, parent, spinnerName) {                                                      // 64\n    var ele = document.createElement(SHORTCUTS[tagName] || tagName);                                                   // 65\n    var k, x, y;                                                                                                       // 66\n    for (k in data) {                                                                                                  // 67\n                                                                                                                       // 68\n      if (Array.isArray(data[k])) {                                                                                    // 69\n        for (x = 0; x < data[k].length; x++) {                                                                         // 70\n          if (data[k][x].fn) {                                                                                         // 71\n            for (y = 0; y < data[k][x].t; y++) {                                                                       // 72\n              createSvgElement(k, data[k][x].fn(y, spinnerName), ele, spinnerName);                                    // 73\n            }                                                                                                          // 74\n          } else {                                                                                                     // 75\n            createSvgElement(k, data[k][x], ele, spinnerName);                                                         // 76\n          }                                                                                                            // 77\n        }                                                                                                              // 78\n                                                                                                                       // 79\n      } else {                                                                                                         // 80\n        setSvgAttribute(ele, k, data[k]);                                                                              // 81\n      }                                                                                                                // 82\n    }                                                                                                                  // 83\n                                                                                                                       // 84\n    parent.appendChild(ele);                                                                                           // 85\n  }                                                                                                                    // 86\n                                                                                                                       // 87\n  function setSvgAttribute(ele, k, v) {                                                                                // 88\n    ele.setAttribute(SHORTCUTS[k] || k, v);                                                                            // 89\n  }                                                                                                                    // 90\n                                                                                                                       // 91\n  function animationValues(strValues, i) {                                                                             // 92\n    var values = strValues.split(';');                                                                                 // 93\n    var back = values.slice(i);                                                                                        // 94\n    var front = values.slice(0, values.length - back.length);                                                          // 95\n    values = back.concat(front).reverse();                                                                             // 96\n    return values.join(';') + ';' + values[0];                                                                         // 97\n  }                                                                                                                    // 98\n                                                                                                                       // 99\n  var IOS_SPINNER = {                                                                                                  // 100\n    sw: 4,                                                                                                             // 101\n    lc: ROUND,                                                                                                         // 102\n    line: [{                                                                                                           // 103\n      fn: function(i, spinnerName) {                                                                                   // 104\n        return {                                                                                                       // 105\n          y1: spinnerName == 'ios' ? 17 : 12,                                                                          // 106\n          y2: spinnerName == 'ios' ? 29 : 20,                                                                          // 107\n          t: TRANSLATE32 + ' rotate(' + (30 * i + (i < 6 ? 180 : -180)) + ')',                                         // 108\n          a: [{                                                                                                        // 109\n            fn: function() {                                                                                           // 110\n              return {                                                                                                 // 111\n                an: STROKE_OPACITY,                                                                                    // 112\n                dur: DURATION,                                                                                         // 113\n                v: animationValues('0;.1;.15;.25;.35;.45;.55;.65;.7;.85;1', i),                                        // 114\n                rc: INDEFINITE                                                                                         // 115\n              };                                                                                                       // 116\n            },                                                                                                         // 117\n            t: 1                                                                                                       // 118\n          }]                                                                                                           // 119\n        };                                                                                                             // 120\n      },                                                                                                               // 121\n      t: 12                                                                                                            // 122\n    }]                                                                                                                 // 123\n  };                                                                                                                   // 124\n                                                                                                                       // 125\n  var spinners = {                                                                                                     // 126\n                                                                                                                       // 127\n    android: {                                                                                                         // 128\n      c: [{                                                                                                            // 129\n        sw: 6,                                                                                                         // 130\n        da: 128,                                                                                                       // 131\n        os: 82,                                                                                                        // 132\n        r: 26,                                                                                                         // 133\n        cx: 32,                                                                                                        // 134\n        cy: 32,                                                                                                        // 135\n        f: NONE                                                                                                        // 136\n      }]                                                                                                               // 137\n    },                                                                                                                 // 138\n                                                                                                                       // 139\n    ios: IOS_SPINNER,                                                                                                  // 140\n                                                                                                                       // 141\n    'ios-small': IOS_SPINNER,                                                                                          // 142\n                                                                                                                       // 143\n    bubbles: {                                                                                                         // 144\n      sw: 0,                                                                                                           // 145\n      c: [{                                                                                                            // 146\n        fn: function(i) {                                                                                              // 147\n          return {                                                                                                     // 148\n            cx: 24 * Math.cos(2 * Math.PI * i / 8),                                                                    // 149\n            cy: 24 * Math.sin(2 * Math.PI * i / 8),                                                                    // 150\n            t: TRANSLATE32,                                                                                            // 151\n            a: [{                                                                                                      // 152\n              fn: function() {                                                                                         // 153\n                return {                                                                                               // 154\n                  an: 'r',                                                                                             // 155\n                  dur: DURATION,                                                                                       // 156\n                  v: animationValues('1;2;3;4;5;6;7;8', i),                                                            // 157\n                  rc: INDEFINITE                                                                                       // 158\n                };                                                                                                     // 159\n              },                                                                                                       // 160\n              t: 1                                                                                                     // 161\n            }]                                                                                                         // 162\n          };                                                                                                           // 163\n        },                                                                                                             // 164\n        t: 8                                                                                                           // 165\n      }]                                                                                                               // 166\n    },                                                                                                                 // 167\n                                                                                                                       // 168\n    circles: {                                                                                                         // 169\n                                                                                                                       // 170\n      c: [{                                                                                                            // 171\n        fn: function(i) {                                                                                              // 172\n          return {                                                                                                     // 173\n            r: 5,                                                                                                      // 174\n            cx: 24 * Math.cos(2 * Math.PI * i / 8),                                                                    // 175\n            cy: 24 * Math.sin(2 * Math.PI * i / 8),                                                                    // 176\n            t: TRANSLATE32,                                                                                            // 177\n            sw: 0,                                                                                                     // 178\n            a: [{                                                                                                      // 179\n              fn: function() {                                                                                         // 180\n                return {                                                                                               // 181\n                  an: 'fill-opacity',                                                                                  // 182\n                  dur: DURATION,                                                                                       // 183\n                  v: animationValues('.3;.3;.3;.4;.7;.85;.9;1', i),                                                    // 184\n                  rc: INDEFINITE                                                                                       // 185\n                };                                                                                                     // 186\n              },                                                                                                       // 187\n              t: 1                                                                                                     // 188\n            }]                                                                                                         // 189\n          };                                                                                                           // 190\n        },                                                                                                             // 191\n        t: 8                                                                                                           // 192\n      }]                                                                                                               // 193\n    },                                                                                                                 // 194\n                                                                                                                       // 195\n    crescent: {                                                                                                        // 196\n      c: [{                                                                                                            // 197\n        sw: 4,                                                                                                         // 198\n        da: 128,                                                                                                       // 199\n        os: 82,                                                                                                        // 200\n        r: 26,                                                                                                         // 201\n        cx: 32,                                                                                                        // 202\n        cy: 32,                                                                                                        // 203\n        f: NONE,                                                                                                       // 204\n        at: [SPIN_ANIMATION]                                                                                           // 205\n      }]                                                                                                               // 206\n    },                                                                                                                 // 207\n                                                                                                                       // 208\n    dots: {                                                                                                            // 209\n                                                                                                                       // 210\n      c: [{                                                                                                            // 211\n        fn: function(i) {                                                                                              // 212\n          return {                                                                                                     // 213\n            cx: 16 + (16 * i),                                                                                         // 214\n            cy: 32,                                                                                                    // 215\n            sw: 0,                                                                                                     // 216\n            a: [{                                                                                                      // 217\n              fn: function() {                                                                                         // 218\n                return {                                                                                               // 219\n                  an: 'fill-opacity',                                                                                  // 220\n                  dur: DURATION,                                                                                       // 221\n                  v: animationValues('.5;.6;.8;1;.8;.6;.5', i),                                                        // 222\n                  rc: INDEFINITE                                                                                       // 223\n                };                                                                                                     // 224\n              },                                                                                                       // 225\n              t: 1                                                                                                     // 226\n            }, {                                                                                                       // 227\n              fn: function() {                                                                                         // 228\n                return {                                                                                               // 229\n                  an: 'r',                                                                                             // 230\n                  dur: DURATION,                                                                                       // 231\n                  v: animationValues('4;5;6;5;4;3;3', i),                                                              // 232\n                  rc: INDEFINITE                                                                                       // 233\n                };                                                                                                     // 234\n              },                                                                                                       // 235\n              t: 1                                                                                                     // 236\n            }]                                                                                                         // 237\n          };                                                                                                           // 238\n        },                                                                                                             // 239\n        t: 3                                                                                                           // 240\n      }]                                                                                                               // 241\n    },                                                                                                                 // 242\n                                                                                                                       // 243\n    lines: {                                                                                                           // 244\n      sw: 7,                                                                                                           // 245\n      lc: ROUND,                                                                                                       // 246\n      line: [{                                                                                                         // 247\n        fn: function(i) {                                                                                              // 248\n          return {                                                                                                     // 249\n            x1: 10 + (i * 14),                                                                                         // 250\n            x2: 10 + (i * 14),                                                                                         // 251\n            a: [{                                                                                                      // 252\n              fn: function() {                                                                                         // 253\n                return {                                                                                               // 254\n                  an: 'y1',                                                                                            // 255\n                  dur: DURATION,                                                                                       // 256\n                  v: animationValues('16;18;28;18;16', i),                                                             // 257\n                  rc: INDEFINITE                                                                                       // 258\n                };                                                                                                     // 259\n              },                                                                                                       // 260\n              t: 1                                                                                                     // 261\n            }, {                                                                                                       // 262\n              fn: function() {                                                                                         // 263\n                return {                                                                                               // 264\n                  an: 'y2',                                                                                            // 265\n                  dur: DURATION,                                                                                       // 266\n                  v: animationValues('48;44;36;46;48', i),                                                             // 267\n                  rc: INDEFINITE                                                                                       // 268\n                };                                                                                                     // 269\n              },                                                                                                       // 270\n              t: 1                                                                                                     // 271\n            }, {                                                                                                       // 272\n              fn: function() {                                                                                         // 273\n                return {                                                                                               // 274\n                  an: STROKE_OPACITY,                                                                                  // 275\n                  dur: DURATION,                                                                                       // 276\n                  v: animationValues('1;.8;.5;.4;1', i),                                                               // 277\n                  rc: INDEFINITE                                                                                       // 278\n                };                                                                                                     // 279\n              },                                                                                                       // 280\n              t: 1                                                                                                     // 281\n            }]                                                                                                         // 282\n          };                                                                                                           // 283\n        },                                                                                                             // 284\n        t: 4                                                                                                           // 285\n      }]                                                                                                               // 286\n    },                                                                                                                 // 287\n                                                                                                                       // 288\n    ripple: {                                                                                                          // 289\n      f: NONE,                                                                                                         // 290\n      'fill-rule': 'evenodd',                                                                                          // 291\n      sw: 3,                                                                                                           // 292\n      circle: [{                                                                                                       // 293\n        fn: function(i) {                                                                                              // 294\n          return {                                                                                                     // 295\n            cx: 32,                                                                                                    // 296\n            cy: 32,                                                                                                    // 297\n            a: [{                                                                                                      // 298\n              fn: function() {                                                                                         // 299\n                return {                                                                                               // 300\n                  an: 'r',                                                                                             // 301\n                  begin: (i * -1) + 's',                                                                               // 302\n                  dur: '2s',                                                                                           // 303\n                  v: '0;24',                                                                                           // 304\n                  keyTimes: '0;1',                                                                                     // 305\n                  keySplines: '0.1,0.2,0.3,1',                                                                         // 306\n                  calcMode: 'spline',                                                                                  // 307\n                  rc: INDEFINITE                                                                                       // 308\n                };                                                                                                     // 309\n              },                                                                                                       // 310\n              t: 1                                                                                                     // 311\n            }, {                                                                                                       // 312\n              fn: function() {                                                                                         // 313\n                return {                                                                                               // 314\n                  an: STROKE_OPACITY,                                                                                  // 315\n                  begin: (i * -1) + 's',                                                                               // 316\n                  dur: '2s',                                                                                           // 317\n                  v: '.2;1;.2;0',                                                                                      // 318\n                  rc: INDEFINITE                                                                                       // 319\n                };                                                                                                     // 320\n              },                                                                                                       // 321\n              t: 1                                                                                                     // 322\n            }]                                                                                                         // 323\n          };                                                                                                           // 324\n        },                                                                                                             // 325\n        t: 2                                                                                                           // 326\n      }]                                                                                                               // 327\n    },                                                                                                                 // 328\n                                                                                                                       // 329\n    spiral: {                                                                                                          // 330\n      defs: [{                                                                                                         // 331\n        linearGradient: [{                                                                                             // 332\n          id: 'sGD',                                                                                                   // 333\n          gradientUnits: 'userSpaceOnUse',                                                                             // 334\n          x1: 55,                                                                                                      // 335\n          y1: 46,                                                                                                      // 336\n          x2: 2,                                                                                                       // 337\n          y2: 46,                                                                                                      // 338\n          stop: [{                                                                                                     // 339\n            offset: 0.1,                                                                                               // 340\n            class: 'stop1'                                                                                             // 341\n          }, {                                                                                                         // 342\n            offset: 1,                                                                                                 // 343\n            class: 'stop2'                                                                                             // 344\n          }]                                                                                                           // 345\n        }]                                                                                                             // 346\n      }],                                                                                                              // 347\n      g: [{                                                                                                            // 348\n        sw: 4,                                                                                                         // 349\n        lc: ROUND,                                                                                                     // 350\n        f: NONE,                                                                                                       // 351\n        path: [{                                                                                                       // 352\n          stroke: 'url(#sGD)',                                                                                         // 353\n          d: 'M4,32 c0,15,12,28,28,28c8,0,16-4,21-9'                                                                   // 354\n        }, {                                                                                                           // 355\n          d: 'M60,32 C60,16,47.464,4,32,4S4,16,4,32'                                                                   // 356\n        }],                                                                                                            // 357\n        at: [SPIN_ANIMATION]                                                                                           // 358\n      }]                                                                                                               // 359\n    }                                                                                                                  // 360\n                                                                                                                       // 361\n  };                                                                                                                   // 362\n                                                                                                                       // 363\n  var animations = {                                                                                                   // 364\n                                                                                                                       // 365\n    android: function(ele) {                                                                                           // 366\n                                                                                                                       // 367\n      var rIndex = 0;                                                                                                  // 368\n      var rotateCircle = 0;                                                                                            // 369\n      var startTime;                                                                                                   // 370\n      var svgEle = ele.querySelector('g');                                                                             // 371\n      var circleEle = ele.querySelector('circle');                                                                     // 372\n                                                                                                                       // 373\n      function run() {                                                                                                 // 374\n        var v = easeInOutCubic(Date.now() - startTime, 650);                                                           // 375\n        var scaleX = 1;                                                                                                // 376\n        var translateX = 0;                                                                                            // 377\n        var dasharray = (188 - (58 * v));                                                                              // 378\n        var dashoffset = (182 - (182 * v));                                                                            // 379\n                                                                                                                       // 380\n        if (rIndex % 2) {                                                                                              // 381\n          scaleX = -1;                                                                                                 // 382\n          translateX = -64;                                                                                            // 383\n          dasharray = (128 - (-58 * v));                                                                               // 384\n          dashoffset = (182 * v);                                                                                      // 385\n        }                                                                                                              // 386\n                                                                                                                       // 387\n        var rotateLine = [0, -101, -90, -11, -180, 79, -270, -191][rIndex];                                            // 388\n                                                                                                                       // 389\n        setSvgAttribute(circleEle, 'da', Math.max(Math.min(dasharray, 188), 128));                                     // 390\n        setSvgAttribute(circleEle, 'os', Math.max(Math.min(dashoffset, 182), 0));                                      // 391\n        setSvgAttribute(circleEle, 't', 'scale(' + scaleX + ',1) translate(' + translateX + ',0) rotate(' + rotateLine + ',32,32)');\n                                                                                                                       // 393\n        rotateCircle += 4.1;                                                                                           // 394\n        if (rotateCircle > 359) rotateCircle = 0;                                                                      // 395\n        setSvgAttribute(svgEle, 't', 'rotate(' + rotateCircle + ',32,32)');                                            // 396\n                                                                                                                       // 397\n        if (v >= 1) {                                                                                                  // 398\n          rIndex++;                                                                                                    // 399\n          if (rIndex > 7) rIndex = 0;                                                                                  // 400\n          startTime = Date.now();                                                                                      // 401\n        }                                                                                                              // 402\n                                                                                                                       // 403\n        window.requestAnimationFrame(run);                                                                             // 404\n      }                                                                                                                // 405\n                                                                                                                       // 406\n      return function() {                                                                                              // 407\n        startTime = Date.now();                                                                                        // 408\n        run();                                                                                                         // 409\n      };                                                                                                               // 410\n                                                                                                                       // 411\n    }                                                                                                                  // 412\n                                                                                                                       // 413\n  };                                                                                                                   // 414\n                                                                                                                       // 415\n  function easeInOutCubic(t, c) {                                                                                      // 416\n    t /= c / 2;                                                                                                        // 417\n    if (t < 1) return 1 / 2 * t * t * t;                                                                               // 418\n    t -= 2;                                                                                                            // 419\n    return 1 / 2 * (t * t * t + 2);                                                                                    // 420\n  }                                                                                                                    // 421\n                                                                                                                       // 422\n  init();                                                                                                              // 423\n                                                                                                                       // 424\n  function init() {                                                                                                    // 425\n                                                                                                                       // 426\n    var spinnerName = iconName;                                                                                        // 427\n    var $element = $(iconElement);                                                                                     // 428\n    var container = iconElement;                                                                                       // 429\n    createSvgElement('svg', {                                                                                          // 430\n      viewBox: '0 0 64 64',                                                                                            // 431\n      g: [spinners[spinnerName]]                                                                                       // 432\n    }, container, spinnerName);                                                                                        // 433\n                                                                                                                       // 434\n    // Specifically for animations to work,                                                                            // 435\n    // Android 4.3 and below requires the element to be                                                                // 436\n    // added as an html string, rather than dynmically                                                                 // 437\n    // building up the svg element and appending it.                                                                   // 438\n    $element.html(container.innerHTML);                                                                                // 439\n                                                                                                                       // 440\n    start(spinnerName, $element);                                                                                      // 441\n                                                                                                                       // 442\n  };                                                                                                                   // 443\n                                                                                                                       // 444\n  function start(spinnerName, ele) {                                                                                   // 445\n    animations[spinnerName] && animations[spinnerName](ele[0])();                                                      // 446\n  };                                                                                                                   // 447\n                                                                                                                       // 448\n                                                                                                                       // 449\n}                                                                                                                      // 450\n                                                                                                                       // 451\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionSlide/template.ionSlide.js                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionSlide\");                                                                                      // 2\nTemplate[\"ionSlide\"] = new Template(\"Template.ionSlide\", (function() {                                                 // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": function() {                                                                                              // 6\n      return Spacebars.mustache(view.lookup(\"classes\"));                                                               // 7\n    }                                                                                                                  // 8\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {                                                          // 9\n    return Spacebars.include(function() {                                                                              // 10\n      return Spacebars.call(view.templateContentBlock);                                                                // 11\n    });                                                                                                                // 12\n  }), \"\\n  \");                                                                                                         // 13\n}));                                                                                                                   // 14\n                                                                                                                       // 15\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionSlide/ionSlide.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.ionSlide.helpers({                                                                                            // 1\n  classes: function () {                                                                                               // 2\n    var classes = ['ion-slide'];                                                                                       // 3\n                                                                                                                       // 4\n    if (this.class) {                                                                                                  // 5\n      classes.push(this.class);                                                                                        // 6\n    }                                                                                                                  // 7\n                                                                                                                       // 8\n    return classes.join(' ');                                                                                          // 9\n  }                                                                                                                    // 10\n});                                                                                                                    // 11\n                                                                                                                       // 12\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionSubfooterBar/template.ionSubfooterBar.js                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionSubfooterBar\");                                                                               // 2\nTemplate[\"ionSubfooterBar\"] = new Template(\"Template.ionSubfooterBar\", (function() {                                   // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": function() {                                                                                              // 6\n      return Spacebars.mustache(view.lookup(\"classes\"));                                                               // 7\n    }                                                                                                                  // 8\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {                                                          // 9\n    return Spacebars.include(function() {                                                                              // 10\n      return Spacebars.call(view.templateContentBlock);                                                                // 11\n    });                                                                                                                // 12\n  }), \"\\n  \");                                                                                                         // 13\n}));                                                                                                                   // 14\n                                                                                                                       // 15\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionSubfooterBar/ionSubfooterBar.js                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.ionSubfooterBar.rendered = function () {                                                                      // 1\n  Session.set('hasSubfooter', true);                                                                                   // 2\n};                                                                                                                     // 3\n                                                                                                                       // 4\nTemplate.ionSubfooterBar.destroyed = function () {                                                                     // 5\n  Session.set('hasSubfooter', false);                                                                                  // 6\n};                                                                                                                     // 7\n                                                                                                                       // 8\nTemplate.ionSubfooterBar.helpers({                                                                                     // 9\n  classes: function () {                                                                                               // 10\n    var classes = ['bar', 'bar-subfooter'];                                                                            // 11\n                                                                                                                       // 12\n    if (this.class) {                                                                                                  // 13\n      classes.push(this.class);                                                                                        // 14\n    } else {                                                                                                           // 15\n      classes.push('bar-stable');                                                                                      // 16\n    }                                                                                                                  // 17\n                                                                                                                       // 18\n    return classes.join(' ');                                                                                          // 19\n  }                                                                                                                    // 20\n});                                                                                                                    // 21\n                                                                                                                       // 22\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionSubheaderBar/template.ionSubheaderBar.js                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionSubheaderBar\");                                                                               // 2\nTemplate[\"ionSubheaderBar\"] = new Template(\"Template.ionSubheaderBar\", (function() {                                   // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": function() {                                                                                              // 6\n      return Spacebars.mustache(view.lookup(\"classes\"));                                                               // 7\n    }                                                                                                                  // 8\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {                                                          // 9\n    return Spacebars.include(function() {                                                                              // 10\n      return Spacebars.call(view.templateContentBlock);                                                                // 11\n    });                                                                                                                // 12\n  }), \"\\n  \");                                                                                                         // 13\n}));                                                                                                                   // 14\n                                                                                                                       // 15\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionSubheaderBar/ionSubheaderBar.js                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.ionSubheaderBar.rendered = function () {                                                                      // 1\n  Session.set('hasSubheader', true);                                                                                   // 2\n};                                                                                                                     // 3\n                                                                                                                       // 4\nTemplate.ionSubheaderBar.destroyed = function () {                                                                     // 5\n  Session.set('hasSubheader', false);                                                                                  // 6\n};                                                                                                                     // 7\n                                                                                                                       // 8\nTemplate.ionSubheaderBar.helpers({                                                                                     // 9\n  classes: function () {                                                                                               // 10\n    var classes = ['bar', 'bar-subheader'];                                                                            // 11\n                                                                                                                       // 12\n    if (this.class) {                                                                                                  // 13\n      classes.push(this.class);                                                                                        // 14\n    } else {                                                                                                           // 15\n      classes.push('bar-stable');                                                                                      // 16\n    }                                                                                                                  // 17\n                                                                                                                       // 18\n    if (Session.get('hasTabsTop')) {                                                                                   // 19\n      classes.push('has-tabs-top');                                                                                    // 20\n    }                                                                                                                  // 21\n                                                                                                                       // 22\n    return classes.join(' ');                                                                                          // 23\n  }                                                                                                                    // 24\n});                                                                                                                    // 25\n                                                                                                                       // 26\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionTabs/template.ionTabs.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionTabs\");                                                                                       // 2\nTemplate[\"ionTabs\"] = new Template(\"Template.ionTabs\", (function() {                                                   // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": function() {                                                                                              // 6\n      return Spacebars.mustache(view.lookup(\"classes\"));                                                               // 7\n    }                                                                                                                  // 8\n  }, \"\\n    \", HTML.DIV({                                                                                              // 9\n    \"class\": \"tabs\"                                                                                                    // 10\n  }, \"\\n      \", Blaze._InOuterTemplateScope(view, function() {                                                        // 11\n    return Spacebars.include(function() {                                                                              // 12\n      return Spacebars.call(view.templateContentBlock);                                                                // 13\n    });                                                                                                                // 14\n  }), \"\\n    \"), \"\\n  \");                                                                                              // 15\n}));                                                                                                                   // 16\n                                                                                                                       // 17\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionTabs/ionTabs.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.ionTabs.created = function () {                                                                               // 1\n  this.data = this.data || {};                                                                                         // 2\n};                                                                                                                     // 3\n                                                                                                                       // 4\nTemplate.ionTabs.rendered = function () {                                                                              // 5\n  if ((this.data.class && this.data.class.indexOf('tabs-top') > -1) || this.data.style === 'android' || ( !this.data.style && Platform.isAndroid())) {\n    Session.set('hasTabsTop', true);                                                                                   // 7\n  } else {                                                                                                             // 8\n    Session.set('hasTabs', true);                                                                                      // 9\n  }                                                                                                                    // 10\n                                                                                                                       // 11\n  this.$('.tabs').children().each(function() {                                                                         // 12\n    var href = $(this).attr('href');                                                                                   // 13\n    var current = Router.current().location.get().path;                                                                // 14\n    if(href === current){                                                                                              // 15\n      Session.set('ionTab.current', href);                                                                             // 16\n    }                                                                                                                  // 17\n  });                                                                                                                  // 18\n};                                                                                                                     // 19\n                                                                                                                       // 20\nTemplate.ionTabs.destroyed = function () {                                                                             // 21\n  Session.set('hasTabs', false);                                                                                       // 22\n  Session.set('hasTabsTop', false);                                                                                    // 23\n};                                                                                                                     // 24\n                                                                                                                       // 25\nTemplate.ionTabs.helpers({                                                                                             // 26\n  classes: function () {                                                                                               // 27\n    var classes = [];                                                                                                  // 28\n                                                                                                                       // 29\n    if (this.class) {                                                                                                  // 30\n      classes.push(this.class);                                                                                        // 31\n    }                                                                                                                  // 32\n                                                                                                                       // 33\n    if (this.style === 'android' || ( !this.style && Platform.isAndroid()) ) {                                         // 34\n      classes.push('tabs-top tabs-striped tabs-icon-left');                                                            // 35\n    }                                                                                                                  // 36\n                                                                                                                       // 37\n    if (this.style === 'ios' || ( !this.style && Platform.isIOS()) ) {                                                 // 38\n      classes.push('tabs-icon-top');                                                                                   // 39\n    }                                                                                                                  // 40\n                                                                                                                       // 41\n    return classes.join(' ');                                                                                          // 42\n  }                                                                                                                    // 43\n});                                                                                                                    // 44\n                                                                                                                       // 45\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionTab/template.ionTab.js                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionTab\");                                                                                        // 2\nTemplate[\"ionTab\"] = new Template(\"Template.ionTab\", (function() {                                                     // 3\n  var view = this;                                                                                                     // 4\n  return HTML.A({                                                                                                      // 5\n    \"class\": function() {                                                                                              // 6\n      return [ Spacebars.mustache(view.lookup(\"classes\")), \" \", Spacebars.mustache(view.lookup(\"isActive\")) ];         // 7\n    },                                                                                                                 // 8\n    href: function() {                                                                                                 // 9\n      return Spacebars.mustache(view.lookup(\"url\"));                                                                   // 10\n    },                                                                                                                 // 11\n    \"data-ion-tab\": \"\"                                                                                                 // 12\n  }, \"\\n    \", Blaze.If(function() {                                                                                   // 13\n    return Spacebars.call(view.lookup(\"defaultIcon\"));                                                                 // 14\n  }, function() {                                                                                                      // 15\n    return [ \"\\n      \", Blaze.If(function() {                                                                         // 16\n      return Spacebars.call(view.lookup(\"isActive\"));                                                                  // 17\n    }, function() {                                                                                                    // 18\n      return [ \"\\n        \", Blaze._TemplateWith(function() {                                                          // 19\n        return {                                                                                                       // 20\n          icon: Spacebars.call(view.lookup(\"activeIcon\"))                                                              // 21\n        };                                                                                                             // 22\n      }, function() {                                                                                                  // 23\n        return Spacebars.include(view.lookupTemplate(\"ionIcon\"));                                                      // 24\n      }), \"\\n      \" ];                                                                                                // 25\n    }, function() {                                                                                                    // 26\n      return [ \"\\n        \", Blaze._TemplateWith(function() {                                                          // 27\n        return {                                                                                                       // 28\n          icon: Spacebars.call(view.lookup(\"defaultIcon\"))                                                             // 29\n        };                                                                                                             // 30\n      }, function() {                                                                                                  // 31\n        return Spacebars.include(view.lookupTemplate(\"ionIcon\"));                                                      // 32\n      }), \"\\n      \" ];                                                                                                // 33\n    }), \"\\n    \" ];                                                                                                    // 34\n  }), \"\\n\\n    \", Blaze.View(\"lookup:title\", function() {                                                              // 35\n    return Spacebars.mustache(view.lookup(\"title\"));                                                                   // 36\n  }), \"\\n\\n    \", Blaze.If(function() {                                                                                // 37\n    return Spacebars.call(view.lookup(\"badgeNumber\"));                                                                 // 38\n  }, function() {                                                                                                      // 39\n    return [ \"\\n      \", HTML.DIV({                                                                                    // 40\n      \"class\": function() {                                                                                            // 41\n        return [ \"badge badge-\", Spacebars.mustache(view.lookup(\"badgeColor\")) ];                                      // 42\n      }                                                                                                                // 43\n    }, \"\\n        \", Blaze.View(\"lookup:badgeNumber\", function() {                                                     // 44\n      return Spacebars.mustache(view.lookup(\"badgeNumber\"));                                                           // 45\n    }), \"\\n      \"), \"\\n    \" ];                                                                                       // 46\n  }), \"\\n  \");                                                                                                         // 47\n}));                                                                                                                   // 48\n                                                                                                                       // 49\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionTab/ionTab.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.ionTab.events({                                                                                               // 1\n  'click': function (event, template) {                                                                                // 2\n    if (template.data.path) {                                                                                          // 3\n      Session.set('ionTab.current', template.data.path);                                                               // 4\n    }                                                                                                                  // 5\n                                                                                                                       // 6\n    // If the tab's content is being rendered inside of a ionNavView                                                   // 7\n    // we don't want to slide it in when switching tabs                                                                // 8\n    IonNavigation.skipTransitions = true;                                                                              // 9\n  }                                                                                                                    // 10\n});                                                                                                                    // 11\n                                                                                                                       // 12\nTemplate.ionTab.helpers({                                                                                              // 13\n  classes: function () {                                                                                               // 14\n    var classes = ['tab-item'];                                                                                        // 15\n    if (this.class) {                                                                                                  // 16\n      classes.push(this.class);                                                                                        // 17\n    }                                                                                                                  // 18\n    if (this.badgeNumber) {                                                                                            // 19\n      classes.push('has-badge');                                                                                       // 20\n    }                                                                                                                  // 21\n    return classes.join(' ');                                                                                          // 22\n  },                                                                                                                   // 23\n                                                                                                                       // 24\n  url: function () {                                                                                                   // 25\n    if (this.href) {                                                                                                   // 26\n      return this.href;                                                                                                // 27\n    }                                                                                                                  // 28\n                                                                                                                       // 29\n    if (this.path && Router.routes[this.path]) {                                                                       // 30\n      return Router.routes[this.path].path(Template.currentData());                                                    // 31\n    }                                                                                                                  // 32\n  },                                                                                                                   // 33\n                                                                                                                       // 34\n  isActive: function () {                                                                                              // 35\n    var ionTabCurrent = Session.get('ionTab.current');                                                                 // 36\n                                                                                                                       // 37\n    if (this.path && this.path === ionTabCurrent) {                                                                    // 38\n      return 'active';                                                                                                 // 39\n    }                                                                                                                  // 40\n                                                                                                                       // 41\n    // The initial case where there is no localStorage value and                                                       // 42\n    // no session variable has been set, this attempts to set the correct tab                                          // 43\n    // to active based on the router                                                                                   // 44\n    var route = Router.routes[this.path];                                                                              // 45\n    if(route && route.path(Template.currentData()) === ionTabCurrent){                                                 // 46\n      return 'active';                                                                                                 // 47\n    }                                                                                                                  // 48\n  },                                                                                                                   // 49\n                                                                                                                       // 50\n  activeIcon: function () {                                                                                            // 51\n    if (this.iconOn) {                                                                                                 // 52\n      return this.iconOn;                                                                                              // 53\n    } else {                                                                                                           // 54\n      return this.icon;                                                                                                // 55\n    }                                                                                                                  // 56\n  },                                                                                                                   // 57\n                                                                                                                       // 58\n  defaultIcon: function () {                                                                                           // 59\n    if (this.iconOff) {                                                                                                // 60\n      return this.iconOff;                                                                                             // 61\n    } else {                                                                                                           // 62\n      return this.icon;                                                                                                // 63\n    }                                                                                                                  // 64\n  },                                                                                                                   // 65\n                                                                                                                       // 66\n  badgeNumber: function () {                                                                                           // 67\n    return this.badgeNumber;                                                                                           // 68\n  },                                                                                                                   // 69\n                                                                                                                       // 70\n  badgeColor: function () {                                                                                            // 71\n    return this.badgeColor||'assertive';                                                                               // 72\n  }                                                                                                                    // 73\n});                                                                                                                    // 74\n                                                                                                                       // 75\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionView/template.ionView.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"ionView\");                                                                                       // 2\nTemplate[\"ionView\"] = new Template(\"Template.ionView\", (function() {                                                   // 3\n  var view = this;                                                                                                     // 4\n  return [ Blaze.If(function() {                                                                                       // 5\n    return Spacebars.call(view.lookup(\"title\"));                                                                       // 6\n  }, function() {                                                                                                      // 7\n    return [ \"\\n    \", Blaze._TemplateWith(function() {                                                                // 8\n      return \"headerTitle\";                                                                                            // 9\n    }, function() {                                                                                                    // 10\n      return Spacebars.include(view.lookupTemplate(\"contentFor\"), function() {                                         // 11\n        return [ \"\\n      \", HTML.H1({                                                                                 // 12\n          \"class\": \"title\"                                                                                             // 13\n        }, Blaze.View(\"lookup:title\", function() {                                                                     // 14\n          return Spacebars.mustache(view.lookup(\"title\"));                                                             // 15\n        })), \"\\n    \" ];                                                                                               // 16\n      });                                                                                                              // 17\n    }), \"\\n  \" ];                                                                                                      // 18\n  }), \"\\n\\n  \", HTML.DIV({                                                                                             // 19\n    \"class\": function() {                                                                                              // 20\n      return Spacebars.mustache(view.lookup(\"classes\"));                                                               // 21\n    }                                                                                                                  // 22\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {                                                          // 23\n    return Spacebars.include(function() {                                                                              // 24\n      return Spacebars.call(view.templateContentBlock);                                                                // 25\n    });                                                                                                                // 26\n  }), \"\\n  \") ];                                                                                                       // 27\n}));                                                                                                                   // 28\n                                                                                                                       // 29\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/meteoric_ionic/components/ionView/ionView.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.ionView.rendered = function () {                                                                              // 1\n  // Reset our transition preference                                                                                   // 2\n  IonNavigation.skipTransitions = false;                                                                               // 3\n                                                                                                                       // 4\n  // Reset our scroll position                                                                                         // 5\n  var routePath = Router.current().route.path(Router.current().params);                                                // 6\n  if(IonScrollPositions[routePath]) {                                                                                  // 7\n    $('.overflow-scroll').not('.nav-view-leaving .overflow-scroll').scrollTop(IonScrollPositions[routePath]);          // 8\n    delete IonScrollPositions[routePath];                                                                              // 9\n  }                                                                                                                    // 10\n};                                                                                                                     // 11\n                                                                                                                       // 12\nTemplate.ionView.helpers({                                                                                             // 13\n  classes: function () {                                                                                               // 14\n    var classes = ['view'];                                                                                            // 15\n                                                                                                                       // 16\n    if (this.class) {                                                                                                  // 17\n      classes.push(this.class);                                                                                        // 18\n    }                                                                                                                  // 19\n                                                                                                                       // 20\n    return classes.join(' ');                                                                                          // 21\n  },                                                                                                                   // 22\n  title: function () {                                                                                                 // 23\n    if ( Template.instance().data && Template.instance().data.title ) {                                                // 24\n      return Template.instance().data.title;                                                                           // 25\n    }                                                                                                                  // 26\n  }                                                                                                                    // 27\n});                                                                                                                    // 28\n                                                                                                                       // 29\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['meteoric:ionic'] = {}, {\n  Platform: Platform,\n  IonActionSheet: IonActionSheet,\n  IonBackdrop: IonBackdrop,\n  IonHeaderBar: IonHeaderBar,\n  IonKeyboard: IonKeyboard,\n  IonLoading: IonLoading,\n  IonModal: IonModal,\n  IonNavigation: IonNavigation,\n  IonPopover: IonPopover,\n  IonPopup: IonPopup,\n  IonSideMenu: IonSideMenu\n});\n\n})();\n","servePath":"/packages/meteoric_ionic.js","sourceMap":{"version":3,"sources":["/packages/meteoric_ionic/vendor/snap.js","/packages/meteoric_ionic/vendor/slick.js","/packages/meteoric_ionic/vendor/slip.js","/packages/meteoric_ionic/components/ionActionSheet/template.ionActionSheet.js","/packages/meteoric_ionic/components/ionActionSheet/ionActionSheet.js","/packages/meteoric_ionic/components/ionBackdrop/template.ionBackdrop.js","/packages/meteoric_ionic/components/ionBackdrop/ionBackdrop.js","/packages/meteoric_ionic/components/ionBody/template.ionBody.js","/packages/meteoric_ionic/components/ionBody/ionBody.js","/packages/meteoric_ionic/components/ionContent/template.ionContent.js","/packages/meteoric_ionic/components/ionContent/ionContent.js","/packages/meteoric_ionic/components/ionFooterBar/template.ionFooterBar.js","/packages/meteoric_ionic/components/ionFooterBar/ionFooterBar.js","/packages/meteoric_ionic/components/ionHeaderBar/template.ionHeaderBar.js","/packages/meteoric_ionic/components/ionHeaderBar/ionHeaderBar.js","/packages/meteoric_ionic/components/ionIcon/template.ionIcon.js","/packages/meteoric_ionic/components/ionIcon/ionIcon.js","/packages/meteoric_ionic/components/ionItem/template.ionItem.js","/packages/meteoric_ionic/components/ionItem/ionItem.js","/packages/meteoric_ionic/components/ionKeyboard/ionKeyboard.js","/packages/meteoric_ionic/components/ionKeyboard/ionInputFocus.js","/packages/meteoric_ionic/components/ionList/template.ionList.js","/packages/meteoric_ionic/components/ionList/ionList.js","/packages/meteoric_ionic/components/ionListButton/template.ionListButton.js","/packages/meteoric_ionic/components/ionListButton/ionListButton.js","/packages/meteoric_ionic/components/ionLoading/template.ionLoading.js","/packages/meteoric_ionic/components/ionLoading/ionLoading.js","/packages/meteoric_ionic/components/ionModal/template.ionModal.js","/packages/meteoric_ionic/components/ionModal/ionModal.js","/packages/meteoric_ionic/components/ionNavBar/template.ionNavBar.js","/packages/meteoric_ionic/components/ionNavBar/ionNavBar.js","/packages/meteoric_ionic/components/ionNavBackButton/template.ionNavBackButton.js","/packages/meteoric_ionic/components/ionNavBackButton/ionNavBackButton.js","/packages/meteoric_ionic/components/ionNavView/template.ionNavView.js","/packages/meteoric_ionic/components/ionNavView/ionNavView.js","/packages/meteoric_ionic/components/ionPane/template.ionPane.js","/packages/meteoric_ionic/components/ionPane/ionPane.js","/packages/meteoric_ionic/components/ionPopover/template.ionPopover.js","/packages/meteoric_ionic/components/ionPopover/ionPopover.js","/packages/meteoric_ionic/components/ionPopup/template.ionPopup.js","/packages/meteoric_ionic/components/ionPopup/ionPopup.js","/packages/meteoric_ionic/components/ionRadio/template.ionRadio.js","/packages/meteoric_ionic/components/ionRadio/ionRadio.js","/packages/meteoric_ionic/components/ionSideMenu/template.ionSideMenu.js","/packages/meteoric_ionic/components/ionSideMenu/ionSideMenu.js","/packages/meteoric_ionic/components/ionSideMenuContainer/template.ionSideMenuContainer.js","/packages/meteoric_ionic/components/ionSideMenuContainer/ionSideMenuContainer.js","/packages/meteoric_ionic/components/ionSideMenuContent/template.ionSideMenuContent.js","/packages/meteoric_ionic/components/ionSideMenuContent/ionSideMenuContent.js","/packages/meteoric_ionic/components/ionSideMenus/template.ionSideMenus.js","/packages/meteoric_ionic/components/ionSideMenus/ionSideMenus.js","/packages/meteoric_ionic/components/ionSlideBox/template.ionSlideBox.js","/packages/meteoric_ionic/components/ionSlideBox/ionSlideBox.js","/packages/meteoric_ionic/components/ionSpinner/template.ionSpinner.js","/packages/meteoric_ionic/components/ionSpinner/ionSpinner.js","/packages/meteoric_ionic/components/ionSlide/template.ionSlide.js","/packages/meteoric_ionic/components/ionSlide/ionSlide.js","/packages/meteoric_ionic/components/ionSubfooterBar/template.ionSubfooterBar.js","/packages/meteoric_ionic/components/ionSubfooterBar/ionSubfooterBar.js","/packages/meteoric_ionic/components/ionSubheaderBar/template.ionSubheaderBar.js","/packages/meteoric_ionic/components/ionSubheaderBar/ionSubheaderBar.js","/packages/meteoric_ionic/components/ionTabs/template.ionTabs.js","/packages/meteoric_ionic/components/ionTabs/ionTabs.js","/packages/meteoric_ionic/components/ionTab/template.ionTab.js","/packages/meteoric_ionic/components/ionTab/ionTab.js","/packages/meteoric_ionic/components/ionView/template.ionView.js","/packages/meteoric_ionic/components/ionView/ionView.js"],"names":[],"mappingsxjpmxxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACvhHA;AACA;AACA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACdhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AC5FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACxjLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6H;;;;;;;;;;;;;;;;;;ACrHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACZA,2H;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6H;;;;;;;;;;;;;;;;;;AClLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6H;;;;;;;;;;;;;;;;;;AClcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H","file":"/packages/meteoric_ionic.js","sourcesContent":["/*\n* Snap.js\n*\n* Copyright 2013, Jacob Kelley - http://jakiestfu.com/\n* Released under the MIT Licence\n* http://opensource.org/licenses/MIT\n*\n* Github:  http://github.com/jakiestfu/Snap.js/\n* Version: 1.9.3\n*/\n/*jslint browser: true*/\n/*global define, module, ender*/\n(function(win, doc) {\n  'use strict';\n  var Snap = Snap || function(userOpts) {\n    var settings = {\n      element: null,\n      dragger: null,\n      disable: 'none',\n      addBodyClasses: true,\n      hyperextensible: true,\n      resistance: 0.5,\n      flickThreshold: 50,\n      transitionSpeed: 0.3,\n      easing: 'ease',\n      maxPosition: 266,\n      minPosition: -266,\n      tapToClose: true,\n      touchToDrag: true,\n      slideIntent: 40, // degrees\n      minDragDistance: 5\n    },\n    cache = {\n      simpleStates: {\n        opening: null,\n        towards: null,\n        hyperExtending: null,\n        halfway: null,\n        flick: null,\n        translation: {\n          absolute: 0,\n          relative: 0,\n          sinceDirectionChange: 0,\n          percentage: 0\n        }\n      }\n    },\n    eventList = {},\n    utils = {\n      hasTouch: ('ontouchstart' in doc.documentElement || win.navigator.msPointerEnabled),\n      eventType: function(action) {\n        var eventTypes = {\n          down: (utils.hasTouch ? 'touchstart' : 'mousedown'),\n          move: (utils.hasTouch ? 'touchmove' : 'mousemove'),\n          up: (utils.hasTouch ? 'touchend' : 'mouseup'),\n          out: (utils.hasTouch ? 'touchcancel' : 'mouseout')\n        };\n        return eventTypes[action];\n      },\n      page: function(t, e){\n        return (utils.hasTouch && e.touches.length && e.touches[0]) ? e.touches[0]['page'+t] : e['page'+t];\n      },\n      klass: {\n        has: function(el, name){\n          return (el.className).indexOf(name) !== -1;\n        },\n        add: function(el, name){\n          if(!utils.klass.has(el, name) && settings.addBodyClasses){\n            el.className += \" \"+name;\n          }\n        },\n        remove: function(el, name){\n          if(settings.addBodyClasses){\n            el.className = (el.className).replace(name, \"\").replace(/^\\s+|\\s+$/g, '');\n          }\n        }\n      },\n      dispatchEvent: function(type) {\n        if (typeof eventList[type] === 'function') {\n          return eventList[type].call();\n        }\n      },\n      vendor: function(){\n        var tmp = doc.createElement(\"div\"),\n        prefixes = 'webkit Moz O ms'.split(' '),\n        i;\n        for (i in prefixes) {\n          if (typeof tmp.style[prefixes[i] + 'Transition'] !== 'undefined') {\n            return prefixes[i];\n          }\n        }\n      },\n      transitionCallback: function(){\n        return (cache.vendor==='Moz' || cache.vendor==='ms') ? 'transitionend' : cache.vendor+'TransitionEnd';\n      },\n      canTransform: function(){\n        return typeof settings.element.style[cache.vendor+'Transform'] !== 'undefined';\n      },\n      deepExtend: function(destination, source) {\n        var property;\n        for (property in source) {\n          if (source[property] && source[property].constructor && source[property].constructor === Object) {\n            destination[property] = destination[property] || {};\n            utils.deepExtend(destination[property], source[property]);\n          } else {\n            destination[property] = source[property];\n          }\n        }\n        return destination;\n      },\n      angleOfDrag: function(x, y) {\n        var degrees, theta;\n        // Calc Theta\n        theta = Math.atan2(-(cache.startDragY - y), (cache.startDragX - x));\n        if (theta < 0) {\n          theta += 2 * Math.PI;\n        }\n        // Calc Degrees\n        degrees = Math.floor(theta * (180 / Math.PI) - 180);\n        if (degrees < 0 && degrees > -180) {\n          degrees = 360 - Math.abs(degrees);\n        }\n        return Math.abs(degrees);\n      },\n      events: {\n        addEvent: function addEvent(element, eventName, func) {\n          if (element.addEventListener) {\n            return element.addEventListener(eventName, func, false);\n          } else if (element.attachEvent) {\n            return element.attachEvent(\"on\" + eventName, func);\n          }\n        },\n        removeEvent: function addEvent(element, eventName, func) {\n          if (element.addEventListener) {\n            return element.removeEventListener(eventName, func, false);\n          } else if (element.attachEvent) {\n            return element.detachEvent(\"on\" + eventName, func);\n          }\n        },\n        prevent: function(e) {\n          if (e.preventDefault) {\n            e.preventDefault();\n          } else {\n            e.returnValue = false;\n          }\n        }\n      },\n      parentUntil: function(el, attr) {\n        var isStr = typeof attr === 'string';\n        while (el.parentNode) {\n          if (isStr && el.getAttribute && el.getAttribute(attr)){\n            return el;\n          } else if(!isStr && el === attr){\n            return el;\n          }\n          el = el.parentNode;\n        }\n        return null;\n      }\n    },\n    action = {\n      translate: {\n        get: {\n          matrix: function(index) {\n\n            if( !utils.canTransform() ){\n              return parseInt(settings.element.style.left, 10);\n            } else {\n              var matrix = win.getComputedStyle(settings.element)[cache.vendor+'Transform'].match(/\\((.*)\\)/),\n              ieOffset = 8;\n              if (matrix) {\n                matrix = matrix[1].split(',');\n                if(matrix.length===16){\n                  index+=ieOffset;\n                }\n                return parseInt(matrix[index], 10);\n              }\n              return 0;\n            }\n          }\n        },\n        easeCallback: function(){\n          settings.element.style[cache.vendor+'Transition'] = '';\n          cache.translation = action.translate.get.matrix(4);\n          cache.easing = false;\n          clearInterval(cache.animatingInterval);\n\n          if(cache.easingTo===0){\n            utils.klass.remove(doc.body, 'snapjs-right');\n            utils.klass.remove(doc.body, 'snapjs-left');\n          }\n\n          utils.dispatchEvent('animated');\n          utils.events.removeEvent(settings.element, utils.transitionCallback(), action.translate.easeCallback);\n        },\n        easeTo: function(n) {\n\n          if( !utils.canTransform() ){\n            cache.translation = n;\n            action.translate.x(n);\n          } else {\n            cache.easing = true;\n            cache.easingTo = n;\n\n            settings.element.style[cache.vendor+'Transition'] = 'all ' + settings.transitionSpeed + 's ' + settings.easing;\n\n            cache.animatingInterval = setInterval(function() {\n              utils.dispatchEvent('animating');\n            }, 1);\n\n            utils.events.addEvent(settings.element, utils.transitionCallback(), action.translate.easeCallback);\n            action.translate.x(n);\n          }\n          if(n===0){\n            settings.element.style[cache.vendor+'Transform'] = '';\n          }\n        },\n        x: function(n) {\n          if( (settings.disable==='left' && n>0) ||\n            (settings.disable==='right' && n<0)\n          ){ return; }\n\n          if( !settings.hyperextensible ){\n            if( n===settings.maxPosition || n>settings.maxPosition ){\n              n=settings.maxPosition;\n            } else if( n===settings.minPosition || n<settings.minPosition ){\n              n=settings.minPosition;\n            }\n          }\n\n          n = parseInt(n, 10);\n          if(isNaN(n)){\n            n = 0;\n          }\n\n          if( utils.canTransform() ){\n            var theTranslate = 'translate3d(' + n + 'px, 0,0)';\n            settings.element.style[cache.vendor+'Transform'] = theTranslate;\n          } else {\n            settings.element.style.width = (win.innerWidth || doc.documentElement.clientWidth)+'px';\n\n            settings.element.style.left = n+'px';\n            settings.element.style.right = '';\n          }\n        }\n      },\n      drag: {\n        listen: function() {\n          cache.translation = 0;\n          cache.easing = false;\n          utils.events.addEvent(settings.element, utils.eventType('down'), action.drag.startDrag);\n          utils.events.addEvent(settings.element, utils.eventType('move'), action.drag.dragging);\n          utils.events.addEvent(settings.element, utils.eventType('up'), action.drag.endDrag);\n        },\n        stopListening: function() {\n          utils.events.removeEvent(settings.element, utils.eventType('down'), action.drag.startDrag);\n          utils.events.removeEvent(settings.element, utils.eventType('move'), action.drag.dragging);\n          utils.events.removeEvent(settings.element, utils.eventType('up'), action.drag.endDrag);\n        },\n        startDrag: function(e) {\n          // No drag on ignored elements\n          var target = e.target ? e.target : e.srcElement,\n          ignoreParent = utils.parentUntil(target, 'data-snap-ignore');\n\n          if (ignoreParent) {\n            utils.dispatchEvent('ignore');\n            return;\n          }\n\n\n          if(settings.dragger){\n            var dragParent = utils.parentUntil(target, settings.dragger);\n\n            // Only use dragger if we're in a closed state\n            if( !dragParent &&\n              (cache.translation !== settings.minPosition &&\n                cache.translation !== settings.maxPosition\n              )){\n                return;\n              }\n            }\n\n            utils.dispatchEvent('start');\n            settings.element.style[cache.vendor+'Transition'] = '';\n            cache.isDragging = true;\n            cache.hasIntent = null;\n            cache.intentChecked = false;\n            cache.startDragX = utils.page('X', e);\n            cache.startDragY = utils.page('Y', e);\n            cache.dragWatchers = {\n              current: 0,\n              last: 0,\n              hold: 0,\n              state: ''\n            };\n            cache.simpleStates = {\n              opening: null,\n              towards: null,\n              hyperExtending: null,\n              halfway: null,\n              flick: null,\n              translation: {\n                absolute: 0,\n                relative: 0,\n                sinceDirectionChange: 0,\n                percentage: 0\n              }\n            };\n          },\n          dragging: function(e) {\n            if (cache.isDragging && settings.touchToDrag) {\n\n              var thePageX = utils.page('X', e),\n              thePageY = utils.page('Y', e),\n              translated = cache.translation,\n              absoluteTranslation = action.translate.get.matrix(4),\n              whileDragX = thePageX - cache.startDragX,\n              openingLeft = absoluteTranslation > 0,\n              translateTo = whileDragX,\n              diff;\n\n              // Shown no intent already\n              if((cache.intentChecked && !cache.hasIntent)){\n                return;\n              }\n\n              if(settings.addBodyClasses){\n                if((absoluteTranslation)>0){\n                  utils.klass.add(doc.body, 'snapjs-left');\n                  utils.klass.remove(doc.body, 'snapjs-right');\n                } else if((absoluteTranslation)<0){\n                  utils.klass.add(doc.body, 'snapjs-right');\n                  utils.klass.remove(doc.body, 'snapjs-left');\n                }\n              }\n\n              if (cache.hasIntent === false || cache.hasIntent === null) {\n                var deg = utils.angleOfDrag(thePageX, thePageY),\n                inRightRange = (deg >= 0 && deg <= settings.slideIntent) || (deg <= 360 && deg > (360 - settings.slideIntent)),\n                inLeftRange = (deg >= 180 && deg <= (180 + settings.slideIntent)) || (deg <= 180 && deg >= (180 - settings.slideIntent));\n                if (!inLeftRange && !inRightRange) {\n                  cache.hasIntent = false;\n                } else {\n                  cache.hasIntent = true;\n                }\n                cache.intentChecked = true;\n              }\n\n              if (\n                (settings.minDragDistance>=Math.abs(thePageX-cache.startDragX)) || // Has user met minimum drag distance?\n                (cache.hasIntent === false)\n              ) {\n                return;\n              }\n\n              utils.events.prevent(e);\n              utils.dispatchEvent('drag');\n\n              cache.dragWatchers.current = thePageX;\n              // Determine which direction we are going\n              if (cache.dragWatchers.last > thePageX) {\n                if (cache.dragWatchers.state !== 'left') {\n                  cache.dragWatchers.state = 'left';\n                  cache.dragWatchers.hold = thePageX;\n                }\n                cache.dragWatchers.last = thePageX;\n              } else if (cache.dragWatchers.last < thePageX) {\n                if (cache.dragWatchers.state !== 'right') {\n                  cache.dragWatchers.state = 'right';\n                  cache.dragWatchers.hold = thePageX;\n                }\n                cache.dragWatchers.last = thePageX;\n              }\n              if (openingLeft) {\n                // Pulling too far to the right\n                if (settings.maxPosition < absoluteTranslation) {\n                  diff = (absoluteTranslation - settings.maxPosition) * settings.resistance;\n                  translateTo = whileDragX - diff;\n                }\n                cache.simpleStates = {\n                  opening: 'left',\n                  towards: cache.dragWatchers.state,\n                  hyperExtending: settings.maxPosition < absoluteTranslation,\n                  halfway: absoluteTranslation > (settings.maxPosition / 2),\n                  flick: Math.abs(cache.dragWatchers.current - cache.dragWatchers.hold) > settings.flickThreshold,\n                  translation: {\n                    absolute: absoluteTranslation,\n                    relative: whileDragX,\n                    sinceDirectionChange: (cache.dragWatchers.current - cache.dragWatchers.hold),\n                    percentage: (absoluteTranslation/settings.maxPosition)*100\n                  }\n                };\n              } else {\n                // Pulling too far to the left\n                if (settings.minPosition > absoluteTranslation) {\n                  diff = (absoluteTranslation - settings.minPosition) * settings.resistance;\n                  translateTo = whileDragX - diff;\n                }\n                cache.simpleStates = {\n                  opening: 'right',\n                  towards: cache.dragWatchers.state,\n                  hyperExtending: settings.minPosition > absoluteTranslation,\n                  halfway: absoluteTranslation < (settings.minPosition / 2),\n                  flick: Math.abs(cache.dragWatchers.current - cache.dragWatchers.hold) > settings.flickThreshold,\n                  translation: {\n                    absolute: absoluteTranslation,\n                    relative: whileDragX,\n                    sinceDirectionChange: (cache.dragWatchers.current - cache.dragWatchers.hold),\n                    percentage: (absoluteTranslation/settings.minPosition)*100\n                  }\n                };\n              }\n              action.translate.x(translateTo + translated);\n            }\n          },\n          endDrag: function(e) {\n            if (cache.isDragging) {\n              utils.dispatchEvent('end');\n              var translated = action.translate.get.matrix(4);\n\n              // Tap Close\n              if (cache.dragWatchers.current === 0 && translated !== 0 && settings.tapToClose) {\n                utils.dispatchEvent('close');\n                utils.events.prevent(e);\n                action.translate.easeTo(0);\n                cache.isDragging = false;\n                cache.startDragX = 0;\n                return;\n              }\n\n              // Revealing Left\n              if (cache.simpleStates.opening === 'left') {\n                // Halfway, Flicking, or Too Far Out\n                if ((cache.simpleStates.halfway || cache.simpleStates.hyperExtending || cache.simpleStates.flick)) {\n                  if (cache.simpleStates.flick && cache.simpleStates.towards === 'left') { // Flicking Closed\n                    action.translate.easeTo(0);\n                  } else if (\n                    (cache.simpleStates.flick && cache.simpleStates.towards === 'right') || // Flicking Open OR\n                    (cache.simpleStates.halfway || cache.simpleStates.hyperExtending) // At least halfway open OR hyperextending\n                  ) {\n                    action.translate.easeTo(settings.maxPosition); // Open Left\n                  }\n                } else {\n                  action.translate.easeTo(0); // Close Left\n                }\n                // Revealing Right\n              } else if (cache.simpleStates.opening === 'right') {\n                // Halfway, Flicking, or Too Far Out\n                if ((cache.simpleStates.halfway || cache.simpleStates.hyperExtending || cache.simpleStates.flick)) {\n                  if (cache.simpleStates.flick && cache.simpleStates.towards === 'right') { // Flicking Closed\n                    action.translate.easeTo(0);\n                  } else if (\n                    (cache.simpleStates.flick && cache.simpleStates.towards === 'left') || // Flicking Open OR\n                    (cache.simpleStates.halfway || cache.simpleStates.hyperExtending) // At least halfway open OR hyperextending\n                  ) {\n                    action.translate.easeTo(settings.minPosition); // Open Right\n                  }\n                } else {\n                  action.translate.easeTo(0); // Close Right\n                }\n              }\n              cache.isDragging = false;\n              cache.startDragX = utils.page('X', e);\n            }\n          }\n        }\n      },\n      init = function(opts) {\n        if (opts.element) {\n          utils.deepExtend(settings, opts);\n          cache.vendor = utils.vendor();\n          action.drag.listen();\n        }\n      };\n      /*\n      * Public\n      */\n      this.open = function(side) {\n        utils.dispatchEvent('open');\n        utils.klass.remove(doc.body, 'snapjs-expand-left');\n        utils.klass.remove(doc.body, 'snapjs-expand-right');\n\n        if (side === 'left') {\n          cache.simpleStates.opening = 'left';\n          cache.simpleStates.towards = 'right';\n          utils.klass.add(doc.body, 'snapjs-left');\n          utils.klass.remove(doc.body, 'snapjs-right');\n          action.translate.easeTo(settings.maxPosition);\n        } else if (side === 'right') {\n          cache.simpleStates.opening = 'right';\n          cache.simpleStates.towards = 'left';\n          utils.klass.remove(doc.body, 'snapjs-left');\n          utils.klass.add(doc.body, 'snapjs-right');\n          action.translate.easeTo(settings.minPosition);\n        }\n      };\n      this.close = function() {\n        utils.dispatchEvent('close');\n        action.translate.easeTo(0);\n      };\n      this.expand = function(side){\n        var to = win.innerWidth || doc.documentElement.clientWidth;\n\n        if(side==='left'){\n          utils.dispatchEvent('expandLeft');\n          utils.klass.add(doc.body, 'snapjs-expand-left');\n          utils.klass.remove(doc.body, 'snapjs-expand-right');\n        } else {\n          utils.dispatchEvent('expandRight');\n          utils.klass.add(doc.body, 'snapjs-expand-right');\n          utils.klass.remove(doc.body, 'snapjs-expand-left');\n          to *= -1;\n        }\n        action.translate.easeTo(to);\n      };\n\n      this.on = function(evt, fn) {\n        eventList[evt] = fn;\n        return this;\n      };\n      this.off = function(evt) {\n        if (eventList[evt]) {\n          eventList[evt] = false;\n        }\n      };\n\n      this.enable = function() {\n        utils.dispatchEvent('enable');\n        action.drag.listen();\n      };\n      this.disable = function() {\n        utils.dispatchEvent('disable');\n        action.drag.stopListening();\n      };\n\n      this.settings = function(opts){\n        utils.deepExtend(settings, opts);\n      };\n\n      this.state = function() {\n        var state,\n        fromLeft = action.translate.get.matrix(4);\n        if (fromLeft === settings.maxPosition) {\n          state = 'left';\n        } else if (fromLeft === settings.minPosition) {\n          state = 'right';\n        } else {\n          state = 'closed';\n        }\n        return {\n          state: state,\n          info: cache.simpleStates\n        };\n      };\n      init(userOpts);\n    };\n    if ((typeof module !== 'undefined') && module.exports) {\n      module.exports = Snap;\n    }\n    if (typeof ender === 'undefined') {\n      this.Snap = Snap;\n    }\n    if ((typeof define === \"function\") && define.amd) {\n      define(\"snap\", [], function() {\n        return Snap;\n      });\n    }\n  }).call(this, window, document);\n","/*\n     _ _      _       _\n ___| (_) ___| | __  (_)___\n/ __| | |/ __| |/ /  | / __|\n\\__ \\ | | (__|   < _ | \\__ \\\n|___/_|_|\\___|_|\\_(_)/ |___/\n                   |__/\n\n Version: 1.4.1\n  Author: Ken Wheeler\n Website: http://kenwheeler.github.io\n    Docs: http://kenwheeler.github.io/slick\n    Repo: http://github.com/kenwheeler/slick\n  Issues: http://github.com/kenwheeler/slick/issues\n\n */\n\n/* global window, document, define, jQuery, setInterval, clearInterval */\n\n(function(factory) {\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], factory);\n    } else if (typeof exports !== 'undefined') {\n        module.exports = factory(require('jquery'));\n    } else {\n        factory(jQuery);\n    }\n\n}(function($) {\n    'use strict';\n    var Slick = window.Slick || {};\n\n    Slick = (function() {\n\n        var instanceUid = 0;\n\n        function Slick(element, settings) {\n\n            var _ = this,\n                dataSettings, responsiveSettings, breakpoint;\n\n            _.defaults = {\n                accessibility: true,\n                adaptiveHeight: false,\n                appendArrows: $(element),\n                appendDots: $(element),\n                arrows: true,\n                asNavFor: null,\n                prevArrow: '<button type=\"button\" data-role=\"none\" class=\"slick-prev\" aria-label=\"previous\">Previous</button>',\n                nextArrow: '<button type=\"button\" data-role=\"none\" class=\"slick-next\" aria-label=\"next\">Next</button>',\n                autoplay: false,\n                autoplaySpeed: 3000,\n                centerMode: false,\n                centerPadding: '50px',\n                cssEase: 'ease',\n                customPaging: function(slider, i) {\n                    return '<button type=\"button\" data-role=\"none\">' + (i + 1) + '</button>';\n                },\n                dots: false,\n                dotsClass: 'slick-dots',\n                draggable: true,\n                easing: 'linear',\n                edgeFriction: 0.35,\n                fade: false,\n                focusOnSelect: false,\n                infinite: true,\n                initialSlide: 0,\n                lazyLoad: 'ondemand',\n                mobileFirst: false,\n                pauseOnHover: true,\n                pauseOnDotsHover: false,\n                respondTo: 'window',\n                responsive: null,\n                rtl: false,\n                slide: '',\n                slidesToShow: 1,\n                slidesToScroll: 1,\n                speed: 500,\n                swipe: true,\n                swipeToSlide: false,\n                touchMove: true,\n                touchThreshold: 5,\n                useCSS: true,\n                variableWidth: false,\n                vertical: false,\n                waitForAnimate: true\n            };\n\n            _.initials = {\n                animating: false,\n                dragging: false,\n                autoPlayTimer: null,\n                currentDirection: 0,\n                currentLeft: null,\n                currentSlide: 0,\n                direction: 1,\n                $dots: null,\n                listWidth: null,\n                listHeight: null,\n                loadIndex: 0,\n                $nextArrow: null,\n                $prevArrow: null,\n                slideCount: null,\n                slideWidth: null,\n                $slideTrack: null,\n                $slides: null,\n                sliding: false,\n                slideOffset: 0,\n                swipeLeft: null,\n                $list: null,\n                touchObject: {},\n                transformsEnabled: false\n            };\n\n            $.extend(_, _.initials);\n\n            _.activeBreakpoint = null;\n            _.animType = null;\n            _.animProp = null;\n            _.breakpoints = [];\n            _.breakpointSettings = [];\n            _.cssTransitions = false;\n            _.hidden = \"hidden\";\n            _.paused = false;\n            _.positionProp = null;\n            _.respondTo = null;\n            _.shouldClick = true;\n            _.$slider = $(element);\n            _.$slidesCache = null;\n            _.transformType = null;\n            _.transitionType = null;\n            _.visibilityChange = \"visibilitychange\";\n            _.windowWidth = 0;\n            _.windowTimer = null;\n\n            dataSettings = $(element).data('slick') || {};\n\n            _.options = $.extend({}, _.defaults, dataSettings, settings);\n\n            _.currentSlide = _.options.initialSlide;\n\n            _.originalSettings = _.options;\n            responsiveSettings = _.options.responsive || null;\n\n            if (responsiveSettings && responsiveSettings.length > -1) {\n                _.respondTo = _.options.respondTo || \"window\";\n                for (breakpoint in responsiveSettings) {\n                    if (responsiveSettings.hasOwnProperty(breakpoint)) {\n                        _.breakpoints.push(responsiveSettings[\n                            breakpoint].breakpoint);\n                        _.breakpointSettings[responsiveSettings[\n                            breakpoint].breakpoint] =\n                            responsiveSettings[breakpoint].settings;\n                    }\n                }\n                _.breakpoints.sort(function(a, b) {\n                    if(_.options.mobileFirst === true) {\n                        return a - b;\n                    } else {\n                        return b - a;\n                    }\n                });\n            }\n\n            if (typeof document.mozHidden !== \"undefined\") {\n                _.hidden = \"mozHidden\";\n                _.visibilityChange = \"mozvisibilitychange\";\n            } else if (typeof document.msHidden !== \"undefined\") {\n                _.hidden = \"msHidden\";\n                _.visibilityChange = \"msvisibilitychange\";\n            } else if (typeof document.webkitHidden !== \"undefined\") {\n                _.hidden = \"webkitHidden\";\n                _.visibilityChange = \"webkitvisibilitychange\";\n            }\n\n            _.autoPlay = $.proxy(_.autoPlay, _);\n            _.autoPlayClear = $.proxy(_.autoPlayClear, _);\n            _.changeSlide = $.proxy(_.changeSlide, _);\n            _.clickHandler = $.proxy(_.clickHandler, _);\n            _.selectHandler = $.proxy(_.selectHandler, _);\n            _.setPosition = $.proxy(_.setPosition, _);\n            _.swipeHandler = $.proxy(_.swipeHandler, _);\n            _.dragHandler = $.proxy(_.dragHandler, _);\n            _.keyHandler = $.proxy(_.keyHandler, _);\n            _.autoPlayIterator = $.proxy(_.autoPlayIterator, _);\n\n            _.instanceUid = instanceUid++;\n\n            // A simple way to check for HTML strings\n            // Strict HTML recognition (must start with <)\n            // Extracted from jQuery v1.11 source\n            _.htmlExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*)$/;\n\n            _.init();\n\n            _.checkResponsive(true);\n\n        }\n\n        return Slick;\n\n    }());\n\n    Slick.prototype.addSlide = Slick.prototype.slickAdd = function(markup, index, addBefore) {\n\n        var _ = this;\n\n        if (typeof(index) === 'boolean') {\n            addBefore = index;\n            index = null;\n        } else if (index < 0 || (index >= _.slideCount)) {\n            return false;\n        }\n\n        _.unload();\n\n        if (typeof(index) === 'number') {\n            if (index === 0 && _.$slides.length === 0) {\n                $(markup).appendTo(_.$slideTrack);\n            } else if (addBefore) {\n                $(markup).insertBefore(_.$slides.eq(index));\n            } else {\n                $(markup).insertAfter(_.$slides.eq(index));\n            }\n        } else {\n            if (addBefore === true) {\n                $(markup).prependTo(_.$slideTrack);\n            } else {\n                $(markup).appendTo(_.$slideTrack);\n            }\n        }\n\n        _.$slides = _.$slideTrack.children(this.options.slide);\n\n        _.$slideTrack.children(this.options.slide).detach();\n\n        _.$slideTrack.append(_.$slides);\n\n        _.$slides.each(function(index, element) {\n            $(element).attr(\"data-slick-index\",index);\n        });\n\n        _.$slidesCache = _.$slides;\n\n        _.reinit();\n\n    };\n\n    Slick.prototype.animateHeight = function(){\n        var _ = this;\n        if(_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {\n            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);\n            _.$list.animate({height: targetHeight},_.options.speed);\n        }\n    };\n\n    Slick.prototype.animateSlide = function(targetLeft, callback) {\n\n        var animProps = {}, _ = this;\n\n        _.animateHeight();\n\n        if (_.options.rtl === true && _.options.vertical === false) {\n            targetLeft = -targetLeft;\n        }\n        if (_.transformsEnabled === false) {\n            if (_.options.vertical === false) {\n                _.$slideTrack.animate({\n                    left: targetLeft\n                }, _.options.speed, _.options.easing, callback);\n            } else {\n                _.$slideTrack.animate({\n                    top: targetLeft\n                }, _.options.speed, _.options.easing, callback);\n            }\n\n        } else {\n\n            if (_.cssTransitions === false) {\n                if (_.options.rtl === true) {\n                    _.currentLeft = -(_.currentLeft);\n                }\n                $({\n                    animStart: _.currentLeft\n                }).animate({\n                    animStart: targetLeft\n                }, {\n                    duration: _.options.speed,\n                    easing: _.options.easing,\n                    step: function(now) {\n                        now = Math.ceil(now);\n                        if (_.options.vertical === false) {\n                            animProps[_.animType] = 'translate(' +\n                                now + 'px, 0px)';\n                            _.$slideTrack.css(animProps);\n                        } else {\n                            animProps[_.animType] = 'translate(0px,' +\n                                now + 'px)';\n                            _.$slideTrack.css(animProps);\n                        }\n                    },\n                    complete: function() {\n                        if (callback) {\n                            callback.call();\n                        }\n                    }\n                });\n\n            } else {\n\n                _.applyTransition();\n                targetLeft = Math.ceil(targetLeft);\n\n                if (_.options.vertical === false) {\n                    animProps[_.animType] = 'translate3d(' + targetLeft + 'px, 0px, 0px)';\n                } else {\n                    animProps[_.animType] = 'translate3d(0px,' + targetLeft + 'px, 0px)';\n                }\n                _.$slideTrack.css(animProps);\n\n                if (callback) {\n                    setTimeout(function() {\n\n                        _.disableTransition();\n\n                        callback.call();\n                    }, _.options.speed);\n                }\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.asNavFor = function(index) {\n        var _ = this, asNavFor = _.options.asNavFor !== null ? $(_.options.asNavFor).slick('getSlick') : null;\n        if(asNavFor !== null) asNavFor.slideHandler(index, true);\n    };\n\n    Slick.prototype.applyTransition = function(slide) {\n\n        var _ = this,\n            transition = {};\n\n        if (_.options.fade === false) {\n            transition[_.transitionType] = _.transformType + ' ' + _.options.speed + 'ms ' + _.options.cssEase;\n        } else {\n            transition[_.transitionType] = 'opacity ' + _.options.speed + 'ms ' + _.options.cssEase;\n        }\n\n        if (_.options.fade === false) {\n            _.$slideTrack.css(transition);\n        } else {\n            _.$slides.eq(slide).css(transition);\n        }\n\n    };\n\n    Slick.prototype.autoPlay = function() {\n\n        var _ = this;\n\n        if (_.autoPlayTimer) {\n            clearInterval(_.autoPlayTimer);\n        }\n\n        if (_.slideCount > _.options.slidesToShow && _.paused !== true) {\n            _.autoPlayTimer = setInterval(_.autoPlayIterator,\n                _.options.autoplaySpeed);\n        }\n\n    };\n\n    Slick.prototype.autoPlayClear = function() {\n\n        var _ = this;\n        if (_.autoPlayTimer) {\n            clearInterval(_.autoPlayTimer);\n        }\n\n    };\n\n    Slick.prototype.autoPlayIterator = function() {\n\n        var _ = this;\n\n        if (_.options.infinite === false) {\n\n            if (_.direction === 1) {\n\n                if ((_.currentSlide + 1) === _.slideCount -\n                    1) {\n                    _.direction = 0;\n                }\n\n                _.slideHandler(_.currentSlide + _.options.slidesToScroll);\n\n            } else {\n\n                if ((_.currentSlide - 1 === 0)) {\n\n                    _.direction = 1;\n\n                }\n\n                _.slideHandler(_.currentSlide - _.options.slidesToScroll);\n\n            }\n\n        } else {\n\n            _.slideHandler(_.currentSlide + _.options.slidesToScroll);\n\n        }\n\n    };\n\n    Slick.prototype.buildArrows = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$prevArrow = $(_.options.prevArrow);\n            _.$nextArrow = $(_.options.nextArrow);\n\n            if (_.htmlExpr.test(_.options.prevArrow)) {\n                _.$prevArrow.appendTo(_.options.appendArrows);\n            }\n\n            if (_.htmlExpr.test(_.options.nextArrow)) {\n                _.$nextArrow.appendTo(_.options.appendArrows);\n            }\n\n            if (_.options.infinite !== true) {\n                _.$prevArrow.addClass('slick-disabled');\n            }\n\n        }\n\n    };\n\n    Slick.prototype.buildDots = function() {\n\n        var _ = this,\n            i, dotString;\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n            dotString = '<ul class=\"' + _.options.dotsClass + '\">';\n\n            for (i = 0; i <= _.getDotCount(); i += 1) {\n                dotString += '<li>' + _.options.customPaging.call(this, _, i) + '</li>';\n            }\n\n            dotString += '</ul>';\n\n            _.$dots = $(dotString).appendTo(\n                _.options.appendDots);\n\n            _.$dots.find('li').first().addClass('slick-active').attr(\"aria-hidden\",\"false\");\n\n        }\n\n    };\n\n    Slick.prototype.buildOut = function() {\n\n        var _ = this;\n\n        _.$slides = _.$slider.children(_.options.slide +\n            ':not(.slick-cloned)').addClass(\n            'slick-slide');\n        _.slideCount = _.$slides.length;\n\n        _.$slides.each(function(index, element) {\n            $(element).attr(\"data-slick-index\",index);\n        });\n\n        _.$slidesCache = _.$slides;\n\n        _.$slider.addClass('slick-slider');\n\n        _.$slideTrack = (_.slideCount === 0) ?\n            $('<div class=\"slick-track\"/>').appendTo(_.$slider) :\n            _.$slides.wrapAll('<div class=\"slick-track\"/>').parent();\n\n        _.$list = _.$slideTrack.wrap(\n            '<div aria-live=\"polite\" class=\"slick-list\"/>').parent();\n        _.$slideTrack.css('opacity', 0);\n\n        if (_.options.centerMode === true || _.options.swipeToSlide === true) {\n            _.options.slidesToScroll = 1;\n        }\n\n        $('img[data-lazy]', _.$slider).not('[src]').addClass('slick-loading');\n\n        _.setupInfinite();\n\n        _.buildArrows();\n\n        _.buildDots();\n\n        _.updateDots();\n\n        if (_.options.accessibility === true) {\n            _.$list.prop('tabIndex', 0);\n        }\n\n        _.setSlideClasses(typeof this.currentSlide === 'number' ? this.currentSlide : 0);\n\n        if (_.options.draggable === true) {\n            _.$list.addClass('draggable');\n        }\n\n    };\n\n    Slick.prototype.checkResponsive = function(initial) {\n\n        var _ = this,\n            breakpoint, targetBreakpoint, respondToWidth;\n        var sliderWidth = _.$slider.width();\n        var windowWidth = window.innerWidth || $(window).width();\n        if (_.respondTo === \"window\") {\n          respondToWidth = windowWidth;\n        } else if (_.respondTo === \"slider\") {\n          respondToWidth = sliderWidth;\n        } else if (_.respondTo === \"min\") {\n          respondToWidth = Math.min(windowWidth, sliderWidth);\n        }\n\n        if (_.originalSettings.responsive && _.originalSettings\n            .responsive.length > -1 && _.originalSettings.responsive !== null) {\n\n            targetBreakpoint = null;\n\n            for (breakpoint in _.breakpoints) {\n                if (_.breakpoints.hasOwnProperty(breakpoint)) {\n                    if (_.originalSettings.mobileFirst === false) {\n                        if (respondToWidth < _.breakpoints[breakpoint]) {\n                            targetBreakpoint = _.breakpoints[breakpoint];\n                        }\n                    } else {\n                        if (respondToWidth > _.breakpoints[breakpoint]) {\n                            targetBreakpoint = _.breakpoints[breakpoint];\n                        }\n                    }\n                }\n            }\n\n            if (targetBreakpoint !== null) {\n                if (_.activeBreakpoint !== null) {\n                    if (targetBreakpoint !== _.activeBreakpoint) {\n                        _.activeBreakpoint =\n                            targetBreakpoint;\n                        if(_.breakpointSettings[targetBreakpoint] === \"unslick\") {\n                            _.unslick();\n                        } else {\n                            _.options = $.extend({}, _.originalSettings,\n                                _.breakpointSettings[\n                                    targetBreakpoint]);\n                            if(initial === true)\n                                _.currentSlide = _.options.initialSlide;\n                            _.refresh();\n                        }\n                    }\n                } else {\n                    _.activeBreakpoint = targetBreakpoint;\n                    if(_.breakpointSettings[targetBreakpoint] === \"unslick\") {\n                        _.unslick();\n                    } else {\n                        _.options = $.extend({}, _.originalSettings,\n                            _.breakpointSettings[\n                                targetBreakpoint]);\n                        if(initial === true)\n                            _.currentSlide = _.options.initialSlide;\n                        _.refresh();\n                    }\n                }\n            } else {\n                if (_.activeBreakpoint !== null) {\n                    _.activeBreakpoint = null;\n                    _.options = _.originalSettings;\n                    if(initial === true)\n                        _.currentSlide = _.options.initialSlide;\n                    _.refresh();\n                }\n            }\n\n        }\n\n    };\n\n    Slick.prototype.changeSlide = function(event, dontAnimate) {\n        var _ = this,\n            $target = $(event.target),\n            indexOffset, slideOffset, unevenOffset;\n\n        // If target is a link, prevent default action.\n        $target.is('a') && event.preventDefault();\n\n        unevenOffset = (_.slideCount % _.options.slidesToScroll !== 0);\n        indexOffset = unevenOffset ? 0 : (_.slideCount - _.currentSlide) % _.options.slidesToScroll;\n\n        switch (event.data.message) {\n\n            case 'previous':\n                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : _.options.slidesToShow - indexOffset;\n                if (_.slideCount > _.options.slidesToShow) {\n                    _.slideHandler(_.currentSlide  - slideOffset, false, dontAnimate);\n                }\n                break;\n\n            case 'next':\n                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : indexOffset;\n                if (_.slideCount > _.options.slidesToShow) {\n                    _.slideHandler(_.currentSlide + slideOffset, false, dontAnimate);\n                }\n                break;\n\n            case 'index':\n                var index = event.data.index === 0 ? 0 :\n                    event.data.index || $(event.target).parent().index() * _.options.slidesToScroll;\n\n                _.slideHandler(_.checkNavigable(index), false, dontAnimate);\n                break;\n\n            default:\n                return;\n        }\n\n    };\n\n    Slick.prototype.checkNavigable = function(index) {\n\n        var _ = this, navigables, prevNavigable;\n\n        navigables = _.getNavigableIndexes();\n        prevNavigable = 0;\n        if(index > navigables[navigables.length -1]){\n            index = navigables[navigables.length -1];\n        } else {\n            for(var n in navigables) {\n                if(index < navigables[n]) {\n                    index = prevNavigable;\n                    break;\n                }\n                prevNavigable = navigables[n];\n            }\n        }\n\n        return index;\n    };\n\n    Slick.prototype.clickHandler = function(event) {\n\n        var _ = this;\n\n        if(_.shouldClick === false) {\n            event.stopImmediatePropagation();\n            event.stopPropagation();\n            event.preventDefault();\n        }\n\n    };\n\n    Slick.prototype.destroy = function() {\n\n        var _ = this;\n\n        _.autoPlayClear();\n\n        _.touchObject = {};\n\n        $('.slick-cloned', _.$slider).remove();\n        if (_.$dots) {\n            _.$dots.remove();\n        }\n        if (_.$prevArrow && (typeof _.options.prevArrow !== 'object')) {\n            _.$prevArrow.remove();\n        }\n        if (_.$nextArrow && (typeof _.options.nextArrow !== 'object')) {\n            _.$nextArrow.remove();\n        }\n\n\n        _.$slides.removeClass('slick-slide slick-active slick-center slick-visible')\n            .attr(\"aria-hidden\",\"true\")\n            .removeAttr('data-slick-index')\n            .css({\n                position: '',\n                left: '',\n                top: '',\n                zIndex: '',\n                opacity: '',\n                width: ''\n            });\n\n        _.$slider.removeClass('slick-slider');\n        _.$slider.removeClass('slick-initialized');\n\n        _.$list.off('.slick');\n        $(window).off('.slick-' + _.instanceUid);\n        $(document).off('.slick-' + _.instanceUid);\n\n        _.$slider.html(_.$slides);\n\n    };\n\n    Slick.prototype.disableTransition = function(slide) {\n\n        var _ = this,\n            transition = {};\n\n        transition[_.transitionType] = \"\";\n\n        if (_.options.fade === false) {\n            _.$slideTrack.css(transition);\n        } else {\n            _.$slides.eq(slide).css(transition);\n        }\n\n    };\n\n    Slick.prototype.fadeSlide = function(slideIndex, callback) {\n\n        var _ = this;\n\n        if (_.cssTransitions === false) {\n\n            _.$slides.eq(slideIndex).css({\n                zIndex: 1000\n            });\n\n            _.$slides.eq(slideIndex).animate({\n                opacity: 1\n            }, _.options.speed, _.options.easing, callback);\n\n        } else {\n\n            _.applyTransition(slideIndex);\n\n            _.$slides.eq(slideIndex).css({\n                opacity: 1,\n                zIndex: 1000\n            });\n\n            if (callback) {\n                setTimeout(function() {\n\n                    _.disableTransition(slideIndex);\n\n                    callback.call();\n                }, _.options.speed);\n            }\n\n        }\n\n    };\n\n    Slick.prototype.filterSlides = Slick.prototype.slickFilter = function(filter) {\n\n        var _ = this;\n\n        if (filter !== null) {\n\n            _.unload();\n\n            _.$slideTrack.children(this.options.slide).detach();\n\n            _.$slidesCache.filter(filter).appendTo(_.$slideTrack);\n\n            _.reinit();\n\n        }\n\n    };\n\n    Slick.prototype.getCurrent = Slick.prototype.slickCurrentSlide = function() {\n\n        var _ = this;\n        return _.currentSlide;\n\n    };\n\n    Slick.prototype.getDotCount = function() {\n\n        var _ = this;\n\n        var breakPoint = 0;\n        var counter = 0;\n        var pagerQty = 0;\n\n        if(_.options.infinite === true) {\n            pagerQty = Math.ceil(_.slideCount / _.options.slidesToScroll);\n        } else if (_.options.centerMode === true) {\n            pagerQty = _.slideCount;\n        } else {\n            while (breakPoint < _.slideCount){\n                ++pagerQty;\n                breakPoint = counter + _.options.slidesToShow;\n                counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll  : _.options.slidesToShow;\n            }\n        }\n\n        return pagerQty - 1;\n\n    };\n\n    Slick.prototype.getLeft = function(slideIndex) {\n\n        var _ = this,\n            targetLeft,\n            verticalHeight,\n            verticalOffset = 0,\n            targetSlide;\n\n        _.slideOffset = 0;\n        verticalHeight = _.$slides.first().outerHeight();\n\n        if (_.options.infinite === true) {\n            if (_.slideCount > _.options.slidesToShow) {\n                _.slideOffset = (_.slideWidth * _.options.slidesToShow) * -1;\n                verticalOffset = (verticalHeight * _.options.slidesToShow) * -1;\n            }\n            if (_.slideCount % _.options.slidesToScroll !== 0) {\n                if (slideIndex + _.options.slidesToScroll > _.slideCount && _.slideCount > _.options.slidesToShow) {\n                    if(slideIndex > _.slideCount) {\n                        _.slideOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * _.slideWidth) * -1;\n                        verticalOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * verticalHeight) * -1;\n                    } else {\n                        _.slideOffset = ((_.slideCount % _.options.slidesToScroll) * _.slideWidth) * -1;\n                        verticalOffset = ((_.slideCount % _.options.slidesToScroll) * verticalHeight) * -1;\n                    }\n                }\n            }\n        } else {\n            if(slideIndex + _.options.slidesToShow > _.slideCount) {\n                _.slideOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * _.slideWidth;\n                verticalOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * verticalHeight;\n            }\n        }\n\n        if (_.slideCount <= _.options.slidesToShow){\n            _.slideOffset = 0;\n            verticalOffset = 0;\n        }\n\n        if (_.options.centerMode === true && _.options.infinite === true) {\n            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2) - _.slideWidth;\n        } else if (_.options.centerMode === true) {\n            _.slideOffset = 0;\n            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2);\n        }\n\n        if (_.options.vertical === false) {\n            targetLeft = ((slideIndex * _.slideWidth) * -1) + _.slideOffset;\n        } else {\n            targetLeft = ((slideIndex * verticalHeight) * -1) + verticalOffset;\n        }\n\n        if (_.options.variableWidth === true) {\n\n            if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {\n                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);\n            } else {\n                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow);\n            }\n\n            targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;\n\n            if (_.options.centerMode === true) {\n                if(_.options.infinite === false) {\n                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);\n                } else {\n                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow + 1);\n                }\n                targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;\n                targetLeft += (_.$list.width() - targetSlide.outerWidth()) / 2;\n            }\n        }\n\n        return targetLeft;\n\n    };\n\n    Slick.prototype.getOption = Slick.prototype.slickGetOption = function(option) {\n\n        var _ = this;\n\n        return _.options[option];\n\n    };\n\n    Slick.prototype.getNavigableIndexes = function() {\n\n        var _ = this, breakPoint = 0, counter = 0, indexes = [], max;\n\n        if(_.options.infinite === false) {\n            max = _.slideCount - _.options.slidesToShow + 1;\n            if (_.options.centerMode === true) max = _.slideCount;\n        } else {\n            breakPoint = _.slideCount * -1;\n            counter = _.slideCount * -1;\n            max = _.slideCount * 2;\n        }\n\n        while (breakPoint < max){\n            indexes.push(breakPoint);\n            breakPoint = counter + _.options.slidesToScroll;\n            counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll  : _.options.slidesToShow;\n        }\n\n        return indexes;\n\n    };\n\n    Slick.prototype.getSlick = function() {\n\n        return this;\n\n    };\n\n    Slick.prototype.getSlideCount = function() {\n\n        var _ = this, slidesTraversed, swipedSlide, centerOffset;\n\n        centerOffset = _.options.centerMode === true ? _.slideWidth * Math.floor(_.options.slidesToShow / 2) : 0;\n\n        if(_.options.swipeToSlide === true) {\n            _.$slideTrack.find('.slick-slide').each(function(index, slide){\n                if (slide.offsetLeft - centerOffset + ($(slide).outerWidth() / 2) > (_.swipeLeft * -1)) {\n                    swipedSlide = slide;\n                    return false;\n                }\n            });\n\n            slidesTraversed = Math.abs($(swipedSlide).attr('data-slick-index') - _.currentSlide) || 1;\n\n            return slidesTraversed;\n\n        } else {\n            return _.options.slidesToScroll;\n        }\n\n    };\n\n    Slick.prototype.goTo = Slick.prototype.slickGoTo = function(slide, dontAnimate) {\n\n        var _ = this;\n\n        _.changeSlide({\n            data: {\n                message: 'index',\n                index: parseInt(slide)\n            }\n        }, dontAnimate);\n\n    };\n\n    Slick.prototype.init = function() {\n\n        var _ = this;\n\n        if (!$(_.$slider).hasClass('slick-initialized')) {\n\n            $(_.$slider).addClass('slick-initialized');\n            _.buildOut();\n            _.setProps();\n            _.startLoad();\n            _.loadSlider();\n            _.initializeEvents();\n            _.updateArrows();\n            _.updateDots();\n        }\n\n        _.$slider.trigger(\"init\", [ _ ]);\n\n    };\n\n    Slick.prototype.initArrowEvents = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n            _.$prevArrow.on('click.slick', {\n                message: 'previous'\n            }, _.changeSlide);\n            _.$nextArrow.on('click.slick', {\n                message: 'next'\n            }, _.changeSlide);\n        }\n\n    };\n\n    Slick.prototype.initDotEvents = function() {\n\n        var _ = this;\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n            $('li', _.$dots).on('click.slick', {\n                message: 'index'\n            }, _.changeSlide);\n        }\n\n        if (_.options.dots === true && _.options.pauseOnDotsHover === true && _.options.autoplay === true) {\n            $('li', _.$dots)\n                .on('mouseenter.slick', function(){\n                    _.paused = true;\n                    _.autoPlayClear();\n                })\n                .on('mouseleave.slick', function(){\n                    _.paused = false;\n                    _.autoPlay();\n                });\n        }\n\n    };\n\n    Slick.prototype.initializeEvents = function() {\n\n        var _ = this;\n\n        _.initArrowEvents();\n\n        _.initDotEvents();\n\n        _.$list.on('touchstart.slick mousedown.slick', {\n            action: 'start'\n        }, _.swipeHandler);\n        _.$list.on('touchmove.slick mousemove.slick', {\n            action: 'move'\n        }, _.swipeHandler);\n        _.$list.on('touchend.slick mouseup.slick', {\n            action: 'end'\n        }, _.swipeHandler);\n        _.$list.on('touchcancel.slick mouseleave.slick', {\n            action: 'end'\n        }, _.swipeHandler);\n\n        _.$list.on('click.slick', _.clickHandler);\n\n        if (_.options.autoplay === true) {\n\n            $(document).on(_.visibilityChange, function(){\n                _.visibility();\n            });\n\n            if( _.options.pauseOnHover === true ) {\n\n                _.$list.on('mouseenter.slick', function(){\n                    _.paused = true;\n                    _.autoPlayClear();\n                });\n                _.$list.on('mouseleave.slick', function(){\n                    _.paused = false;\n                    _.autoPlay();\n                });\n\n            }\n\n        }\n\n        if(_.options.accessibility === true) {\n            _.$list.on('keydown.slick', _.keyHandler);\n        }\n\n        if(_.options.focusOnSelect === true) {\n            $(_.$slideTrack).children().on('click.slick', _.selectHandler);\n        }\n\n        $(window).on('orientationchange.slick.slick-' + _.instanceUid, function() {\n            _.checkResponsive();\n            _.setPosition();\n        });\n\n        $(window).on('resize.slick.slick-' + _.instanceUid, function() {\n            if ($(window).width() !== _.windowWidth) {\n                clearTimeout(_.windowDelay);\n                _.windowDelay = window.setTimeout(function() {\n                    _.windowWidth = $(window).width();\n                    _.checkResponsive();\n                    _.setPosition();\n                }, 50);\n            }\n        });\n\n        $('*[draggable!=true]', _.$slideTrack).on('dragstart', function(e){ e.preventDefault(); });\n\n        $(window).on('load.slick.slick-' + _.instanceUid, _.setPosition);\n        $(document).on('ready.slick.slick-' + _.instanceUid, _.setPosition);\n\n    };\n\n    Slick.prototype.initUI = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$prevArrow.show();\n            _.$nextArrow.show();\n\n        }\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$dots.show();\n\n        }\n\n        if (_.options.autoplay === true) {\n\n            _.autoPlay();\n\n        }\n\n    };\n\n    Slick.prototype.keyHandler = function(event) {\n\n        var _ = this;\n\n        if (event.keyCode === 37 && _.options.accessibility === true) {\n            _.changeSlide({\n                data: {\n                    message: 'previous'\n                }\n            });\n        } else if (event.keyCode === 39 && _.options.accessibility === true) {\n            _.changeSlide({\n                data: {\n                    message: 'next'\n                }\n            });\n        }\n\n    };\n\n    Slick.prototype.lazyLoad = function() {\n\n        var _ = this,\n            loadRange, cloneRange, rangeStart, rangeEnd;\n\n        function loadImages(imagesScope) {\n            $('img[data-lazy]', imagesScope).each(function() {\n                var image = $(this),\n                    imageSource = $(this).attr('data-lazy');\n\n                image\n                  .load(function() { image.animate({ opacity: 1 }, 200); })\n                  .css({ opacity: 0 })\n                  .attr('src', imageSource)\n                  .removeAttr('data-lazy')\n                  .removeClass('slick-loading');\n            });\n        }\n\n        if (_.options.centerMode === true) {\n            if (_.options.infinite === true) {\n                rangeStart = _.currentSlide + (_.options.slidesToShow/2 + 1);\n                rangeEnd = rangeStart + _.options.slidesToShow + 2;\n            } else {\n                rangeStart = Math.max(0, _.currentSlide - (_.options.slidesToShow/2 + 1));\n                rangeEnd = 2 + (_.options.slidesToShow/2 + 1) + _.currentSlide;\n            }\n        } else {\n            rangeStart = _.options.infinite ? _.options.slidesToShow + _.currentSlide : _.currentSlide;\n            rangeEnd = rangeStart + _.options.slidesToShow;\n            if (_.options.fade === true ) {\n                if(rangeStart > 0) rangeStart--;\n                if(rangeEnd <= _.slideCount) rangeEnd++;\n            }\n        }\n\n        loadRange = _.$slider.find('.slick-slide').slice(rangeStart, rangeEnd);\n        loadImages(loadRange);\n\n          if (_.slideCount <= _.options.slidesToShow){\n              cloneRange = _.$slider.find('.slick-slide');\n              loadImages(cloneRange);\n          }else\n        if (_.currentSlide >= _.slideCount - _.options.slidesToShow) {\n            cloneRange = _.$slider.find('.slick-cloned').slice(0, _.options.slidesToShow);\n            loadImages(cloneRange);\n        } else if (_.currentSlide === 0) {\n            cloneRange = _.$slider.find('.slick-cloned').slice(_.options.slidesToShow * -1);\n            loadImages(cloneRange);\n        }\n\n    };\n\n    Slick.prototype.loadSlider = function() {\n\n        var _ = this;\n\n        _.setPosition();\n\n        _.$slideTrack.css({\n            opacity: 1\n        });\n\n        _.$slider.removeClass('slick-loading');\n\n        _.initUI();\n\n        if (_.options.lazyLoad === 'progressive') {\n            _.progressiveLazyLoad();\n        }\n\n    };\n\n    Slick.prototype.next = Slick.prototype.slickNext = function() {\n\n        var _ = this;\n\n        _.changeSlide({\n            data: {\n                message: 'next'\n            }\n        });\n\n    };\n\n    Slick.prototype.pause = Slick.prototype.slickPause = function() {\n\n        var _ = this;\n\n        _.autoPlayClear();\n        _.paused = true;\n\n    };\n\n    Slick.prototype.play = Slick.prototype.slickPlay = function() {\n\n        var _ = this;\n\n        _.paused = false;\n        _.autoPlay();\n\n    };\n\n    Slick.prototype.postSlide = function(index) {\n\n        var _ = this;\n\n        _.$slider.trigger(\"afterChange\", [ _, index]);\n\n        _.animating = false;\n\n        _.setPosition();\n\n        _.swipeLeft = null;\n\n        if (_.options.autoplay === true && _.paused === false) {\n            _.autoPlay();\n        }\n\n    };\n\n    Slick.prototype.prev = Slick.prototype.slickPrev = function() {\n\n        var _ = this;\n\n        _.changeSlide({\n            data: {\n                message: 'previous'\n            }\n        });\n\n    };\n\n    Slick.prototype.progressiveLazyLoad = function() {\n\n        var _ = this,\n            imgCount, targetImage;\n\n        imgCount = $('img[data-lazy]', _.$slider).length;\n\n        if (imgCount > 0) {\n            targetImage = $('img[data-lazy]', _.$slider).first();\n            targetImage.attr('src', targetImage.attr('data-lazy')).removeClass('slick-loading').load(function() {\n                targetImage.removeAttr('data-lazy');\n                _.progressiveLazyLoad();\n\n                if( _.options.adaptiveHeight === true ) {\n                    _.setPosition();\n                }\n            })\n         .error(function () {\n          targetImage.removeAttr('data-lazy');\n          _.progressiveLazyLoad();\n         });\n        }\n\n    };\n\n    Slick.prototype.refresh = function() {\n\n        var _ = this,\n            currentSlide = _.currentSlide;\n\n        _.destroy();\n\n        $.extend(_, _.initials);\n\n        _.init();\n\n        _.changeSlide({\n            data: {\n                message: 'index',\n                index: currentSlide\n            }\n        }, true);\n\n    };\n\n    Slick.prototype.reinit = function() {\n\n        var _ = this;\n\n        _.$slides = _.$slideTrack.children(_.options.slide).addClass(\n            'slick-slide');\n\n        _.slideCount = _.$slides.length;\n\n        if (_.currentSlide >= _.slideCount && _.currentSlide !== 0) {\n            _.currentSlide = _.currentSlide - _.options.slidesToScroll;\n        }\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            _.currentSlide = 0;\n        }\n\n        _.setProps();\n\n        _.setupInfinite();\n\n        _.buildArrows();\n\n        _.updateArrows();\n\n        _.initArrowEvents();\n\n        _.buildDots();\n\n        _.updateDots();\n\n        _.initDotEvents();\n\n        if(_.options.focusOnSelect === true) {\n            $(_.$slideTrack).children().on('click.slick', _.selectHandler);\n        }\n\n        _.setSlideClasses(0);\n\n        _.setPosition();\n\n        _.$slider.trigger(\"reInit\", [ _ ]);\n\n    };\n\n    Slick.prototype.removeSlide = Slick.prototype.slickRemove = function(index, removeBefore, removeAll) {\n\n        var _ = this;\n\n        if (typeof(index) === 'boolean') {\n            removeBefore = index;\n            index = removeBefore === true ? 0 : _.slideCount - 1;\n        } else {\n            index = removeBefore === true ? --index : index;\n        }\n\n        if (_.slideCount < 1 || index < 0 || index > _.slideCount - 1) {\n            return false;\n        }\n\n        _.unload();\n\n        if(removeAll === true) {\n            _.$slideTrack.children().remove();\n        } else {\n            _.$slideTrack.children(this.options.slide).eq(index).remove();\n        }\n\n        _.$slides = _.$slideTrack.children(this.options.slide);\n\n        _.$slideTrack.children(this.options.slide).detach();\n\n        _.$slideTrack.append(_.$slides);\n\n        _.$slidesCache = _.$slides;\n\n        _.reinit();\n\n    };\n\n    Slick.prototype.setCSS = function(position) {\n\n        var _ = this,\n            positionProps = {}, x, y;\n\n        if (_.options.rtl === true) {\n            position = -position;\n        }\n        x = _.positionProp == 'left' ? Math.ceil(position) + 'px' : '0px';\n        y = _.positionProp == 'top' ? Math.ceil(position) + 'px' : '0px';\n\n        positionProps[_.positionProp] = position;\n\n        if (_.transformsEnabled === false) {\n            _.$slideTrack.css(positionProps);\n        } else {\n            positionProps = {};\n            if (_.cssTransitions === false) {\n                positionProps[_.animType] = 'translate(' + x + ', ' + y + ')';\n                _.$slideTrack.css(positionProps);\n            } else {\n                positionProps[_.animType] = 'translate3d(' + x + ', ' + y + ', 0px)';\n                _.$slideTrack.css(positionProps);\n            }\n        }\n\n    };\n\n    Slick.prototype.setDimensions = function() {\n\n        var _ = this;\n\n        if (_.options.vertical === false) {\n            if (_.options.centerMode === true) {\n                _.$list.css({\n                    padding: ('0px ' + _.options.centerPadding)\n                });\n            }\n        } else {\n            _.$list.height(_.$slides.first().outerHeight(true) * _.options.slidesToShow);\n            if (_.options.centerMode === true) {\n                _.$list.css({\n                    padding: (_.options.centerPadding + ' 0px')\n                });\n            }\n        }\n\n        _.listWidth = _.$list.width();\n        _.listHeight = _.$list.height();\n\n\n        if(_.options.vertical === false && _.options.variableWidth === false) {\n            _.slideWidth = Math.ceil(_.listWidth / _.options.slidesToShow);\n            _.$slideTrack.width(Math.ceil((_.slideWidth * _.$slideTrack.children('.slick-slide').length)));\n\n        } else if (_.options.variableWidth === true) {\n            var trackWidth = 0;\n            _.slideWidth = Math.ceil(_.listWidth / _.options.slidesToShow);\n            _.$slideTrack.children('.slick-slide').each(function(){\n                trackWidth += _.listWidth;\n            });\n            _.$slideTrack.width(Math.ceil(trackWidth) + 1);\n        } else {\n            _.slideWidth = Math.ceil(_.listWidth);\n            _.$slideTrack.height(Math.ceil((_.$slides.first().outerHeight(true) * _.$slideTrack.children('.slick-slide').length)));\n        }\n\n        var offset = _.$slides.first().outerWidth(true) - _.$slides.first().width();\n        if (_.options.variableWidth === false) _.$slideTrack.children('.slick-slide').width(_.slideWidth - offset);\n\n    };\n\n    Slick.prototype.setFade = function() {\n\n        var _ = this,\n            targetLeft;\n\n        _.$slides.each(function(index, element) {\n            targetLeft = (_.slideWidth * index) * -1;\n            if (_.options.rtl === true) {\n                $(element).css({\n                    position: 'relative',\n                    right: targetLeft,\n                    top: 0,\n                    zIndex: 800,\n                    opacity: 0\n                });\n            } else {\n                $(element).css({\n                    position: 'relative',\n                    left: targetLeft,\n                    top: 0,\n                    zIndex: 800,\n                    opacity: 0\n                });\n            }\n        });\n\n        _.$slides.eq(_.currentSlide).css({\n            zIndex: 900,\n            opacity: 1\n        });\n\n    };\n\n    Slick.prototype.setHeight = function() {\n\n        var _ = this;\n\n        if(_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {\n            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);\n            _.$list.css('height', targetHeight);\n        }\n\n    };\n\n    Slick.prototype.setOption = Slick.prototype.slickSetOption = function(option, value, refresh) {\n\n        var _ = this;\n        _.options[option] = value;\n\n        if (refresh === true) {\n            _.unload();\n            _.reinit();\n        }\n\n    };\n\n    Slick.prototype.setPosition = function() {\n\n        var _ = this;\n\n        _.setDimensions();\n\n        _.setHeight();\n\n        if (_.options.fade === false) {\n            _.setCSS(_.getLeft(_.currentSlide));\n        } else {\n            _.setFade();\n        }\n\n        _.$slider.trigger(\"setPosition\", [ _ ]);\n\n    };\n\n    Slick.prototype.setProps = function() {\n\n        var _ = this,\n            bodyStyle = document.body.style;\n\n        _.positionProp = _.options.vertical === true ? 'top' : 'left';\n\n        if (_.positionProp === 'top') {\n            _.$slider.addClass('slick-vertical');\n        } else {\n            _.$slider.removeClass('slick-vertical');\n        }\n\n        if (bodyStyle.WebkitTransition !== undefined ||\n            bodyStyle.MozTransition !== undefined ||\n            bodyStyle.msTransition !== undefined) {\n            if(_.options.useCSS === true) {\n                _.cssTransitions = true;\n            }\n        }\n\n        if (bodyStyle.OTransform !== undefined) {\n            _.animType = 'OTransform';\n            _.transformType = \"-o-transform\";\n            _.transitionType = 'OTransition';\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;\n        }\n        if (bodyStyle.MozTransform !== undefined) {\n            _.animType = 'MozTransform';\n            _.transformType = \"-moz-transform\";\n            _.transitionType = 'MozTransition';\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.MozPerspective === undefined) _.animType = false;\n        }\n        if (bodyStyle.webkitTransform !== undefined) {\n            _.animType = 'webkitTransform';\n            _.transformType = \"-webkit-transform\";\n            _.transitionType = 'webkitTransition';\n            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;\n        }\n        if (bodyStyle.msTransform !== undefined) {\n            _.animType = 'msTransform';\n            _.transformType = \"-ms-transform\";\n            _.transitionType = 'msTransition';\n            if (bodyStyle.msTransform === undefined) _.animType = false;\n        }\n        if (bodyStyle.transform !== undefined && _.animType !== false) {\n            _.animType = 'transform';\n            _.transformType = \"transform\";\n            _.transitionType = 'transition';\n        }\n        _.transformsEnabled = (_.animType !== null && _.animType !== false);\n\n    };\n\n\n    Slick.prototype.setSlideClasses = function(index) {\n\n        var _ = this,\n            centerOffset, allSlides, indexOffset, remainder;\n\n        _.$slider.find('.slick-slide').removeClass('slick-active').attr(\"aria-hidden\",\"true\").removeClass('slick-center');\n        allSlides = _.$slider.find('.slick-slide');\n\n        if (_.options.centerMode === true) {\n\n            centerOffset = Math.floor(_.options.slidesToShow / 2);\n\n            if(_.options.infinite === true) {\n\n                if (index >= centerOffset && index <= (_.slideCount - 1) - centerOffset) {\n                    _.$slides.slice(index - centerOffset, index + centerOffset + 1).addClass('slick-active').attr(\"aria-hidden\",\"false\");\n                } else {\n                    indexOffset = _.options.slidesToShow + index;\n                    allSlides.slice(indexOffset - centerOffset + 1, indexOffset + centerOffset + 2).addClass('slick-active').attr(\"aria-hidden\",\"false\");\n                }\n\n                if (index === 0) {\n                    allSlides.eq(allSlides.length - 1 - _.options.slidesToShow).addClass('slick-center');\n                } else if (index === _.slideCount - 1) {\n                    allSlides.eq(_.options.slidesToShow).addClass('slick-center');\n                }\n\n            }\n\n            _.$slides.eq(index).addClass('slick-center');\n\n        } else {\n\n            if (index >= 0 && index <= (_.slideCount - _.options.slidesToShow)) {\n                _.$slides.slice(index, index + _.options.slidesToShow).addClass('slick-active').attr(\"aria-hidden\",\"false\");\n            } else if ( allSlides.length <= _.options.slidesToShow ) {\n                allSlides.addClass('slick-active').attr(\"aria-hidden\",\"false\");\n            } else {\n                remainder = _.slideCount%_.options.slidesToShow;\n                indexOffset = _.options.infinite === true ? _.options.slidesToShow + index : index;\n                if(_.options.slidesToShow == _.options.slidesToScroll && (_.slideCount - index) < _.options.slidesToShow) {\n                    allSlides.slice(indexOffset-(_.options.slidesToShow-remainder), indexOffset + remainder).addClass('slick-active').attr(\"aria-hidden\",\"false\");\n                } else {\n                    allSlides.slice(indexOffset, indexOffset + _.options.slidesToShow).addClass('slick-active').attr(\"aria-hidden\",\"false\");\n                }\n            }\n\n        }\n\n        if (_.options.lazyLoad === 'ondemand') {\n            _.lazyLoad();\n        }\n\n    };\n\n    Slick.prototype.setupInfinite = function() {\n\n        var _ = this,\n            i, slideIndex, infiniteCount;\n\n        if (_.options.fade === true) {\n            _.options.centerMode = false;\n        }\n\n        if (_.options.infinite === true && _.options.fade === false) {\n\n            slideIndex = null;\n\n            if (_.slideCount > _.options.slidesToShow) {\n\n                if (_.options.centerMode === true) {\n                    infiniteCount = _.options.slidesToShow + 1;\n                } else {\n                    infiniteCount = _.options.slidesToShow;\n                }\n\n                for (i = _.slideCount; i > (_.slideCount -\n                    infiniteCount); i -= 1) {\n                    slideIndex = i - 1;\n                    $(_.$slides[slideIndex]).clone(true).attr('id', '')\n                        .attr('data-slick-index', slideIndex-_.slideCount)\n                        .prependTo(_.$slideTrack).addClass('slick-cloned');\n                }\n                for (i = 0; i < infiniteCount; i += 1) {\n                    slideIndex = i;\n                    $(_.$slides[slideIndex]).clone(true).attr('id', '')\n                        .attr('data-slick-index', slideIndex+_.slideCount)\n                        .appendTo(_.$slideTrack).addClass('slick-cloned');\n                }\n                _.$slideTrack.find('.slick-cloned').find('[id]').each(function() {\n                    $(this).attr('id', '');\n                });\n\n            }\n\n        }\n\n    };\n\n    Slick.prototype.selectHandler = function(event) {\n\n        var _ = this;\n        var index = parseInt($(event.target).parents('.slick-slide').attr(\"data-slick-index\"));\n        if(!index) index = 0;\n\n        if(_.slideCount <= _.options.slidesToShow){\n            _.$slider.find('.slick-slide').removeClass('slick-active').attr(\"aria-hidden\",\"true\");\n            _.$slides.eq(index).addClass('slick-active').attr(\"aria-hidden\",\"false\");\n            if(_.options.centerMode === true) {\n                _.$slider.find('.slick-slide').removeClass('slick-center');\n                _.$slides.eq(index).addClass('slick-center');\n            }\n            _.asNavFor(index);\n            return;\n        }\n        _.slideHandler(index);\n\n    };\n\n    Slick.prototype.slideHandler = function(index,sync,dontAnimate) {\n\n        var targetSlide, animSlide, oldSlide, slideLeft, targetLeft = null,\n            _ = this;\n\n        sync = sync || false;\n\n        if (_.animating === true && _.options.waitForAnimate === true) {\n            return;\n        }\n\n        if (_.options.fade === true && _.currentSlide === index) {\n            return;\n        }\n\n        if (_.slideCount <= _.options.slidesToShow) {\n            return;\n        }\n\n        if (sync === false) {\n            _.asNavFor(index);\n        }\n\n        targetSlide = index;\n        targetLeft = _.getLeft(targetSlide);\n        slideLeft = _.getLeft(_.currentSlide);\n\n        _.currentLeft = _.swipeLeft === null ? slideLeft : _.swipeLeft;\n\n        if (_.options.infinite === false && _.options.centerMode === false && (index < 0 || index > _.getDotCount() * _.options.slidesToScroll)) {\n            if(_.options.fade === false) {\n                targetSlide = _.currentSlide;\n                if(dontAnimate!==true) {\n                    _.animateSlide(slideLeft, function() {\n                        _.postSlide(targetSlide);\n                    });\n                } else {\n                    _.postSlide(targetSlide);\n                }\n            }\n            return;\n        } else if (_.options.infinite === false && _.options.centerMode === true && (index < 0 || index > (_.slideCount - _.options.slidesToScroll))) {\n            if(_.options.fade === false) {\n                targetSlide = _.currentSlide;\n                if(dontAnimate!==true) {\n                    _.animateSlide(slideLeft, function() {\n                        _.postSlide(targetSlide);\n                    });\n                } else {\n                    _.postSlide(targetSlide);\n                }\n            }\n            return;\n        }\n\n        if (_.options.autoplay === true) {\n            clearInterval(_.autoPlayTimer);\n        }\n\n        if (targetSlide < 0) {\n            if (_.slideCount % _.options.slidesToScroll !== 0) {\n                animSlide = _.slideCount - (_.slideCount % _.options.slidesToScroll);\n            } else {\n                animSlide = _.slideCount + targetSlide;\n            }\n        } else if (targetSlide >= _.slideCount) {\n            if (_.slideCount % _.options.slidesToScroll !== 0) {\n                animSlide = 0;\n            } else {\n                animSlide = targetSlide - _.slideCount;\n            }\n        } else {\n            animSlide = targetSlide;\n        }\n\n        _.animating = true;\n\n        _.$slider.trigger(\"beforeChange\", [ _ , _.currentSlide, animSlide]);\n\n        oldSlide = _.currentSlide;\n        _.currentSlide = animSlide;\n\n        _.setSlideClasses(_.currentSlide);\n\n        _.updateDots();\n        _.updateArrows();\n\n        if (_.options.fade === true) {\n            if(dontAnimate!==true) {\n                _.fadeSlide(animSlide, function() {\n                    _.postSlide(animSlide);\n                });\n            } else {\n                _.postSlide(animSlide);\n            }\n            _.animateHeight();\n            return;\n        }\n\n        if(dontAnimate!==true) {\n            _.animateSlide(targetLeft, function() {\n                _.postSlide(animSlide);\n            });\n        } else {\n            _.postSlide(animSlide);\n        }\n\n    };\n\n    Slick.prototype.startLoad = function() {\n\n        var _ = this;\n\n        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$prevArrow.hide();\n            _.$nextArrow.hide();\n\n        }\n\n        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {\n\n            _.$dots.hide();\n\n        }\n\n        _.$slider.addClass('slick-loading');\n\n    };\n\n    Slick.prototype.swipeDirection = function() {\n\n        var xDist, yDist, r, swipeAngle, _ = this;\n\n        xDist = _.touchObject.startX - _.touchObject.curX;\n        yDist = _.touchObject.startY - _.touchObject.curY;\n        r = Math.atan2(yDist, xDist);\n\n        swipeAngle = Math.round(r * 180 / Math.PI);\n        if (swipeAngle < 0) {\n            swipeAngle = 360 - Math.abs(swipeAngle);\n        }\n\n        if ((swipeAngle <= 45) && (swipeAngle >= 0)) {\n            return (_.options.rtl === false ? 'left' : 'right');\n        }\n        if ((swipeAngle <= 360) && (swipeAngle >= 315)) {\n            return (_.options.rtl === false ? 'left' : 'right');\n        }\n        if ((swipeAngle >= 135) && (swipeAngle <= 225)) {\n            return (_.options.rtl === false ? 'right' : 'left');\n        }\n\n        return 'vertical';\n\n    };\n\n    Slick.prototype.swipeEnd = function(event) {\n\n        var _ = this, slideCount;\n\n        _.dragging = false;\n\n        _.shouldClick = (_.touchObject.swipeLength > 10) ? false : true;\n\n        if (_.touchObject.curX === undefined) {\n            return false;\n        }\n\n        if (_.touchObject.edgeHit === true) {\n            _.$slider.trigger(\"edge\", [  _, _.swipeDirection()]);\n        }\n\n        if (_.touchObject.swipeLength >= _.touchObject.minSwipe) {\n\n            switch (_.swipeDirection()) {\n                case 'left':\n                    slideCount = _.options.swipeToSlide ? _.checkNavigable(_.currentSlide + _.getSlideCount()) : _.currentSlide + _.getSlideCount();\n                    _.slideHandler(slideCount);\n                    _.currentDirection = 0;\n                    _.touchObject = {};\n                    _.$slider.trigger(\"swipe\", [ _, \"left\"]);\n                    break;\n\n                case 'right':\n                    slideCount = _.options.swipeToSlide ? _.checkNavigable(_.currentSlide - _.getSlideCount()) : _.currentSlide - _.getSlideCount();\n                    _.slideHandler(slideCount);\n                    _.currentDirection = 1;\n                    _.touchObject = {};\n                    _.$slider.trigger(\"swipe\", [ _, \"right\"]);\n                    break;\n            }\n        } else {\n            if(_.touchObject.startX !== _.touchObject.curX) {\n                _.slideHandler(_.currentSlide);\n                _.touchObject = {};\n            }\n        }\n\n    };\n\n    Slick.prototype.swipeHandler = function(event) {\n\n        var _ = this;\n\n        if ((_.options.swipe === false) || ('ontouchend' in document && _.options.swipe === false)) {\n           return;\n        } else if (_.options.draggable === false && event.type.indexOf('mouse') !== -1) {\n           return;\n        }\n\n        _.touchObject.fingerCount = event.originalEvent && event.originalEvent.touches !== undefined ?\n            event.originalEvent.touches.length : 1;\n\n        _.touchObject.minSwipe = _.listWidth / _.options\n            .touchThreshold;\n\n        switch (event.data.action) {\n\n            case 'start':\n                _.swipeStart(event);\n                break;\n\n            case 'move':\n                _.swipeMove(event);\n                break;\n\n            case 'end':\n                _.swipeEnd(event);\n                break;\n\n        }\n\n    };\n\n    Slick.prototype.swipeMove = function(event) {\n\n        var _ = this,\n            edgeWasHit = false,\n            curLeft, swipeDirection, swipeLength, positionOffset, touches;\n\n        touches = event.originalEvent !== undefined ? event.originalEvent.touches : null;\n\n        if (!_.dragging || touches && touches.length !== 1) {\n            return false;\n        }\n\n        curLeft = _.getLeft(_.currentSlide);\n\n        _.touchObject.curX = touches !== undefined ? touches[0].pageX : event.clientX;\n        _.touchObject.curY = touches !== undefined ? touches[0].pageY : event.clientY;\n\n        _.touchObject.swipeLength = Math.round(Math.sqrt(\n            Math.pow(_.touchObject.curX - _.touchObject.startX, 2)));\n\n        swipeDirection = _.swipeDirection();\n\n        if (swipeDirection === 'vertical') {\n            return;\n        }\n\n        if (event.originalEvent !== undefined && _.touchObject.swipeLength > 4) {\n            event.preventDefault();\n        }\n\n        positionOffset = (_.options.rtl === false ? 1 : -1) * (_.touchObject.curX > _.touchObject.startX ? 1 : -1);\n\n        swipeLength = _.touchObject.swipeLength;\n\n        _.touchObject.edgeHit = false;\n\n        if (_.options.infinite === false) {\n            if ((_.currentSlide === 0 && swipeDirection === \"right\") || (_.currentSlide >= _.getDotCount() && swipeDirection === \"left\")) {\n                swipeLength = _.touchObject.swipeLength * _.options.edgeFriction;\n                _.touchObject.edgeHit = true;\n            }\n        }\n\n        if (_.options.vertical === false) {\n            _.swipeLeft = curLeft + swipeLength * positionOffset;\n        } else {\n            _.swipeLeft = curLeft + (swipeLength * (_.$list.height() / _.listWidth)) * positionOffset;\n        }\n\n        if (_.options.fade === true || _.options.touchMove === false) {\n            return false;\n        }\n\n        if (_.animating === true) {\n            _.swipeLeft = null;\n            return false;\n        }\n\n        _.setCSS(_.swipeLeft);\n\n    };\n\n    Slick.prototype.swipeStart = function(event) {\n\n        var _ = this,\n            touches;\n\n        if (_.touchObject.fingerCount !== 1 || _.slideCount <= _.options.slidesToShow) {\n            _.touchObject = {};\n            return false;\n        }\n\n        if (event.originalEvent !== undefined && event.originalEvent.touches !== undefined) {\n            touches = event.originalEvent.touches[0];\n        }\n\n        _.touchObject.startX = _.touchObject.curX = touches !== undefined ? touches.pageX : event.clientX;\n        _.touchObject.startY = _.touchObject.curY = touches !== undefined ? touches.pageY : event.clientY;\n\n        _.dragging = true;\n\n    };\n\n    Slick.prototype.unfilterSlides = Slick.prototype.slickUnfilter = function() {\n\n        var _ = this;\n\n        if (_.$slidesCache !== null) {\n\n            _.unload();\n\n            _.$slideTrack.children(this.options.slide).detach();\n\n            _.$slidesCache.appendTo(_.$slideTrack);\n\n            _.reinit();\n\n        }\n\n    };\n\n    Slick.prototype.unload = function() {\n\n        var _ = this;\n\n        $('.slick-cloned', _.$slider).remove();\n        if (_.$dots) {\n            _.$dots.remove();\n        }\n        if (_.$prevArrow && (typeof _.options.prevArrow !== 'object')) {\n            _.$prevArrow.remove();\n        }\n        if (_.$nextArrow && (typeof _.options.nextArrow !== 'object')) {\n            _.$nextArrow.remove();\n        }\n        _.$slides.removeClass('slick-slide slick-active slick-visible').attr(\"aria-hidden\",\"true\").css('width', '');\n\n    };\n\n    Slick.prototype.unslick = function() {\n\n        var _ = this;\n        _.destroy();\n\n    };\n\n    Slick.prototype.updateArrows = function() {\n\n        var _ = this, centerOffset;\n\n        centerOffset = Math.floor(_.options.slidesToShow / 2);\n\n        if (_.options.arrows === true && _.options.infinite !==\n            true && _.slideCount > _.options.slidesToShow) {\n            _.$prevArrow.removeClass('slick-disabled');\n            _.$nextArrow.removeClass('slick-disabled');\n            if (_.currentSlide === 0) {\n                _.$prevArrow.addClass('slick-disabled');\n                _.$nextArrow.removeClass('slick-disabled');\n            } else if (_.currentSlide >= _.slideCount - _.options.slidesToShow && _.options.centerMode === false) {\n                _.$nextArrow.addClass('slick-disabled');\n                _.$prevArrow.removeClass('slick-disabled');\n            } else if (_.currentSlide >= _.slideCount - 1 && _.options.centerMode === true) {\n                _.$nextArrow.addClass('slick-disabled');\n                _.$prevArrow.removeClass('slick-disabled');\n            }\n        }\n\n    };\n\n    Slick.prototype.updateDots = function() {\n\n        var _ = this;\n\n        if (_.$dots !== null) {\n\n            _.$dots.find('li').removeClass('slick-active').attr(\"aria-hidden\",\"true\");\n            _.$dots.find('li').eq(Math.floor(_.currentSlide / _.options.slidesToScroll)).addClass('slick-active').attr(\"aria-hidden\",\"false\");\n\n        }\n\n    };\n\n    Slick.prototype.visibility = function() {\n\n        var _ = this;\n\n        if( document[ _.hidden ] ) {\n            _.paused = true;\n            _.autoPlayClear();\n        } else {\n            _.paused = false;\n            _.autoPlay();\n        }\n\n    };\n\n    $.fn.slick = function() {\n        var _ = this, opt = arguments[0], args = Array.prototype.slice.call(arguments,1), l = _.length, i = 0, ret;\n        for(i; i < l; i++) {\n            if (typeof opt == 'object' || typeof opt == 'undefined')\n                _[i].slick =  new Slick(_[i], opt);\n            else\n                ret = _[i].slick[opt].apply(_[i].slick, args);\n                if (typeof ret != 'undefined') return ret;\n        }\n        return _;\n    };\n\n    $(function(){\n        $('[data-slick]').slick();\n    });\n\n}));\n","/*\n    Slip - swiping and reordering in lists of elements on touch screens, no fuss.\n\n    Fires these events on list elements:\n\n        • slip:swipe\n            When swipe has been done and user has lifted finger off the screen.\n            If you execute event.preventDefault() the element will be animated back to original position.\n            Otherwise it will be animated off the list and set to display:none.\n\n        • slip:beforeswipe\n            Fired before first swipe movement starts.\n            If you execute event.preventDefault() then element will not move at all.\n\n        • slip:reorder\n            Element has been dropped in new location. event.detail contains the location:\n                • insertBefore: DOM node before which element has been dropped (null is the end of the list). Use with node.insertBefore().\n                • spliceIndex: Index of element before which current element has been dropped, not counting the element iself.\n                               For use with Array.splice() if the list is reflecting objects in some array.\n\n        • slip:beforereorder\n            When reordering movement starts.\n            Element being reordered gets class `slip-reordering`.\n            If you execute event.preventDefault() then element will not move at all.\n\n        • slip:beforewait\n            If you execute event.preventDefault() then reordering will begin immediately, blocking ability to scroll the page.\n\n        • slip:tap\n            When element was tapped without being swiped/reordered.\n\n        • slip:cancelswipe\n            Fired when the user stops dragging and the element returns to its original position.\n\n\n    Usage:\n\n        CSS:\n            You should set `user-select:none` (and WebKit prefixes, sigh) on list elements,\n            otherwise unstoppable and glitchy text selection in iOS will get in the way.\n\n            You should set `overflow-x: hidden` on the container or body to prevent horizontal scrollbar\n            appearing when elements are swiped off the list.\n\n\n        var list = document.querySelector('ul#slippylist');\n        new Slip(list);\n\n        list.addEventListener('slip:beforeswipe', function(e) {\n            if (shouldNotSwipe(e.target)) e.preventDefault();\n        });\n\n        list.addEventListener('slip:swipe', function(e) {\n            // e.target swiped\n            if (thatWasSwipeToRemove) {\n                e.target.parentNode.removeChild(e.target);\n            } else {\n                e.preventDefault(); // will animate back to original position\n            }\n        });\n\n        list.addEventListener('slip:beforereorder', function(e) {\n            if (shouldNotReorder(e.target)) e.preventDefault();\n        });\n\n        list.addEventListener('slip:reorder', function(e) {\n            // e.target reordered.\n            if (reorderedOK) {\n                e.target.parentNode.insertBefore(e.target, e.detail.insertBefore);\n            } else {\n                e.preventDefault();\n            }\n        });\n\n    Requires:\n        • Touch events\n        • CSS transforms\n        • Function.bind()\n\n    Caveats:\n        • Elements must not change size while reordering or swiping takes place (otherwise it will be visually out of sync)\n*/\n/*! @license\n    Slip.js 1.2.0\n\n    © 2014 Kornel Lesiński <kornel@geekhood.net>. All rights reserved.\n\n    Redistribution and use in source and binary forms, with or without modification,\n    are permitted provided that the following conditions are met:\n\n    1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n    2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and\n       the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n    INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n    DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n    SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n    SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n    WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n    USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nwindow['Slip'] = (function(){\n    'use strict';\n\n    var damnYouChrome = /Chrome\\/[34]/.test(navigator.userAgent); // For bugs that can't be programmatically detected :( Intended to catch all versions of Chrome 30-40\n    var needsBodyHandlerHack = damnYouChrome; // Otherwise I _sometimes_ don't get any touchstart events and only clicks instead.\n\n    /* When dragging elements down in Chrome (tested 34-37) dragged element may appear below stationary elements.\n       Looks like WebKit bug #61824, but iOS Safari doesn't have that problem. */\n    var compositorDoesNotOrderLayers = damnYouChrome;\n\n    // -webkit-mess\n    var testElement = document.createElement('div');\n\n    var transitionPrefix = \"webkitTransition\" in testElement.style ? \"webkitTransition\" : \"transition\";\n    var transformPrefix = \"webkitTransform\" in testElement.style ? \"webkitTransform\" : \"transform\";\n    var transformProperty = transformPrefix === \"webkitTransform\" ? \"-webkit-transform\" : \"transform\";\n    var userSelectPrefix = \"webkitUserSelect\" in testElement.style ? \"webkitUserSelect\" : \"userSelect\";\n\n    testElement.style[transformPrefix] = 'translateZ(0)';\n    var hwLayerMagic = testElement.style[transformPrefix] ? 'translateZ(0) ' : '';\n    var hwTopLayerMagic = testElement.style[transformPrefix] ? 'translateZ(1px) ' : '';\n    testElement = null;\n\n    var globalInstances = 0;\n    var attachedBodyHandlerHack = false;\n    var nullHandler = function(){};\n\n    function Slip(container, options) {\n        if ('string' === typeof container) container = document.querySelector(container);\n        if (!container || !container.addEventListener) throw new Error(\"Please specify DOM node to attach to\");\n\n        if (!this || this === window) return new Slip(container, options);\n\n        this.options = options;\n\n        // Functions used for as event handlers need usable `this` and must not change to be removable\n        this.cancel = this.setState.bind(this, this.states.idle);\n        this.onTouchStart = this.onTouchStart.bind(this);\n        this.onTouchMove = this.onTouchMove.bind(this);\n        this.onTouchEnd = this.onTouchEnd.bind(this);\n        this.onMouseDown = this.onMouseDown.bind(this);\n        this.onMouseMove = this.onMouseMove.bind(this);\n        this.onMouseUp = this.onMouseUp.bind(this);\n        this.onMouseLeave = this.onMouseLeave.bind(this);\n        this.onSelection = this.onSelection.bind(this);\n\n        this.setState(this.states.idle);\n        this.attach(container);\n    }\n\n    function getTransform(node) {\n        var transform = node.style[transformPrefix];\n        if (transform) {\n            return {\n                value:transform,\n                original:transform,\n            };\n        }\n\n        if (window.getComputedStyle) {\n            var style = window.getComputedStyle(node).getPropertyValue(transformProperty);\n            if (style && style !== 'none') return {value:style, original:''};\n        }\n        return {value:'', original:''};\n    }\n\n    function findIndex(target, nodes) {\n      var originalIndex = 0;\n      var listCount = 0;\n\n      for (var i=0; i < nodes.length; i++) {\n        if (nodes[i].nodeType === 1) {\n          listCount++;\n          if (nodes[i] === target.node) {\n            originalIndex = listCount-1;\n          }\n        }\n      }\n\n      return originalIndex;\n    }\n\n    // All functions in states are going to be executed in context of Slip object\n    Slip.prototype = {\n\n        container: null,\n        options: {},\n        state: null,\n\n        target: null, // the tapped/swiped/reordered node with height and backed up styles\n\n        usingTouch: false, // there's no good way to detect touchscreen preference other than receiving a touch event (really, trust me).\n        mouseHandlersAttached: false,\n\n        startPosition: null, // x,y,time where first touch began\n        latestPosition: null, // x,y,time where the finger is currently\n        previousPosition: null, // x,y,time where the finger was ~100ms ago (for velocity calculation)\n\n        canPreventScrolling: false,\n\n        states: {\n            idle: function idleStateInit() {\n                this.target = null;\n                this.usingTouch = false;\n                this.removeMouseHandlers();\n\n                return {\n                    allowTextSelection: true,\n                };\n            },\n\n            undecided: function undecidedStateInit() {\n                this.target.height = this.target.node.offsetHeight;\n                this.target.node.style[transitionPrefix] = '';\n\n                if (!this.dispatch(this.target.originalTarget, 'beforewait')) {\n                  if (this.dispatch(this.target.originalTarget, 'beforereorder')) {\n                    this.setState(this.states.reorder);\n                  }\n                } else {\n                    var holdTimer = setTimeout(function(){\n                        var move = this.getAbsoluteMovement();\n                        if (this.canPreventScrolling && move.x < 15 && move.y < 25) {\n                            if (this.dispatch(this.target.originalTarget, 'beforereorder')) {\n                                this.setState(this.states.reorder);\n                            }\n                        }\n                    }.bind(this), 300);\n                }\n\n                return {\n                    leaveState: function() {\n                        clearTimeout(holdTimer);\n                    },\n\n                    onMove: function() {\n                        var move = this.getAbsoluteMovement();\n\n                        if (move.x > 20 && move.y < Math.max(100, this.target.height)) {\n                            if (this.dispatch(this.target.originalTarget, 'beforeswipe')) {\n                                this.setState(this.states.swipe);\n                                return false;\n                            } else {\n                                this.setState(this.states.idle);\n                            }\n                        }\n                        if (move.y > 20) {\n                            this.setState(this.states.idle);\n                        }\n\n                        // Chrome likes sideways scrolling :(\n                        if (move.x > move.y*1.2) return false;\n                    },\n\n                    onLeave: function() {\n                        this.setState(this.states.idle);\n                    },\n\n                    onEnd: function() {\n                        var allowDefault = this.dispatch(this.target.originalTarget, 'tap');\n                        this.setState(this.states.idle);\n                        return allowDefault;\n                    },\n                };\n            },\n\n            swipe: function swipeStateInit() {\n                var swipeSuccess = false;\n                var container = this.container;\n\n                var originalIndex = findIndex(this.target, this.container.childNodes);\n\n                container.className += ' slip-swiping-container';\n                function removeClass() {\n                    container.className = container.className.replace(/(?:^| )slip-swiping-container/,'');\n                }\n\n                this.target.height = this.target.node.offsetHeight;\n\n                return {\n                    leaveState: function() {\n                        if (swipeSuccess) {\n                            this.animateSwipe(function(target){\n                                target.node.style[transformPrefix] = target.baseTransform.original;\n                                target.node.style[transitionPrefix] = '';\n                                if (this.dispatch(target.node, 'afterswipe')) {\n                                    removeClass();\n                                    return true;\n                                } else {\n                                    this.animateToZero(undefined, target);\n                                }\n                            }.bind(this));\n                        } else {\n                            this.animateToZero(removeClass);\n                            this.dispatch(this.target.node, 'cancelswipe');\n                        }\n                    },\n\n                    onMove: function() {\n                        var move = this.getTotalMovement();\n\n                        if (Math.abs(move.y) < this.target.height+20) {\n                            this.target.node.style[transformPrefix] = 'translate(' + move.x + 'px,0) ' + hwLayerMagic + this.target.baseTransform.value;\n                            return false;\n                        } else {\n                            this.setState(this.states.idle);\n                        }\n                    },\n\n                    onLeave: function() {\n                        this.state.onEnd.call(this);\n                    },\n\n                    onEnd: function() {\n                        var dx = this.latestPosition.x - this.previousPosition.x;\n                        var dy = this.latestPosition.y - this.previousPosition.y;\n                        var velocity = Math.sqrt(dx*dx + dy*dy) / (this.latestPosition.time - this.previousPosition.time + 1);\n\n                        var move = this.getAbsoluteMovement();\n                        var swiped = velocity > 0.6 && move.time > 110;\n\n                        var direction;\n                        if (dx > 0) {\n                            direction = \"right\";\n                        } else {\n                            direction = \"left\";\n                        }\n\n                        if (swiped) {\n                            if (this.dispatch(this.target.node, 'swipe', {direction: direction, originalIndex: originalIndex})) {\n                                swipeSuccess = true; // can't animate here, leaveState overrides anim\n                            }\n                        }\n                        this.setState(this.states.idle);\n                        return !swiped;\n                    },\n                };\n            },\n\n            reorder: function reorderStateInit() {\n                this.target.height = this.target.node.offsetHeight;\n\n                var nodes = this.container.childNodes;\n                var originalIndex = findIndex(this.target, nodes);\n                var mouseOutsideTimer;\n                var zero = this.target.node.offsetTop + this.target.height/2;\n                var otherNodes = [];\n                for(var i=0; i < nodes.length; i++) {\n                    if (nodes[i].nodeType != 1 || nodes[i] === this.target.node) continue;\n                    var t = nodes[i].offsetTop;\n                    nodes[i].style[transitionPrefix] = transformProperty + ' 0.2s ease-in-out';\n                    otherNodes.push({\n                        node: nodes[i],\n                        baseTransform: getTransform(nodes[i]),\n                        pos: t + (t < zero ? nodes[i].offsetHeight : 0) - zero,\n                    });\n                }\n\n                this.target.node.className += ' slip-reordering';\n                this.target.node.style.zIndex = '99999';\n                this.target.node.style[userSelectPrefix] = 'none';\n                if (compositorDoesNotOrderLayers) {\n                    // Chrome's compositor doesn't sort 2D layers\n                    this.container.style.webkitTransformStyle = 'preserve-3d';\n                }\n\n                function setPosition() {\n                    /*jshint validthis:true */\n\n                    if (mouseOutsideTimer) {\n                        // don't care where the mouse is as long as it moves\n                        clearTimeout(mouseOutsideTimer); mouseOutsideTimer = null;\n                    }\n\n                    var move = this.getTotalMovement();\n                    this.target.node.style[transformPrefix] = 'translate(0,' + move.y + 'px) ' + hwTopLayerMagic + this.target.baseTransform.value;\n\n                    var height = this.target.height;\n                    otherNodes.forEach(function(o){\n                        var off = 0;\n                        if (o.pos < 0 && move.y < 0 && o.pos > move.y) {\n                            off = height;\n                        }\n                        else if (o.pos > 0 && move.y > 0 && o.pos < move.y) {\n                            off = -height;\n                        }\n                        // FIXME: should change accelerated/non-accelerated state lazily\n                        o.node.style[transformPrefix] = off ? 'translate(0,'+off+'px) ' + hwLayerMagic + o.baseTransform.value : o.baseTransform.original;\n                    });\n                    return false;\n                }\n\n                setPosition.call(this);\n\n                return {\n                    leaveState: function() {\n                        if (mouseOutsideTimer) clearTimeout(mouseOutsideTimer);\n\n                        if (compositorDoesNotOrderLayers) {\n                            this.container.style.webkitTransformStyle = '';\n                        }\n\n                        this.target.node.className = this.target.node.className.replace(/(?:^| )slip-reordering/,'');\n                        this.target.node.style[userSelectPrefix] = '';\n\n                        this.animateToZero(function(target){\n                            target.node.style.zIndex = '';\n                        });\n                        otherNodes.forEach(function(o){\n                            o.node.style[transformPrefix] = o.baseTransform.original;\n                            o.node.style[transitionPrefix] = ''; // FIXME: animate to new position\n                        });\n                    },\n\n                    onMove: setPosition,\n\n                    onLeave: function() {\n                        // don't let element get stuck if mouse left the window\n                        // but don't cancel immediately as it'd be annoying near window edges\n                        if (mouseOutsideTimer) clearTimeout(mouseOutsideTimer);\n                        mouseOutsideTimer = setTimeout(function(){\n                            mouseOutsideTimer = null;\n                            this.cancel();\n                        }.bind(this), 700);\n                    },\n\n                    onEnd: function() {\n                        var move = this.getTotalMovement();\n                        if (move.y < 0) {\n                            for(var i=0; i < otherNodes.length; i++) {\n                                if (otherNodes[i].pos > move.y) {\n                                    this.dispatch(this.target.node, 'reorder', {spliceIndex:i, insertBefore:otherNodes[i].node, originalIndex: originalIndex});\n                                    break;\n                                }\n                            }\n                        } else {\n                            for(var i=otherNodes.length-1; i >= 0; i--) {\n                                if (otherNodes[i].pos < move.y) {\n                                    this.dispatch(this.target.node, 'reorder', {spliceIndex:i+1, insertBefore:otherNodes[i+1] ? otherNodes[i+1].node : null, originalIndex: originalIndex});\n                                    break;\n                                }\n                            }\n                        }\n                        this.setState(this.states.idle);\n                        return false;\n                    },\n                };\n            },\n        },\n\n        attach: function(container) {\n            globalInstances++;\n            if (this.container) this.detach();\n\n            // In some cases taps on list elements send *only* click events and no touch events. Spotted only in Chrome 32+\n            // Having event listener on body seems to solve the issue (although AFAIK may disable smooth scrolling as a side-effect)\n            if (!attachedBodyHandlerHack && needsBodyHandlerHack) {\n                attachedBodyHandlerHack = true;\n                document.body.addEventListener('touchstart', nullHandler, false);\n            }\n\n            this.container = container;\n            this.otherNodes = [];\n\n            // selection on iOS interferes with reordering\n            document.addEventListener(\"selectionchange\", this.onSelection, false);\n\n            // cancel is called e.g. when iOS detects multitasking gesture\n            this.container.addEventListener('touchcancel', this.cancel, false);\n            this.container.addEventListener('touchstart', this.onTouchStart, false);\n            this.container.addEventListener('touchmove', this.onTouchMove, false);\n            this.container.addEventListener('touchend', this.onTouchEnd, false);\n            this.container.addEventListener('mousedown', this.onMouseDown, false);\n            // mousemove and mouseup are attached dynamically\n        },\n\n        detach: function() {\n            this.cancel();\n\n            this.container.removeEventListener('mousedown', this.onMouseDown, false);\n            this.container.removeEventListener('touchend', this.onTouchEnd, false);\n            this.container.removeEventListener('touchmove', this.onTouchMove, false);\n            this.container.removeEventListener('touchstart', this.onTouchStart, false);\n            this.container.removeEventListener('touchcancel', this.cancel, false);\n\n            document.removeEventListener(\"selectionchange\", this.onSelection, false);\n\n            globalInstances--;\n            if (!globalInstances && attachedBodyHandlerHack) {\n                attachedBodyHandlerHack = false;\n                document.body.removeEventListener('touchstart', nullHandler, false);\n            }\n        },\n\n        setState: function(newStateCtor){\n            if (this.state) {\n                if (this.state.ctor === newStateCtor) return;\n                if (this.state.leaveState) this.state.leaveState.call(this);\n            }\n\n            // Must be re-entrant in case ctor changes state\n            var prevState = this.state;\n            var nextState = newStateCtor.call(this);\n            if (this.state === prevState) {\n                nextState.ctor = newStateCtor;\n                this.state = nextState;\n            }\n        },\n\n        findTargetNode: function(targetNode) {\n            while(targetNode && targetNode.parentNode !== this.container) {\n                targetNode = targetNode.parentNode;\n            }\n            return targetNode;\n        },\n\n        onSelection: function(e) {\n            var isRelated = e.target === document || this.findTargetNode(e);\n            if (!isRelated) return;\n\n            if (e.cancelable || e.defaultPrevented) {\n                if (!this.state.allowTextSelection) {\n                    e.preventDefault();\n                }\n            } else {\n                // iOS doesn't allow selection to be prevented\n                this.setState(this.states.idle);\n            }\n        },\n\n        addMouseHandlers: function() {\n            // unlike touch events, mousemove/up is not conveniently fired on the same element,\n            // but I don't need to listen to unrelated events all the time\n            if (!this.mouseHandlersAttached) {\n                this.mouseHandlersAttached = true;\n                document.documentElement.addEventListener('mouseleave', this.onMouseLeave, false);\n                window.addEventListener('mousemove', this.onMouseMove, true);\n                window.addEventListener('mouseup', this.onMouseUp, true);\n                window.addEventListener('blur', this.cancel, false);\n            }\n        },\n\n        removeMouseHandlers: function() {\n            if (this.mouseHandlersAttached) {\n                this.mouseHandlersAttached = false;\n                document.documentElement.removeEventListener('mouseleave', this.onMouseLeave, false);\n                window.removeEventListener('mousemove', this.onMouseMove, true);\n                window.removeEventListener('mouseup', this.onMouseUp, true);\n                window.removeEventListener('blur', this.cancel, false);\n            }\n        },\n\n        onMouseLeave: function(e) {\n            if (this.usingTouch) return;\n\n            if (e.target === document.documentElement || e.relatedTarget === document.documentElement) {\n                if (this.state.onLeave) {\n                    this.state.onLeave.call(this);\n                }\n            }\n        },\n\n        onMouseDown: function(e) {\n            if (this.usingTouch || e.button != 0 || !this.setTarget(e)) return;\n\n            this.addMouseHandlers(); // mouseup, etc.\n\n            this.canPreventScrolling = true; // or rather it doesn't apply to mouse\n\n            this.startAtPosition({\n                x: e.clientX,\n                y: e.clientY,\n                time: e.timeStamp,\n            });\n        },\n\n        onTouchStart: function(e) {\n            this.usingTouch = true;\n            this.canPreventScrolling = true;\n\n            // This implementation cares only about single touch\n            if (e.touches.length > 1) {\n                this.setState(this.states.idle);\n                return;\n            }\n\n            if (!this.setTarget(e)) return;\n\n            this.startAtPosition({\n                x: e.touches[0].clientX,\n                y: e.touches[0].clientY - window.scrollY,\n                time: e.timeStamp,\n            });\n        },\n\n        setTarget: function(e) {\n            var targetNode = this.findTargetNode(e.target);\n            if (!targetNode) {\n                this.setState(this.states.idle);\n                return false;\n            }\n\n            //check for a scrollable parent\n            var scrollContainer = targetNode.parentNode;\n            while (scrollContainer){\n              if (scrollContainer.scrollHeight > scrollContainer.clientHeight && window.getComputedStyle(scrollContainer)['overflow-y'] != 'visible') break;\n              else scrollContainer = scrollContainer.parentNode;\n            }\n\n            this.target = {\n                originalTarget: e.target,\n                node: targetNode,\n                scrollContainer: scrollContainer,\n                baseTransform: getTransform(targetNode),\n            };\n            return true;\n        },\n\n        startAtPosition: function(pos) {\n            this.startPosition = this.previousPosition = this.latestPosition = pos;\n            this.setState(this.states.undecided);\n        },\n\n        updatePosition: function(e, pos) {\n            if(this.target == null)\n                return;\n            this.latestPosition = pos;\n\n            var triggerOffset = 40,\n                offset = 0;\n\n            var scrollable = this.target.scrollContainer || document.body,\n                containerRect = scrollable.getBoundingClientRect(),\n                targetRect = this.target.node.getBoundingClientRect(),\n                bottomOffset = Math.min(containerRect.bottom, window.innerHeight) - targetRect.bottom,\n                topOffset = targetRect.top - Math.max(containerRect.top, 0);\n\n            if (bottomOffset < triggerOffset){\n              offset = triggerOffset - bottomOffset;\n            }\n            else if (topOffset < triggerOffset){\n              offset = topOffset - triggerOffset;\n            }\n\n            var prevScrollTop = scrollable.scrollTop;\n            scrollable.scrollTop += offset;\n            if (prevScrollTop != scrollable.scrollTop) this.startPosition.y += prevScrollTop-scrollable.scrollTop;\n\n            if (this.state.onMove) {\n                if (this.state.onMove.call(this) === false) {\n                    e.preventDefault();\n                }\n            }\n\n            // sample latestPosition 100ms for velocity\n            if (this.latestPosition.time - this.previousPosition.time > 100) {\n                this.previousPosition = this.latestPosition;\n            }\n        },\n\n        onMouseMove: function(e) {\n            this.updatePosition(e, {\n                x: e.clientX,\n                y: e.clientY,\n                time: e.timeStamp,\n            });\n        },\n\n        onTouchMove: function(e) {\n            this.updatePosition(e, {\n                x: e.touches[0].clientX,\n                y: e.touches[0].clientY - window.scrollY,\n                time: e.timeStamp,\n            });\n\n            // In Apple's touch model only the first move event after touchstart can prevent scrolling (and event.cancelable is broken)\n            this.canPreventScrolling = false;\n        },\n\n        onMouseUp: function(e) {\n            if (this.usingTouch || e.button !== 0) return;\n\n            if (this.state.onEnd && false === this.state.onEnd.call(this)) {\n                e.preventDefault();\n            }\n        },\n\n        onTouchEnd: function(e) {\n            if (e.touches.length > 1) {\n                this.cancel();\n            } else if (this.state.onEnd && false === this.state.onEnd.call(this)) {\n                e.preventDefault();\n            }\n        },\n\n        getTotalMovement: function() {\n            return {\n                x:this.latestPosition.x - this.startPosition.x,\n                y:this.latestPosition.y - this.startPosition.y,\n            };\n        },\n\n        getAbsoluteMovement: function() {\n            return {\n                x: Math.abs(this.latestPosition.x - this.startPosition.x),\n                y: Math.abs(this.latestPosition.y - this.startPosition.y),\n                time:this.latestPosition.time - this.startPosition.time,\n            };\n        },\n\n        dispatch: function(targetNode, eventName, detail) {\n            var event = document.createEvent('CustomEvent');\n            if (event && event.initCustomEvent) {\n                event.initCustomEvent('slip:' + eventName, true, true, detail);\n            } else {\n                event = document.createEvent('Event');\n                event.initEvent('slip:' + eventName, true, true);\n                event.detail = detail;\n            }\n            return targetNode.dispatchEvent(event);\n        },\n\n        getSiblings: function(target) {\n            var siblings = [];\n            var tmp = target.node.nextSibling;\n            while(tmp) {\n                if (tmp.nodeType == 1) siblings.push({\n                    node: tmp,\n                    baseTransform: getTransform(tmp),\n                });\n                tmp = tmp.nextSibling;\n            }\n            return siblings;\n        },\n\n        animateToZero: function(callback, target) {\n            // save, because this.target/container could change during animation\n            target = target || this.target;\n\n           // target.node.style[transitionPrefix] = transformProperty + ' 5s ease-out';\n            target.node.style[transformPrefix] = 'translate(0,0) ' + hwLayerMagic + target.baseTransform.value;\n            setTimeout(function(){\n                target.node.style[transitionPrefix] = '';\n                target.node.style[transformPrefix] = target.baseTransform.original;\n                if (callback) callback.call(this, target);\n            }.bind(this), 101);\n        },\n\n        animateSwipe: function(callback) {\n            var target = this.target;\n            var siblings = this.getSiblings(target);\n            var emptySpaceTransform = 'translate(0,' + this.target.height + 'px) ' + hwLayerMagic + ' ';\n\n            // FIXME: animate with real velocity\n            target.node.style[transitionPrefix] = 'all 0.1s linear';\n            target.node.style[transformPrefix] = ' translate(' + (this.getTotalMovement().x > 0 ? '' : '-') + '100%,0) ' + hwLayerMagic + target.baseTransform.value;\n\n            setTimeout(function(){\n                if (callback.call(this, target)) {\n                    siblings.forEach(function(o){\n                        o.node.style[transitionPrefix] = '';\n                        o.node.style[transformPrefix] = emptySpaceTransform + o.baseTransform.value;\n                    });\n                    setTimeout(function(){\n                        siblings.forEach(function(o){\n                            o.node.style[transitionPrefix] = transformProperty + ' 0.1s ease-in-out';\n                            o.node.style[transformPrefix] = 'translate(0,0) ' + hwLayerMagic + o.baseTransform.value;\n                        });\n                        setTimeout(function(){\n                            siblings.forEach(function(o){\n                                o.node.style[transitionPrefix] = '';\n                                o.node.style[transformPrefix] = o.baseTransform.original;\n                            });\n                        },101);\n                    }, 1);\n                }\n            }.bind(this), 101);\n        },\n    };\n\n    // AMD\n    if ('function' === typeof define && define.amd) {\n        define(function(){\n            return Slip;\n        });\n    }\n    return Slip;\n})();\n","\nTemplate.__checkName(\"ionActionSheet\");\nTemplate[\"ionActionSheet\"] = new Template(\"Template.ionActionSheet\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"action-sheet-backdrop\"\n  }, \"\\n    \", HTML.DIV({\n    \"class\": \"action-sheet-wrapper\"\n  }, \"\\n      \", HTML.DIV({\n    \"class\": \"action-sheet\"\n  }, \"\\n        \", HTML.DIV({\n    \"class\": \"action-sheet-group\"\n  }, \"\\n          \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"titleText\"));\n  }, function() {\n    return [ \"\\n            \", HTML.DIV({\n      \"class\": \"action-sheet-title\"\n    }, \"\\n              \", Blaze.View(\"lookup:titleText\", function() {\n      return Spacebars.mustache(view.lookup(\"titleText\"));\n    }), \"\\n            \"), \"\\n          \" ];\n  }), \"\\n          \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"buttons\"));\n  }, function() {\n    return [ \"\\n            \", HTML.BUTTON({\n      \"class\": \"button\",\n      \"data-index\": function() {\n        return Spacebars.mustache(view.lookup(\"index\"));\n      }\n    }, Blaze.View(\"lookup:text\", function() {\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"text\")));\n    })), \"\\n          \" ];\n  }), \"\\n        \"), \"\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"destructiveText\"));\n  }, function() {\n    return [ \"\\n          \", HTML.DIV({\n      \"class\": \"action-sheet-group\"\n    }, \"\\n            \", HTML.BUTTON({\n      \"class\": \"button destructive\",\n      \"data-destructive\": \"\"\n    }, Blaze.View(\"lookup:destructiveText\", function() {\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"destructiveText\")));\n    })), \"\\n          \"), \"\\n        \" ];\n  }), \"\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"cancelText\"));\n  }, function() {\n    return [ \"\\n          \", HTML.DIV({\n      \"class\": \"action-sheet-group\"\n    }, \"\\n            \", HTML.BUTTON({\n      \"class\": \"button\",\n      \"data-cancel\": \"\"\n    }, Blaze.View(\"lookup:cancelText\", function() {\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"cancelText\")));\n    })), \"\\n          \"), \"\\n        \" ];\n  }), \"\\n      \"), \"\\n    \"), \"\\n  \");\n}));\n","IonActionSheet = {\n  transitionEndEvent: 'transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd',\n\n  show: function (options) {\n    this.template = Template.ionActionSheet;\n\n    var buttons = [];\n    for (var i = 0; i < options.buttons.length; i++) {\n      var button = options.buttons[i];\n      buttons.push({\n        text: button.text,\n        index: i\n      });\n    }\n\n    var data = {\n      titleText: options.titleText,\n      destructiveText: options.destructiveText,\n      cancelText: options.cancelText,\n      buttons: buttons\n    };\n\n    this.callbacks = {\n      cancel: options.cancel,\n      destructiveButtonClicked: options.destructiveButtonClicked,\n      buttonClicked: options.buttonClicked\n    };\n\n    this.view = Blaze.renderWithData(this.template, data, $('.ionic-body').get(0));\n    $('body').addClass('action-sheet-open');\n\n    var $backdrop = $(this.view.firstNode());\n    $backdrop.addClass('active');\n\n    var $wrapper = $backdrop.find('.action-sheet-wrapper');\n    Meteor.setTimeout(function () {\n      $wrapper.addClass('action-sheet-up');\n    }, 20);\n  },\n\n  cancel: function () {\n    this.close(this.callbacks.cancel);\n  },\n\n  buttonClicked: function (index) {\n    var callback = this.callbacks.buttonClicked;\n    if (callback(index) === true) {\n      IonActionSheet.close();\n    }\n  },\n\n  destructiveButtonClicked: function () {\n    var callback = this.callbacks.destructiveButtonClicked;\n    if (callback() === true) {\n      IonActionSheet.close();\n    }\n  },\n\n  close: function (callback) {\n    var $backdrop = $(this.view.firstNode());\n    $backdrop.removeClass('active');\n\n    var $wrapper = $backdrop.find('.action-sheet-wrapper');\n    Meteor.setTimeout(function() {\n      $wrapper.removeClass('action-sheet-up');\n    }.bind(this), 10);\n\n    $wrapper.on(this.transitionEndEvent, function () {\n      $('body').removeClass('action-sheet-open');\n      Blaze.remove(this.view);\n\n      if (typeof(callback) === 'function') {\n        callback();\n      }\n    }.bind(this));\n  }\n};\n\nTemplate.ionActionSheet.rendered = function () {\n  $(window).on('keyup.ionActionSheet', function(event) {\n    if (event.which == 27) {\n      IonActionSheet.cancel();\n    }\n  });\n};\n\nTemplate.ionActionSheet.destroyed = function () {\n  $(window).off('keyup.ionActionSheet');\n};\n\nTemplate.ionActionSheet.events({\n  // Handle clicking the backdrop\n  'click': function (event, template) {\n    if ($(event.target).hasClass('action-sheet-backdrop')) {\n      IonActionSheet.cancel();\n    }\n  },\n\n  'click [data-index]': function (event, template) {\n    var index = $(event.target).data('index');\n    IonActionSheet.buttonClicked(index);\n  },\n\n  'click [data-destructive]': function (event, template) {\n    IonActionSheet.destructiveButtonClicked();\n  },\n\n  'click [data-cancel]': function (event, template) {\n    IonActionSheet.cancel();\n  }\n\n});\n","\nTemplate.__checkName(\"ionBackdrop\");\nTemplate[\"ionBackdrop\"] = new Template(\"Template.ionBackdrop\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"backdrop\"></div>');\n}));\n","IonBackdrop = {\n  holds: 0,\n  retain: function () {\n    this.holds++;\n\n    if (this.holds === 1) {\n      this.template = Template['ionBackdrop'];\n      this.view = Blaze.renderWithData(this.template, {}, $('.ionic-body').get(0));\n\n      var $backdropEl = $(this.view.firstNode());\n      $backdropEl.addClass('visible');\n\n      Meteor.setTimeout(function () {\n        $backdropEl.addClass('active');\n      }, 10);\n    }\n  },\n\n  release: function () {\n    this.holds--;\n\n    if (this.holds === 0) {\n      var $backdropEl = $(this.view.firstNode());\n      $backdropEl.removeClass('active');\n\n      Meteor.setTimeout(function () {\n        $backdropEl.removeClass('visible');\n        Blaze.remove(this.view);\n      }.bind(this), 400);\n    }\n  }\n};\n","\nTemplate.__checkName(\"ionBody\");\nTemplate[\"ionBody\"] = new Template(\"Template.ionBody\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": function() {\n      return [ \"ionic-body \", Spacebars.mustache(view.lookup(\"platformClasses\")) ];\n    }\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(view.templateContentBlock);\n    });\n  }), \"\\n  \");\n}));\n","Platform = {\n  isIOS: function () {\n    return (!!navigator.userAgent.match(/iPad/i) || !!navigator.userAgent.match(/iPhone/i) || !!navigator.userAgent.match(/iPod/i))\n           || Session.get('platformOverride') === 'iOS';\n  },\n\n  isAndroid: function () {\n    return navigator.userAgent.indexOf('Android') > 0\n           || Session.get('platformOverride') === 'Android';\n  }\n};\n\nTemplate.registerHelper('isIOS', function () {\n  return Platform.isIOS();\n});\n\nTemplate.registerHelper('isAndroid', function () {\n  return Platform.isAndroid();\n});\n\nTemplate.ionBody.helpers({\n  platformClasses: function () {\n    var classes = ['grade-a'];\n\n    if (Meteor.isCordova) {\n      classes.push('platform-cordova');\n    }\n    if (Meteor.isClient) {\n      classes.push('platform-web');\n    }\n    if ((Meteor.isCordova && Platform.isIOS()) || Session.get('platformOverride') === 'iOS') {\n      classes.push('platform-ios');\n    }\n    if ((Meteor.isCordova && Platform.isAndroid()) || Session.get('platformOverride') === 'Android') {\n      classes.push('platform-android');\n    }\n\n    return classes.join(' ');\n  }\n});\n\nTemplate.ionBody.rendered = function () {\n  window.addEventListener('statusTap', function() {\n    $('.content.overflow-scroll').animate({\n      scrollTop: 0\n    }, 500);\n  });\n};\n\nTemplate.ionBody.events({\n  'click [data-ion-modal]': function (event, template) {\n    var templateName = $(event.currentTarget).data('ion-modal');\n    IonModal.open(templateName, $(event.currentTarget).data());\n  },\n\n  'click [data-ion-popover]': function (event, template) {\n    var templateName = $(event.currentTarget).data('ion-popover');\n    IonPopover.show(templateName, $(event.currentTarget).data(), event.currentTarget);\n  },\n\n  'click [data-nav-direction]': function (event, template) {\n    $('[data-nav-container]').addClass('nav-view-direction-' + $(event.target).data('nav-direction'));\n    $('[data-navbar-container]').addClass('nav-bar-direction-' + $(event.target).data('nav-direction'));\n  },\n\n  'click [data-ion-menu-toggle]': function (event, template) {\n    if (!IonSideMenu.snapper) {\n      return;\n    }\n\n    var direction;\n    var $el = $(event.target);\n\n    if ($el.data('ion-menu-toggle') !== '') {\n      direction = $el.data('ion-menu-toggle');\n    } else {\n      direction = 'left';\n    }\n\n    if(IonSideMenu.snapper.state().state === direction){\n      IonSideMenu.snapper.close();\n    } else {\n      IonSideMenu.snapper.open(direction);\n    }\n  },\n\n  'click [data-ion-menu-close]': function (event, template) {\n    if (!IonSideMenu.snapper) {\n      return;\n    }\n    IonSideMenu.snapper.close();\n  },\n  'click [data-ion-list-toggle]': function (event, template) {\n    var direction;\n    var $el = $(event.target);\n    if ($el.data('ion-list-toggle') !== '') {\n      direction = $el.data('ion-list-toggle');\n    } else {\n      direction = 'left';\n    }\n\n    direction = direction.trim(); //just in case..\n\n    switch(direction){\n      case \"left\":\n      toggleListIcons(\"left\");\n      break;\n      case \"right\":\n      toggleListIcons(\"right\");\n      break;\n      case \"both\":\n      toggleListIcons(\"left\");\n      toggleListIcons(\"right\");\n    }\n\n    function toggleListIcons(direction){\n     template.$('.list').toggleClass('list-' + direction + '-editing');\n     if (template.$('.item-' + direction + '-edit').hasClass('visible')){\n      template.$('.item-' + direction + '-edit').removeClass('active').delay(125).queue(function(next){\n        $(this).removeClass('visible');\n        next();\n      });\n    } else {\n      template.$('.item-' + direction + '-edit').addClass('visible').delay(10).queue(function(next){\n        $(this).addClass('active');\n        next();\n      });\n    }\n\n  }\n\n},\n\n'mousedown .button, touchstart .button': function (event, template) {\n  $(event.target).addClass('active');\n},\n\n'mouseup .button, touchend .button': function (event, template) {\n  $(event.target).removeClass('active');\n}\n});\n","\nTemplate.__checkName(\"ionContent\");\nTemplate[\"ionContent\"] = new Template(\"Template.ionContent\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"scroll-content ionic-scroll\"\n  }, \"\\n    \", HTML.DIV({\n    \"class\": function() {\n      return Spacebars.mustache(view.lookup(\"classes\"));\n    }\n  }, \"\\n      \", Blaze._InOuterTemplateScope(view, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(view.templateContentBlock);\n    });\n  }), \"\\n    \"), \"\\n  \");\n}));\n","Template.ionContent.helpers({\n  classes: function () {\n    var classes = ['content'];\n\n    if (this.class) {\n      classes.push(this.class);\n    }\n\n    if (this.scroll !== false) {\n      classes.push('overflow-scroll');\n    }\n\n    if (Session.get('hasHeader')) {\n      classes.push('has-header');\n    }\n\n    if (Session.get('hasSubheader')) {\n      classes.push('has-subheader');\n    }\n\n    if (Session.get('hasTabs')) {\n      classes.push('has-tabs');\n    }\n\n    if (Session.get('hasTabsTop')) {\n      classes.push('has-tabs-top');\n    }\n\n    if (Session.get('hasFooter')) {\n      classes.push('has-footer');\n    }\n\n    if (Session.get('hasSubfooter')) {\n      classes.push('has-subfooter');\n    }\n\n    return classes.join(' ');\n  }\n});\n","\nTemplate.__checkName(\"ionFooterBar\");\nTemplate[\"ionFooterBar\"] = new Template(\"Template.ionFooterBar\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": function() {\n      return Spacebars.mustache(view.lookup(\"classes\"));\n    }\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(view.templateContentBlock);\n    });\n  }), \"\\n  \");\n}));\n","Template.ionFooterBar.rendered = function () {\n  Session.set('hasFooter', true);\n};\n\nTemplate.ionFooterBar.destroyed = function () {\n  Session.set('hasFooter', false);\n};\n\nTemplate.ionFooterBar.helpers({\n  classes: function () {\n    var classes = ['bar', 'bar-footer'];\n\n    if (this.class) {\n      classes.push(this.class);\n    } else {\n      classes.push('bar-stable');\n    }\n\n    if (Session.get('hasTabs')) {\n      classes.push('has-tabs');\n    }\n\n    return classes.join(' ');\n  }\n});\n","\nTemplate.__checkName(\"ionHeaderBar\");\nTemplate[\"ionHeaderBar\"] = new Template(\"Template.ionHeaderBar\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": function() {\n      return Spacebars.mustache(view.lookup(\"classes\"));\n    }\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(view.templateContentBlock);\n    });\n  }), \"\\n  \");\n}));\n","IonHeaderBar = {\n  alignTitle: function () {\n    var align = this.data.alignTitle || 'center';\n    var $title = this.$('.title');\n\n    if (Platform.isAndroid() && !this.alignTitle) {\n      $title.addClass('title-left');\n      return;\n    }\n\n    if (align === 'center') {\n      $title.addClass('title-center');\n    } else if (align === 'left') {\n      $title.addClass('title-left');\n    } else if (align === 'right') {\n      $title.addClass('title-right');\n    }\n  },\n\n  positionTitle: function () {\n    var $title = this.$('.title');\n    var $leftButton = $('.button.pull-left');\n    var $rightButton = $('.button.pull-right');\n\n    // Find out which button is wider,\n    // use that to offset the title on both sides\n    var leftButtonWidth = 0;\n    var rightButtonWidth = 0;\n    if ($leftButton.length) {\n      $leftButton.each(function(index, element){\n        leftButtonWidth += $(element).outerWidth();  \n      });  \n    }\n    if ($rightButton.length) {\n      $rightButton.each(function(index, element){\n        rightButtonWidth += $(element).outerWidth();  \n      });  \n    }\n\n    // If we're on Android, we only care about the left button\n    var margin;\n    if (Platform.isAndroid()) {\n      margin = leftButtonWidth;\n    } else {\n      margin = Math.max(leftButtonWidth, rightButtonWidth);\n    }\n    $title.css('left', margin);\n    $title.css('right', margin);\n  }\n};\n\nTemplate.ionHeaderBar.created = function () {\n  this.data = this.data || {};\n};\n\nTemplate.ionHeaderBar.rendered = function () {\n  Session.set('hasHeader', true);\n  IonHeaderBar.alignTitle.call(this);\n  IonHeaderBar.positionTitle.call(this);\n};\n\nTemplate.ionHeaderBar.destroyed = function () {\n  Session.set('hasHeader', false);\n};\n\nTemplate.ionHeaderBar.helpers({\n  classes: function () {\n    var classes = ['bar', 'bar-header'];\n\n    if (this.class) {\n      classes.push(this.class);\n    } else {\n      classes.push('bar-stable');\n    }\n\n    return classes.join(' ');\n  }\n});\n","\nTemplate.__checkName(\"ionIcon\");\nTemplate[\"ionIcon\"] = new Template(\"Template.ionIcon\", (function() {\n  var view = this;\n  return HTML.I({\n    \"class\": function() {\n      return Spacebars.mustache(view.lookup(\"classes\"));\n    }\n  });\n}));\n","Template.ionIcon.helpers({\n  classes: function () {\n    var classes = ['icon'];\n    classes.push('ion-' + this.icon);\n\n    if (this.class) {\n      classes.push(this.class);\n    }\n\n    return classes.join(' ');\n  }\n});\n","\nTemplate.__checkName(\"ionItem\");\nTemplate[\"ionItem\"] = new Template(\"Template.ionItem\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isAnchor\"));\n  }, function() {\n    return [ \"\\n    \", HTML.A({\n      \"class\": function() {\n        return Spacebars.mustache(view.lookup(\"itemClasses\"));\n      },\n      href: function() {\n        return Spacebars.mustache(view.lookup(\"url\"));\n      },\n      id: function() {\n        return Spacebars.mustache(view.lookup(\"idAttribute\"));\n      },\n      target: function() {\n        return Spacebars.mustache(view.lookup(\"target\"));\n      }\n    }, \"\\n      \", Blaze._InOuterTemplateScope(view, function() {\n      return Spacebars.include(function() {\n        return Spacebars.call(view.templateContentBlock);\n      });\n    }), \"\\n    \"), \"\\n  \" ];\n  }, function() {\n    return [ \"\\n    \", HTML.DIV({\n      \"class\": function() {\n        return Spacebars.mustache(view.lookup(\"itemClasses\"));\n      },\n      id: function() {\n        return Spacebars.mustache(view.lookup(\"idAttribute\"));\n      }\n    }, \"\\n      \", Blaze._InOuterTemplateScope(view, function() {\n      return Spacebars.include(function() {\n        return Spacebars.call(view.templateContentBlock);\n      });\n    }), \"\\n    \"), \"\\n  \" ];\n  });\n}));\n","Template.ionItem.helpers({\n  idAttribute: function () {\n    if (this.id) {\n      return this.id;\n    }\n  },\n  itemClasses: function () {\n    var classes = ['item'];\n\n    if (this.class) {\n      var customClasses = this.class.split(' ');\n      _(customClasses).each(function (customClass) {\n        classes.push(customClass);\n      });\n    }\n\n    if (this.avatar) {\n      classes.push('item-avatar' + (this.avatar === 'right' ? '-right' : ''));\n    }\n\n    if (this.iconLeft) {\n      classes.push('item-icon-left');\n    }\n\n    if (this.iconRight) {\n      classes.push('item-icon-right');\n    }\n\n    if (this.buttonLeft) {\n      classes.push('item-button-left');\n    }\n\n    if(Session.get('ionSortable')){\n      classes.push('item-complex', 'item-left-editable');\n    }\n\n    if (this.buttonRight) {\n      classes.push('item-button-right');\n    }\n\n    if (this.textWrap) {\n      classes.push('item-text-wrap');\n    }\n\n    return classes.join(' ');\n  },\n\n  isAnchor: function () {\n    return _.some([this.href,this.path,this.url,this.route],function(path){return path != undefined});\n  },\n\n  target: function () {\n    return this.target;\n  },\n\n  url: function () {\n    if (this.href) {\n      return this.href;\n    }\n\n    if ( this.path || this.url || this.route ) {\n\n      var path = _.find([this.path,this.url,this.route],function(path){return path !=undefined});\n\n      if ( this.query || this.hash || this.data ){\n\n        var hash = {};\n        hash.route = path;\n        hash.query = this.query;\n        hash.hash = this.hash;\n        hash.data = this.data;\n        var options = new Spacebars.kw(hash);\n\n        // Devs may pass 'route=x' instead of 'path=' or 'url='\n        // Should doing that throw an error? Not sure but we decided to\n        // parse it as if the dev passed it as 'path='\n        if (this.url){\n          return Blaze._globalHelpers.urlFor(options)\n        } else if( this.path || this.route ) {\n          return Blaze._globalHelpers.pathFor(options)\n        }\n\n      } else {\n        return Router.routes[path].path(Template.parentData(1));\n      }\n    }\n  }\n});\n","Meteor.startup(function () {\n  if (Meteor.isCordova) {\n    IonKeyboard.disableScroll();\n  }\n});\n\nIonKeyboard = {\n  close: function () {\n    if (Meteor.isCordova) {\n      cordova.plugins.Keyboard.close();\n    }\n  },\n\n  show: function () {\n    if (Meteor.isCordova) {\n      cordova.plugins.Keyboard.show();\n    }\n  },\n\n  hideKeyboardAccessoryBar: function () {\n    if (Meteor.isCordova) {\n      cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);\n    }\n  },\n\n  showKeyboardAccessoryBar: function () {\n    if (Meteor.isCordova) {\n      cordova.plugins.Keyboard.hideKeyboardAccessoryBar(false);\n    }\n  },\n\n  disableScroll: function () {\n    if (Meteor.isCordova) {\n      cordova.plugins.Keyboard.disableScroll(true);\n    }\n  },\n\n  enableScroll: function () {\n    if (Meteor.isCordova) {\n      cordova.plugins.Keyboard.disableScroll(false);\n    }\n  }\n};\n\nwindow.addEventListener('native.keyboardshow', function (event) {\n\n  // TODO: Android is having problems\n  if (Platform.isAndroid()) {\n    return;\n  }\n\n  $('body').addClass('keyboard-open');\n  var keyboardHeight = event.keyboardHeight;\n\n  // Attach any elements that want to be attached\n  $('[data-keyboard-attach]').each(function (index, el) {\n    $(el).data('ionkeyboard.bottom', $(el).css('bottom'));\n    $(el).css({bottom: keyboardHeight});\n  });\n\n  // Move the bottom of the content area(s) above the top of the keyboard\n  $('.content.overflow-scroll').each(function (index, el) {\n    $(el).data('ionkeyboard.bottom', $(el).css('bottom'));\n    $(el).css({bottom: keyboardHeight});\n  });\n\n  // Scroll to the focused element\n  scrollToFocusedElement(null, keyboardHeight);\n\n});\n\nwindow.addEventListener('native.keyboardhide', function (event) {\n\n  // TODO: Android is having problems\n  if (Platform.isAndroid()) {\n    return;\n  }\n\n  // $('input, textarea').blur();\n  $('body').removeClass('keyboard-open');\n\n  // Detach any elements that were attached\n  $('[data-keyboard-attach]').each(function (index, el) {\n    $(el).css({bottom: $(el).data('ionkeyboard.bottom')});\n  });\n\n  // Reset the content area(s)\n  $('.content.overflow-scroll').each(function (index, el) {\n    $(el).css({bottom: $(el).data('ionkeyboard.bottom')});\n  });\n\n});\n","Meteor.startup(function() {\n  if (Meteor.isCordova) {\n\n    var getScrollContainer = function($element) {\n      return $($element.parents('.content.overflow-scroll').get(0));\n    }\n\n    var focusPadding = 20;\n    var isBehindKeyboard = function($focused, keyboardHeight) {\n      var keyboardTop = $(window).innerHeight() - keyboardHeight;\n      var focusedBottom = $focused.offset().top + $focused.innerHeight();\n      var focusedIsBehindKeyboard = focusedBottom > keyboardTop - focusPadding;\n      return focusedIsBehindKeyboard;\n    }\n\n    var getScrollToPosition = function($focused, $container, keyboardHeight) {\n\n      var scrollTo = $container.scrollTop() + $focused.offset().top - $container.offset().top - focusPadding;\n      return scrollTo;\n\n    }\n\n    // Scroll to make input on top of the page\n    // #TODO Correct behavior should be: if the input is behind the keyboard, scroll to make it visible on top of the keyboard\n    scrollToFocusedElement = function($focused, keyboardHeight) {\n      $focused = $focused || $(':focus');\n      var $container = getScrollContainer($focused);\n      if (!$focused.length || !$container.length) return;\n      var focusedIsBehindKeyboard = isBehindKeyboard($focused, keyboardHeight);\n      if (!focusedIsBehindKeyboard) return;\n      var scrollTo = getScrollToPosition($focused, $container, keyboardHeight);\n      setTimeout(function() {\n        $container.animate({ scrollTop: scrollTo }, {\n          duration: 400,\n          complete: function() {\n            // Fix floating input cursor bug (https://github.com/twbs/bootstrap/issues/14708, https://github.com/cubiq/iscroll/issues/178)\n            var display = $focused.css('display');\n            $focused.css({ display: 'none' }).css({ display: display });\n          }\n        });\n      }, 0);\n    }\n\n    var $scrollContainer, scrollPosStart, scrollPosEnd, scrollDistance, scrollHappened, scrollThreshold = 10;\n\n    // Trigger focus on input through touchend for long taps\n    $(document).on('touchstart', function(event) {\n      $scrollContainer = getScrollContainer($(event.target));\n      scrollPosStart = $scrollContainer.scrollTop();\n    });\n\n    $(document).on('touchend', function(event) {\n      $scrollContainer = getScrollContainer($(event.target));\n      scrollPosEnd = $scrollContainer.scrollTop();\n      scrollDistance = Math.abs(scrollPosStart - scrollPosEnd);\n      scrollHappened = scrollDistance > scrollThreshold;\n      var $target = $(event.target);\n      var isInput = _.contains(['INPUT', 'TEXTAREA'], event.target.tagName);\n      var isFocused = $target.is(':focus');\n      if (isInput && !isFocused && !scrollHappened) $target.focus();\n    });\n\n  }\n});\n","\nTemplate.__checkName(\"ionList\");\nTemplate[\"ionList\"] = new Template(\"Template.ionList\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": function() {\n      return Spacebars.mustache(view.lookup(\"classes\"));\n    },\n    \"data-snap-ignore\": \"true\"\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(view.templateContentBlock);\n    });\n  }), \"\\n  \");\n}));\n","Template.ionList.helpers({\n  classes: function () {\n    var classes = ['list'];\n\n    if (this.class) {\n      var customClasses = this.class.split(' ');\n      _(customClasses).each(function (customClass) {\n        classes.push(customClass);\n      });\n    }\n\n    return classes.join(' ');\n  }\n});\n\n\nTemplate.ionList.rendered = function() {\n\n if (this.data && this.data.ionSortable){\n  Session.set(\"ionSortable\", true );\n  var list = this.$('.list')[0]; \n  new Slip(list);\n}\n\n};\n\n\nTemplate.ionList.events({\n  'click .item-delete' : function(e, template){\n    e.preventDefault();\n\n    var target = $(e.target).closest('.item').get(0);\n    var targetData = Blaze.getData(target.getElementsByClassName('item-content')[0])._id || undefined;\n\n    template.data.ionSortable.find({}).forEach(function(item, i) {\n      if (item._id === targetData) {\n        template.data.ionSortable._collection.remove({\n          _id: item._id\n        }, function(error, result) { });\n      }\n    });\n  },\n  'slip:swipe .list, slip:beforeswipe .list, slip:beforewait .list, slip:afterswipe .list': function(e, template) {\n    e.preventDefault();\n  },\n  'slip:beforereorder .list': function(e, template) {\n    if (e.originalEvent.target.className.indexOf('instant') == -1) {\n      e.preventDefault();\n    }\n  },\n  'slip:reorder .list': function(e, template) {\n    spliceIndex = e.originalEvent.detail.spliceIndex\n    originalIndex = e.originalEvent.detail.originalIndex\n\n    if (spliceIndex != originalIndex) {\n\n      template.data.ionSortable.find({}, {\n        sort: {\n          order: 1\n        }\n      }).forEach(function(item, i) {\n        template.data.ionSortable._collection.pauseObservers()\n        if (item._id == Blaze.getData(e.target.getElementsByClassName('item-content')[0])._id) {\n          temp = template.data.ionSortable.update({\n            _id: item._id\n          }, {\n            $set: {\n              order: spliceIndex\n            }\n          })\n        } else {\n          if (spliceIndex > originalIndex) {\n            newOrder = ((spliceIndex >= i) && (originalIndex < i)) ? (i - 1) : i\n          } else if (spliceIndex == '0') {\n            newOrder = (originalIndex > i) ? (i + 1) : i\n          } else {\n            newOrder = ((spliceIndex <= i) && (originalIndex > i)) ? (i + 1) : i\n          }\n\n          temp = template.data.ionSortable.update({\n            _id: item._id\n          }, {\n            $set: {\n              order: newOrder\n            }\n          })\n        }\n        template.data.ionSortable._collection.resumeObservers()\n      })\n\n    }\n  }\n\n});","\nTemplate.__checkName(\"ionListButton\");\nTemplate[\"ionListButton\"] = new Template(\"Template.ionListButton\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": function() {\n      return Spacebars.mustache(view.lookup(\"classes\"));\n    }\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(view.templateContentBlock);\n    });\n  }), \"\\n  \");\n}));\n","\nTemplate.ionListButton.helpers({\n  classes: function(){\n    \n    var classes = [];\n\n    var action = this.action || 'delete';\n    var side = this.side || 'left';\n    classes.push('item-' + action);\n    classes.push('item-' + side + '-edit');\n\n    classes.push('enable-pointer-events');\n    \n    return classes.join(' ');\n\n  }\n})\n","\nTemplate.__checkName(\"ionLoading\");\nTemplate[\"ionLoading\"] = new Template(\"Template.ionLoading\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"loading-container\"\n  }, \"\\n    \", HTML.DIV({\n    \"class\": \"loading\"\n  }, \"\\n      \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"template\"));\n  }, function() {\n    return [ \"\\n        \", Blaze.View(\"lookup:template\", function() {\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"template\")));\n    }), \"\\n      \" ];\n  }, function() {\n    return [ \"\\n        \", HTML.I({\n      \"class\": \"icon ion-loading-d\"\n    }), \"\\n      \" ];\n  }), \"\\n    \"), \"\\n  \");\n}));\n","IonLoading = {\n  show: function (userOptions) {\n    var userOptions = userOptions || {};\n    var options = _.extend({\n      delay: 0,\n      duration: null,\n      customTemplate: null,\n      backdrop: false\n    }, userOptions);\n\n    if (options.backdrop) {\n      IonBackdrop.retain();\n      $('.backdrop').addClass('backdrop-loading');\n    }\n\n    Meteor.setTimeout(function () {\n      this.template = Template['ionLoading'];\n      this.view = Blaze.renderWithData(this.template, {template: options.customTemplate}, $('.ionic-body').get(0));\n\n      var $loadingEl = $(this.view.firstNode());\n      $loadingEl.addClass('visible');\n\n      Meteor.setTimeout(function () {\n        $loadingEl.addClass('active');\n      }, 10);\n    }.bind(this), options.delay);\n\n    if (options.duration) {\n      Meteor.setTimeout(function () {\n        this.hide();\n      }.bind(this), options.duration);\n    }\n  },\n\n  hide: function () {\n    if (this.view) {\n      var $loadingEl = $(this.view.firstNode());\n      $loadingEl.removeClass('active');\n\n      Meteor.setTimeout(function () {\n        IonBackdrop.release();\n        $loadingEl.removeClass('visible');\n        Blaze.remove(this.view);\n        this.view = null;\n      }.bind(this), 0);\n    }\n    Meteor.setTimeout(function() {\n      $('.loading-container').remove();\n    }, 0)\n  }\n};\n","\nTemplate.__checkName(\"ionModal\");\nTemplate[\"ionModal\"] = new Template(\"Template.ionModal\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"modal-backdrop\"\n  }, \"\\n    \", HTML.DIV({\n    \"class\": \"modal-wrapper\"\n  }, \"\\n      \", HTML.DIV({\n    \"class\": function() {\n      return Spacebars.mustache(view.lookup(\"classes\"));\n    }\n  }, \"\\n\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"customTemplate\"));\n  }, function() {\n    return [ \"\\n          \", Blaze._InOuterTemplateScope(view, function() {\n      return Spacebars.include(function() {\n        return Spacebars.call(view.templateContentBlock);\n      });\n    }), \"\\n        \" ];\n  }, function() {\n    return [ \"\\n          \", HTML.DIV({\n      \"class\": function() {\n        return Spacebars.mustache(view.lookup(\"barClass\"));\n      }\n    }, \"\\n            \", HTML.H2({\n      \"class\": function() {\n        return Spacebars.mustache(view.lookup(\"titleClass\"));\n      }\n    }, Blaze.View(\"lookup:title\", function() {\n      return Spacebars.mustache(view.lookup(\"title\"));\n    })), \"\\n            \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"closeText\"));\n    }, function() {\n      return [ \"\\n              \", HTML.BUTTON({\n        \"data-dismiss\": \"modal\",\n        \"class\": \"button button-positive button-clear\"\n      }, Blaze.View(\"lookup:closeText\", function() {\n        return Spacebars.mustache(view.lookup(\"closeText\"));\n      })), \"\\n            \" ];\n    }, function() {\n      return [ \"\\n              \", HTML.BUTTON({\n        \"data-dismiss\": \"modal\",\n        \"class\": \"button button-icon\"\n      }, HTML.I({\n        \"class\": \"icon ion-ios-close-empty\"\n      })), \"\\n            \" ];\n    }), \"\\n          \"), \"\\n          \", HTML.DIV({\n      \"class\": \"content has-header overflow-scroll\"\n    }, \"\\n            \", Blaze._InOuterTemplateScope(view, function() {\n      return Spacebars.include(function() {\n        return Spacebars.call(view.templateContentBlock);\n      });\n    }), \"\\n          \"), \"\\n        \" ];\n  }), \"\\n\\n      \"), \"\\n    \"), \"\\n  \");\n}));\n","IonModal = {\n  transitionEndEvent: 'transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd',\n  animationEndEvent: 'animationend webkitAnimationEnd oAnimationEnd MSAnimationEnd',\n  enterClasses: ['ng-enter', 'slide-in-up'],\n  enterActiveClass: 'ng-enter-active',\n  leaveClasses: ['ng-leave', 'slide-in-up'],\n  leaveActiveClass: 'ng-leave-active',\n  view: {},\n  views: [],\n  open: function (templateName, data) {\n\n    Meteor.setTimeout(function () {\n\n      this.template = Template[templateName];\n      this.views.push(templateName);\n      if (!this.view[templateName]) this.view[templateName] = [];\n\n      var view = Blaze.renderWithData(this.template, data, $('.ionic-body').get(0));\n      this.view[templateName].push(view);\n\n      var $modalBackdrop = $(view.firstNode());\n      var $modal = $('.modal', $modalBackdrop);\n\n      if (this.views.length === 1) {\n        $modalBackdrop.addClass('active');\n      }\n\n      $modal.addClass(this.enterClasses.join(' '));\n      Meteor.setTimeout(function () {\n        $modal.addClass(this.enterActiveClass);\n      }.bind(this), 50);\n\n    }.bind(this), 0);\n\n  },\n  close: function (templateName) {\n\n    this.templateClosed = templateName;\n    Meteor.setTimeout(function () {\n\n      var templateName = this.templateClosed || this.views.slice(-1)[0];\n      delete this.templateClosed;\n\n      var view = (this.view[templateName] || []).slice(-1)[0];\n      if (!view) return;\n\n      var $modalBackdrop = $(view.firstNode());\n      var $modal = $('.modal', $modalBackdrop);\n\n      $modal.addClass(this.leaveClasses.join(' '));\n      Meteor.setTimeout(function () {\n        $modal.addClass(this.leaveActiveClass);\n      }.bind(this), 50);\n\n      $modalBackdrop.fadeOut(500, function() {\n        $('body').removeClass('modal-open');\n      });\n\n    }.bind(this), 0);\n\n  }\n};\n\n$(document).delegate('.modal', IonModal.transitionEndEvent, function(e) {\n  var $modal = $(e.currentTarget);\n  if ($modal.hasClass(IonModal.enterClasses.join(' ')) || $modal.hasClass(IonModal.enterActiveClasse)) {\n    $modal.removeClass(IonModal.enterClasses.join(' ')).removeClass(IonModal.enterActiveClass);\n    $('body').addClass('modal-open');\n  } else if ($modal.hasClass(IonModal.leaveClasses.join(' ')) || $modal.hasClass(IonModal.leaveActiveClasse)) {\n    var firstChild = $modal.children().first();\n    var templateName = getElementModalTemplateName(firstChild);\n    IonModal.views = _.without(IonModal.views, templateName);\n    var view = IonModal.view[templateName].pop();\n    var $modalBackdrop = $(view.firstNode());\n    $modalBackdrop.removeClass('active');\n    $modal.removeClass(IonModal.leaveClasses.join(' ')).removeClass(IonModal.leaveActiveClass).off(IonModal.transitionEndEvent);\n    $('body').removeClass('modal-open');\n    $(e.target).parents('.modal-backdrop').remove();\n    Blaze.remove(view);\n  }\n});\n\nTemplate.ionModal.created = function () {\n  this.data = this.data || {};\n  this.customTemplate = this.data.customTemplate || false;\n  this.title = this.data.title;\n  this.title = this.data.closeText;\n  this.focusFirstInput = _.isUndefined(this.data.focusFirstInput) ? true : this.data.focusFirstInput;\n  this.animation = this.data.animation || 'slide-in-up';\n};\n\nTemplate.ionModal.rendered = function () {\n  if (this.focusFirstInput) {\n    Meteor.setTimeout(function () {\n      if (!this._domrange) return;\n      this.$('input:first').focus();\n    }.bind(this), 600);\n  }\n  $(window).on('keyup.ionModal', function(event) {\n    event.stopImmediatePropagation();\n    if (event.which == 27) {\n      IonModal.close();\n    }\n  });\n};\n\nTemplate.ionModal.destroyed = function () {\n  if (!IonModal.views.length) {\n    $(window).off('keyup.ionModal');\n  }\n};\n\nTemplate.ionModal.helpers({\n  barClass: function () {\n    var defaultClasses = ['bar', 'bar-header', 'bar-stable'].join(' ');\n    var customClasses = _.isString(this.barClass) ? this.barClass : '';\n    return [defaultClasses, customClasses].join(' ');\n  },\n\n  titleClass: function () {\n    var classes = ['title'];\n\n    if (Platform.isAndroid()) {\n      classes.push('title-left');\n    }\n\n    return classes.join(' ');\n  },\n\n  title: function () {\n    return this.title;\n  },\n\n  closeText: function () {\n    return this.closeText;\n  },\n\n  animation: function () {\n    return this.animation || 'slide-in-up';\n  },\n\n  customTemplate: function () {\n    return this.customTemplate;\n  },\n\n  classes: function () {\n    var classes = ['modal'];\n\n    if (this.class) {\n      classes.push(this.class);\n    }\n\n    return classes.join(' ');\n  }\n\n});\n\nTemplate.ionModal.events({\n  // Handle clicking the backdrop\n  'click': function (event, template) {\n    if ($(event.target).hasClass('modal-backdrop')) {\n      IonModal.close();\n    }\n  },\n  'click [data-dismiss=modal]': function (event, template) {\n    var tplName = getElementModalTemplateName(event.currentTarget);\n    IonModal.close(tplName);\n  }\n});\n\nvar getElementModalTemplateName = function(element) {\n  var modal = $(element).parents('.modal').get(0);\n  var modalView = Blaze.getView(modal);\n  var tplView = Meteor._get(modalView, 'parentView', 'parentView'); // Twice because the parent view is a #with block\n  var tplName = tplView.name.slice('Template.'.length, tplView.name.length);\n  return tplName;\n};\n","\nTemplate.__checkName(\"ionNavBar\");\nTemplate[\"ionNavBar\"] = new Template(\"Template.ionNavBar\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": function() {\n      return [ Spacebars.mustache(view.lookup(\"classes\")), \" nav-bar-block nav-bar-transition-\", Spacebars.mustache(view.lookup(\"transition\")), \" nav-bar-direction-forward\" ];\n    },\n    \"data-navbar-container\": \"\"\n  }, \"\\n    \", Blaze._TemplateWith(function() {\n    return \"headerButtonLeft\";\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"yield\"));\n  }), \"\\n    \", Blaze._TemplateWith(function() {\n    return \"headerTitle\";\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"yield\"));\n  }), \"\\n    \", Blaze._TemplateWith(function() {\n    return \"headerButtonRight\";\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"yield\"));\n  }), \"\\n  \");\n}));\n","Template.ionNavBar.created = function () {\n  this.data = this.data || {};\n\n  if (Platform.isAndroid()) {\n    this.transition = 'android';\n  } else {\n    this.transition = 'ios';\n  }\n\n  // Allow overriding the transition\n  if (this.data.transition) {\n    this.transition = this.data.transition;\n  }\n\n  if (this.transition === 'ios') {\n    this.transitionDuration = 450;\n  } else {\n    this.transitionDuration = 200;\n  }\n};\n\nTemplate.ionNavBar.rendered = function () {\n  Session.set('hasHeader', true);\n\n  IonHeaderBar.alignTitle.call(this);\n  IonHeaderBar.positionTitle.call(this);\n\n  var template = this;\n  var container = this.find('[data-navbar-container]');\n  container._uihooks = {\n    insertElement: function(node, next) {\n      var $node = $(node);\n\n      if (!$node.hasClass('title') && !$node.hasClass('button') || IonNavigation.skipTransitions) {\n        container.insertBefore(node, next);\n        // Changing tabs skips transition animations, but we still want to update the position of the title\n        IonHeaderBar.alignTitle.call(template);\n        IonHeaderBar.positionTitle.call(template);\n        return;\n      }\n\n      if ($node.hasClass('title')) {\n        container.insertBefore(node, next);\n        $node.addClass('title-entering title-stage');\n\n        IonHeaderBar.alignTitle.call(template);\n        IonHeaderBar.positionTitle.call(template);\n\n        Meteor.setTimeout(function() {\n          $node.removeClass('title-stage').addClass('title-active');\n        }, 16);\n\n        Meteor.setTimeout(function () {\n          $(this).removeClass('title-entering');\n          $('[data-navbar-container]').removeClass('nav-bar-direction-back').addClass('nav-bar-direction-forward');\n        }, template.transitionDuration + 16);\n      }\n\n      if ($node.hasClass('button')) {\n        container.insertBefore(node, next);\n        $node.addClass('button-entering button-stage');\n        Meteor.setTimeout(function() {\n          $node.removeClass('button-stage').addClass('button-active');\n        }, 16);\n\n        Meteor.setTimeout(function () {\n          $(this).removeClass('button-entering');\n        }, template.transitionDuration + 16);\n      }\n    },\n\n    removeElement: function(node) {\n      var $node = $(node);\n      if (!$node.hasClass('title') && !$node.hasClass('button') || IonNavigation.skipTransitions) {\n        $node.remove();\n        return;\n      }\n\n      if ($node.hasClass('title')) {\n        $node.addClass('title-leaving title-stage');\n        Meteor.setTimeout(function() {\n          $node.removeClass('title-stage').addClass('title-active');\n        }, 16);\n\n        Meteor.setTimeout(function () {\n          $node.remove();\n        }, template.transitionDuration + 16);\n      }\n\n      if ($node.hasClass('button')) {\n        $node.remove();\n      }\n    }\n  };\n};\n\nTemplate.ionNavBar.destroyed = function () {\n  Session.set('hasHeader', false);\n};\n\nTemplate.ionNavBar.helpers({\n  classes: function () {\n    var classes = ['bar', 'bar-header'];\n\n    if (this.class) {\n      classes.push(this.class);\n    } else {\n      classes.push('bar-stable');\n    }\n\n    return classes.join(' ');\n  },\n\n  transition: function () {\n    return Template.instance().transition;\n  }\n});\n","\nTemplate.__checkName(\"ionNavBackButton\");\nTemplate[\"ionNavBackButton\"] = new Template(\"Template.ionNavBackButton\", (function() {\n  var view = this;\n  return HTML.BUTTON({\n    \"class\": function() {\n      return Spacebars.mustache(view.lookup(\"classes\"));\n    }\n  }, \"\\n    \", Blaze._TemplateWith(function() {\n    return {\n      icon: Spacebars.call(view.lookup(\"icon\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"ionIcon\"));\n  }), \"\\n    \", Blaze.Unless(function() {\n    return Spacebars.call(view.lookup(\"isAndroid\"));\n  }, function() {\n    return [ \"\\n      \", HTML.SPAN({\n      \"class\": \"back-text\"\n    }, \"\\n        \", Blaze.View(\"lookup:text\", function() {\n      return Spacebars.mustache(view.lookup(\"text\"));\n    }), \"\\n      \"), \"\\n    \" ];\n  }), \"\\n  \");\n}));\n","IonScrollPositions = {};\n\nRouter.onStop(function () {\n  IonScrollPositions[this.route.path(this.params)] = $('.overflow-scroll').scrollTop();\n});\n\nTemplate.ionNavBackButton.events({\n  'click': function (event, template) {\n    $('[data-nav-container]').addClass('nav-view-direction-back');\n    $('[data-navbar-container]').addClass('nav-bar-direction-back');\n    \n    //get most up-to-date url, if it exists\n    backUrl = template.getBackUrl()\n    if (backUrl) {\n      Router.go(backUrl);\n    } else {\n      window.history.back();\n    }\n  }\n});\n\nTemplate.ionNavBackButton.created = function () {\n  this.data = this.data || {};\n};\n\nTemplate.ionNavBackButton.rendered = function () {\n  var self = this;\n  this.getBackUrl = function () {\n    var backUrl = null;\n\n    self.data = self.data || {};\n  \n    if (self.data.href) {\n      backUrl = self.data.href;\n    }\n  \n    if (self.data.path) {\n      backRoute = Router.routes[self.data.path]\n      if (!backRoute) {\n        console.warn(\"back to nonexistent route: \", self.data.path);\n        return;\n      }\n      backUrl = backRoute.path(Template.parentData(1));\n    }\n    return backUrl;\n  };\n};\n\nTemplate.ionNavBackButton.helpers({\n  classes: function () {\n    var classes = ['buttons button button-clear back-button pull-left'];\n\n    if (this.class) {\n      classes.push(this.class);\n    }\n\n    return classes.join(' ');\n  },\n\n  icon: function () {\n    if (this.icon) {\n      return this.icon;\n    }\n\n    if (Platform.isAndroid()) {\n      return 'android-arrow-back';\n    }\n\n    return 'ios-arrow-back';\n  },\n\n  text: function () {\n    if (this.text) {\n      return this.text;\n    } else if(this.text !== false) {\n      return 'Back';\n    }\n  }\n});\n","\nTemplate.__checkName(\"ionNavView\");\nTemplate[\"ionNavView\"] = new Template(\"Template.ionNavView\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"data-nav-container\": \"\",\n    \"class\": function() {\n      return [ \"nav-view-transition-\", Spacebars.mustache(view.lookup(\"transition\")), \" nav-view-direction-forward\" ];\n    }\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(view.templateContentBlock);\n    });\n  }), \"\\n  \");\n}));\n","IonNavigation = {\n  skipTransitions: false\n};\n\nTemplate.ionNavView.created = function () {\n  this.data = this.data || {};\n  Session.setDefault('ionNavDirection', 'forward');\n\n  if (Platform.isAndroid()) {\n    this.transition = 'android';\n  } else {\n    this.transition = 'ios';\n  }\n\n  // Allow overriding the transition\n  if (this.data && this.data.transition) {\n    this.transition = this.data.transition;\n  }\n\n  if (this.transition === 'ios') {\n    this.transitionDuration = 450;\n  } else {\n    this.transitionDuration = 320;\n  }\n};\n\nTemplate.ionNavView.rendered = function () {\n  var template = this;\n  var container = this.find('[data-nav-container]');\n\n  container._uihooks = {\n    insertElement: function(node, next) {\n      var $node = $(node);\n      if (!template.transition || !$node.hasClass('view') || IonNavigation.skipTransitions) {\n        container.insertBefore(node, next);\n        return;\n      }\n\n      $node.addClass('nav-view-entering nav-view-stage');\n      container.insertBefore(node, next);\n      Meteor.setTimeout(function() {\n        $node.removeClass('nav-view-stage').addClass('nav-view-active');\n      }, 0);\n\n      Meteor.setTimeout(function () {\n        $(this).removeClass('nav-view-entering');\n        $('[data-nav-container]').removeClass('nav-view-direction-back').addClass('nav-view-direction-forward');\n      }, template.transitionDuration);\n    },\n\n    removeElement: function(node) {\n      var $node = $(node);\n      if (!template.transition || !$node.hasClass('view') || IonNavigation.skipTransitions) {\n        $node.remove();\n        return;\n      }\n\n      $node.addClass('nav-view-leaving nav-view-stage');\n      Meteor.setTimeout(function() {\n        $node.removeClass('nav-view-stage').addClass('nav-view-active');\n      }, 0);\n\n      Meteor.setTimeout(function () {\n        $node.remove();\n        Session.set('ionNavDirection', 'forward');\n      }, template.transitionDuration);\n    }\n  };\n};\n\nTemplate.ionNavView.helpers({\n  transition: function () {\n    return Template.instance().transition;\n  }\n});\n","\nTemplate.__checkName(\"ionPane\");\nTemplate[\"ionPane\"] = new Template(\"Template.ionPane\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"pane\"\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(view.templateContentBlock);\n    });\n  }), \"\\n  \");\n}));\n","","\nTemplate.__checkName(\"ionPopover\");\nTemplate[\"ionPopover\"] = new Template(\"Template.ionPopover\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"popover-backdrop\"\n  }, \"\\n    \", HTML.DIV({\n    \"class\": \"popover-wrapper\"\n  }, \"\\n      \", HTML.DIV({\n    \"class\": \"popover\"\n  }, \"\\n        \", HTML.Raw('<div class=\"popover-arrow\"></div>'), \"\\n        \", Blaze._InOuterTemplateScope(view, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(view.templateContentBlock);\n    });\n  }), \"\\n      \"), \"\\n    \"), \"\\n  \");\n}));\n","POPOVER_BODY_PADDING = 6;\n\nIonPopover = {\n  show: function (templateName, data, button) {\n    this.template = Template[templateName];\n    this.view = Blaze.renderWithData(this.template, data, $('.ionic-body').get(0));\n\n    var $backdrop = $(this.view.firstNode());\n    var $popover = $backdrop.find('.popover');\n    var $button = $(button);\n    var $arrow = $backdrop.find('.popover-arrow');\n\n    var bodyWidth = $('body').width();\n    var bodyHeight = $(window).innerHeight();\n    var buttonPosition = $button.offset();\n    var buttonWidth = $button.outerWidth();\n    var buttonHeight = $button.outerHeight();\n    var popoverWidth = $popover.outerWidth();\n    var popoverHeight = $popover.outerHeight();\n\n    var popoverCSS = {\n      marginLeft: '0',\n      opacity: 1,\n      left: buttonPosition.left + buttonWidth / 2 - popoverWidth / 2\n    };\n\n    if (popoverCSS.left < POPOVER_BODY_PADDING) {\n      popoverCSS.left = POPOVER_BODY_PADDING;\n    } else if(popoverCSS.left + popoverWidth + POPOVER_BODY_PADDING > bodyWidth) {\n      popoverCSS.left = bodyWidth - popoverWidth - POPOVER_BODY_PADDING;\n    }\n\n    if (buttonPosition.top + buttonHeight + popoverHeight > bodyHeight) {\n      popoverCSS.top = buttonPosition.top - popoverHeight;\n      $popover.addClass('popover-bottom');\n    } else {\n      popoverCSS.top = buttonPosition.top + buttonHeight;\n      $popover.removeClass('popover-bottom');\n    }\n\n    $backdrop.addClass('active');\n    $arrow.css({\n      left: buttonPosition.left + buttonWidth / 2 - $arrow.outerWidth() / 2 - popoverCSS.left + 'px'\n    });\n    $popover.css(popoverCSS);\n  },\n\n  hide: function () {\n    if (typeof this.view !== 'undefined') {\n      var $backdrop = $(this.view.firstNode());\n      $backdrop.removeClass('active');\n  \n      var $popover = $backdrop.find('.popover');\n      $popover.css({opacity: 0});\n  \n      Blaze.remove(this.view);\n    }\n  }\n};\n\nTemplate.ionPopover.rendered = function () {\n  $(window).on('keyup.ionPopover', function(event) {\n    if (event.which == 27) {\n      IonPopover.hide();\n    }\n  });\n};\n\nTemplate.ionPopover.destroyed = function () {\n  $(window).off('keyup.ionPopover');\n};\n\nTemplate.ionPopover.events({\n  // Handle clicking the backdrop\n  'click': function (event, template) {\n    if ($(event.target).hasClass('popover-backdrop')) {\n      IonPopover.hide();\n    }\n  }\n});\n","\nTemplate.__checkName(\"ionPopup\");\nTemplate[\"ionPopup\"] = new Template(\"Template.ionPopup\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"backdrop\"\n  }, \"\\n    \", HTML.DIV({\n    \"class\": \"popup-container\"\n  }, \"\\n      \", HTML.DIV({\n    \"class\": \"popup\"\n  }, \"\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"hasHead\"));\n  }, function() {\n    return [ \"\\n          \", HTML.DIV({\n      \"class\": \"popup-head\"\n    }, \"\\n            \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"title\"));\n    }, function() {\n      return [ \"\\n              \", HTML.H3({\n        \"class\": \"popup-title\"\n      }, Blaze.View(\"lookup:title\", function() {\n        return Spacebars.mustache(view.lookup(\"title\"));\n      })), \"\\n            \" ];\n    }), \"\\n            \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"subTitle\"));\n    }, function() {\n      return [ \"\\n              \", HTML.H5({\n        \"class\": \"popup-sub-title\"\n      }, Blaze.View(\"lookup:subTitle\", function() {\n        return Spacebars.mustache(view.lookup(\"subTitle\"));\n      })), \"\\n            \" ];\n    }), \"\\n          \"), \"\\n        \" ];\n  }), \"\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"template\"));\n  }, function() {\n    return [ \"\\n          \", HTML.DIV({\n      \"class\": \"popup-body\"\n    }, \"\\n            \", Blaze.View(\"lookup:template\", function() {\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"template\")));\n    }), \"\\n          \"), \"\\n        \" ];\n  }), \"\\n        \", Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"buttons\"), \"length\"));\n  }, function() {\n    return [ \"\\n          \", HTML.DIV({\n      \"class\": \"popup-buttons\"\n    }, \"\\n            \", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"buttons\"));\n    }, function() {\n      return [ \"\\n              \", HTML.BUTTON({\n        \"data-action\": \"buttonTapped\",\n        \"data-index\": function() {\n          return Spacebars.mustache(view.lookup(\"index\"));\n        },\n        \"class\": function() {\n          return [ \"button \", Spacebars.mustache(view.lookup(\"type\")) ];\n        }\n      }, \"\\n                \", Blaze.View(\"lookup:text\", function() {\n        return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"text\")));\n      }), \"\\n              \"), \"\\n            \" ];\n    }), \"\\n          \"), \"\\n        \" ];\n  }), \"\\n      \"), \"\\n    \"), \"\\n  \");\n}));\n","IonPopup = {\n  show: function (options) {\n    this.template = Template.ionPopup;\n    this.buttons = [];\n\n    for (var i = 0; i < options.buttons.length; i++) {\n      var button = options.buttons[i];\n      this.buttons.push({\n        text: button.text,\n        type: button.type,\n        index: i,\n        onTap: button.onTap\n      });\n    }\n\n    // Figure out if a template or just a html string was passed\n    var innerTemplate = '';\n    if (options.templateName) {\n      innerTemplate = Template[options.templateName].renderFunction().value;\n    } else if (options.template) {\n      innerTemplate = '<span>' + options.template + '</span>';\n    }\n\n    var data = {\n      title: options.title,\n      subTitle: options.subTitle,\n      buttons: this.buttons,\n      template: innerTemplate\n    };\n\n    this.view = Blaze.renderWithData(this.template, data, $('.ionic-body').get(0));\n    $('body').addClass('popup-open');\n\n    var $backdrop = $(this.view.firstNode());\n    $backdrop.addClass('visible active');\n    var $popup = $backdrop.find('.popup-container');\n    $popup.addClass('popup-showing active');\n  },\n\n  alert: function (options) {\n    IonPopup.show({\n      title: options.title,\n      subTitle: options.subTitle,\n      template: options.template,\n      templateName: options.templateName,\n      buttons: [\n        {\n          text: options.okText ? options.okText : 'Ok',\n          type: options.okType ? options.okType : 'button-positive',\n          onTap: function(event, template) {\n            if (options.onOk) options.onOk(event, template);\n            return true;\n          }\n        }\n      ]\n    });\n  },\n\n  confirm: function (options) {\n    IonPopup.show({\n      title: options.title,\n      subTitle: options.subTitle,\n      template: options.template,\n      templateName: options.templateName,\n      buttons: [\n        {\n          text: options.cancelText ? options.cancelText : 'Cancel',\n          type: options.cancelType ? options.cancelType : 'button-default',\n          onTap: function (event, template) {\n            if (options.onCancel) options.onCancel(event, template);\n            return true;\n          }\n        },\n        {\n          text: options.okText ? options.okText : 'Ok',\n          type: options.okType ? options.okType : 'button-positive',\n          onTap: function (event, template) {\n            if (options.onOk) options.onOk(event, template);\n            return true;\n          }\n        }\n      ]\n    });\n  },\n\n  prompt: function (options) {\n\n    var template = '';\n    if (options.templateName) {\n      template = Template[options.templateName].renderFunction().value;\n    } else if (options.template) {\n      template = '<span class=\"popup-prompt-text\">' + options.template + '</span>';\n    }\n\n    options.inputType = options.inputType || 'text';\n    options.inputPlaceholder = options.inputPlaceholder || '';\n    template += '<input type=\"' + options.inputType + '\" placeholder=\"' +\n      options.inputPlaceholder + '\" name=\"prompt\" >';\n\n    IonPopup.show({\n      title: options.title,\n      subTitle: options.subTitle,\n      template: template,\n      buttons: [\n        {\n          text: options.cancelText ? options.cancelText : 'Cancel',\n          type: options.cancelType ? options.cancelType : 'button-default',\n          onTap: function (event, template) {\n            if (options.onCancel) options.onCancel(event, template);\n            return true;\n          }\n        },\n        {\n          text: options.okText ? options.okText : 'Ok',\n          type: options.okType ? options.okType : 'button-positive',\n          onTap: function (event, template) {\n            var inputVal = $(template.firstNode).find('[name=prompt]').val();\n            if (options.onOk) options.onOk(event, inputVal);\n            return true;\n          }\n        }\n      ]\n    });\n  },\n\n  close: function () {\n    var $popup = this._domrange ? $(this.view.firstNode()).find('.popup-container') : $('.popup-container');\n    $popup.addClass('popup-hidden').removeClass('active');\n\n    setTimeout(function () {\n      $('body').removeClass('popup-open');\n      $('.backdrop').remove();\n      Blaze.remove(this.view);\n    }.bind(this), 100);\n  },\n\n  buttonClicked: function (index, event, template) {\n    var callback = this.buttons[index].onTap;\n    if(callback){\n      if (callback(event, template) === true) {\n        IonPopup.close();\n      }\n    }\n  }\n};\n\nTemplate.ionPopup.rendered = function () {\n  $(window).on('keyup.ionPopup', function(event) {\n    if (event.which == 27) {\n      IonPopup.close();\n    }\n  });\n};\n\nTemplate.ionPopup.destroyed = function () {\n  $(window).off('keyup.ionPopup');\n};\n\nTemplate.ionPopup.events({\n  // Handle clicking the backdrop\n  'click': function (event, template) {\n    if ($(event.target).hasClass('popup-container')) {\n      IonPopup.close();\n    }\n  },\n\n  'click [data-index]': function (event, template) {\n    var index = $(event.target).data('index');\n    IonPopup.buttonClicked(index, event, template);\n  }\n\n});\n\nTemplate.ionPopup.helpers({\n  hasHead: function() {\n    return this.title || this.subTitle;\n  }\n});\n","\nTemplate.__checkName(\"ionRadio\");\nTemplate[\"ionRadio\"] = new Template(\"Template.ionRadio\", (function() {\n  var view = this;\n  return HTML.LABEL({\n    \"class\": \"item item-radio\"\n  }, \"\\n    \", HTML.INPUT(HTML.Attrs(function() {\n    return Spacebars.attrMustache(view.lookup(\"inputAttrs\"));\n  })), \"\\n    \", HTML.DIV({\n    \"class\": \"item-content disable-pointer-events\"\n  }, \"\\n      \", Blaze._InOuterTemplateScope(view, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(view.templateContentBlock);\n    });\n  }), \"\\n    \"), HTML.Raw('\\n    <i class=\"radio-icon disable-pointer-events icon ion-checkmark\"></i>\\n  '));\n}));\n","Template.ionRadio.helpers({\n  inputAttrs: function () {\n    var attrs = {\n      type: 'radio'\n    };\n\n    if (this.name) {\n      attrs.name = this.name;\n    } else {\n      attrs.name = 'radio-group';\n    }\n\n    if (this.value) {\n      attrs.value = this.value;\n    } else {\n      attrs.value = '';\n    }\n\n    if (this.disabled) {\n      attrs.disabled = true;\n    }\n\n    if (this.checked) {\n      attrs.checked = true;\n    }\n\n    return attrs;\n  }\n})\n","\nTemplate.__checkName(\"ionSideMenu\");\nTemplate[\"ionSideMenu\"] = new Template(\"Template.ionSideMenu\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": function() {\n      return Spacebars.mustache(view.lookup(\"classes\"));\n    }\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(view.templateContentBlock);\n    });\n  }), \"\\n  \");\n}));\n","Template.ionSideMenu.helpers({\n  classes: function () {\n    var classes = ['snap-drawer'];\n\n    if (this.side) {\n      classes.push('menu-' + this.side);\n      classes.push('snap-drawer-' + this.side);\n    } else {\n      classes.push('menu-left');\n      classes.push('snap-drawer-left');\n    }\n\n    return classes.join(' ');\n  }\n});\n","\nTemplate.__checkName(\"ionSideMenuContainer\");\nTemplate[\"ionSideMenuContainer\"] = new Template(\"Template.ionSideMenuContainer\", (function() {\n  var view = this;\n  return Blaze._InOuterTemplateScope(view, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(view.templateContentBlock);\n    });\n  });\n}));\n","IonSideMenu = {\n  snapper: null\n};\n\nTemplate.ionSideMenuContainer.created = function () {\n  this.data = this.data || {};\n  this.side = this.data.side || 'both';\n  this.dragContent = true;\n  if (typeof this.data.dragContent != 'undefined') {\n    this.dragContent = this.data.dragContent\n  }\n};\n\nTemplate.ionSideMenuContainer.rendered = function () {\n  $snapperEl = this.$('.snap-content');\n  if (!$snapperEl) {\n    return;\n  }\n\n  var disable;\n  if (this.side == 'both') {\n    disable = 'none';\n  }\n  if (this.side == 'left') {\n    disable = 'right';\n  }\n  if (this.side == 'right') {\n    disable = 'left';\n  }\n\n  IonSideMenu.snapper = new Snap({\n    element: $snapperEl.get(0),\n    disable: disable,\n    touchToDrag: this.dragContent\n  });\n};\n\nTemplate.ionSideMenuContainer.destroyed = function () {\n  IonSideMenu.snapper = null;\n};\n","\nTemplate.__checkName(\"ionSideMenuContent\");\nTemplate[\"ionSideMenuContent\"] = new Template(\"Template.ionSideMenuContent\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": function() {\n      return Spacebars.mustache(view.lookup(\"classes\"));\n    }\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(view.templateContentBlock);\n    });\n  }), \"\\n  \");\n}));\n","Template.ionSideMenuContent.helpers({\n  classes: function () {\n    var classes = ['menu-content', 'snap-content', 'pane'];\n    return classes.join(' ');\n  }\n});\n","\nTemplate.__checkName(\"ionSideMenus\");\nTemplate[\"ionSideMenus\"] = new Template(\"Template.ionSideMenus\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": function() {\n      return Spacebars.mustache(view.lookup(\"classes\"));\n    }\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(view.templateContentBlock);\n    });\n  }), \"\\n  \");\n}));\n","Template.ionSideMenus.helpers({\n  classes: function () {\n    var classes = ['view', 'snap-drawers'];\n    return classes.join(' ');\n  }\n});\n","\nTemplate.__checkName(\"ionSlideBox\");\nTemplate[\"ionSlideBox\"] = new Template(\"Template.ionSlideBox\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"ion-slide-box\"\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(view.templateContentBlock);\n    });\n  }), \"\\n  \");\n}));\n","Template.ionSlideBox.created = function () {\n  this.data = this.data || {};\n  this.doesContinue = this.data.doesContinue || false;\n  this.autoPlay = this.data.autoPlay || false;\n  this.slideInterval = this.data.slideInterval || 4000;\n  this.showPager = typeof this.data.showPager != 'undefined' ? this.data.showPager : true;\n  this.initialSlide = this.data.initialSlide || Session.get('ion-slide-initial-slide') || 0;\n};\n\nTemplate.ionSlideBox.rendered = function () {\n  this.$('.ion-slide-box').slick({\n    infinite: this.doesContinue,\n    autoplay: this.autoPlay,\n    autoplaySpeed: this.slideInterval,\n    arrows: false,\n    dots: this.showPager,\n    dotsClass: 'slider-pager',\n    initialSlide: this.initialSlide,\n    customPaging: function(slider, i) {\n      return '<span class=\"slider-pager-page icon ion-record\"></span>';\n    }\n  });\n  this.$('.ion-slide-box').on('afterChange', function (event, slick, currentSlide) {\n    $(this).trigger({type: 'onSlideChanged', index: currentSlide});\n  });\n};\n\nTemplate.ionSlideBox.destroyed = function () {\n  var $slideBox = this.$('.ion-slide-box');\n  if ($slideBox.hasClass('slick-initialized')) $slideBox.slick('unslick');\n};\n","\nTemplate.__checkName(\"ionSpinner\");\nTemplate[\"ionSpinner\"] = new Template(\"Template.ionSpinner\", (function() {\n  var view = this;\n  return HTML.I({\n    \"class\": function() {\n      return [ \"spinner \", Spacebars.mustache(view.lookup(\"classes\")), \" \", Spacebars.mustache(view.lookup(\"icon\")) ];\n    }\n  });\n}));\n","\nTemplate.ionSpinner.helpers({\n  classes: function() {\n    classes = [];\n    if (this.class) {\n      var customClasses = this.class.split(' ');\n      _(customClasses).each(function(customClass) {\n        classes.push(customClass);\n      });\n    }\n    return classes.join(' ');\n  },\n\n  icon: function() {\n   iconName = \"spinner-\" + (this.icon || 'ios');  \n\n   return iconName;\n  }\n});\n\n// the relevant code for getting the spinner element and assigning the \n// spinner names is in the init function at the bottom of this file.\n// Almost all of the rest of the code is from the ionic version. \n\nTemplate.ionSpinner.rendered = function() {\n\n\n  var TRANSLATE32 = 'translate(32,32)';\n  var STROKE_OPACITY = 'stroke-opacity';\n  var ROUND = 'round';\n  var INDEFINITE = 'indefinite';\n  var DURATION = '750ms';\n  var NONE = 'none';\n  var SHORTCUTS = {\n    a: 'animate',\n    an: 'attributeName',\n    at: 'animateTransform',\n    c: 'circle',\n    da: 'stroke-dasharray',\n    os: 'stroke-dashoffset',\n    f: 'fill',\n    lc: 'stroke-linecap',\n    rc: 'repeatCount',\n    sw: 'stroke-width',\n    t: 'transform',\n    v: 'values'\n  };\n\n  var SPIN_ANIMATION = {\n    v: '0,32,32;360,32,32',\n    an: 'transform',\n    type: 'rotate',\n    rc: INDEFINITE,\n    dur: DURATION\n  };\n\n  //get icon name and element from blaze template\n\n  var iconElement = this.firstNode;\n  this.data = this.data || {};\n  iconName = this.data.icon || 'ios';\n\n\n  function createSvgElement(tagName, data, parent, spinnerName) {\n    var ele = document.createElement(SHORTCUTS[tagName] || tagName);\n    var k, x, y;\n    for (k in data) {\n\n      if (Array.isArray(data[k])) {\n        for (x = 0; x < data[k].length; x++) {\n          if (data[k][x].fn) {\n            for (y = 0; y < data[k][x].t; y++) {\n              createSvgElement(k, data[k][x].fn(y, spinnerName), ele, spinnerName);\n            }\n          } else {\n            createSvgElement(k, data[k][x], ele, spinnerName);\n          }\n        }\n\n      } else {\n        setSvgAttribute(ele, k, data[k]);\n      }\n    }\n\n    parent.appendChild(ele);\n  }\n\n  function setSvgAttribute(ele, k, v) {\n    ele.setAttribute(SHORTCUTS[k] || k, v);\n  }\n\n  function animationValues(strValues, i) {\n    var values = strValues.split(';');\n    var back = values.slice(i);\n    var front = values.slice(0, values.length - back.length);\n    values = back.concat(front).reverse();\n    return values.join(';') + ';' + values[0];\n  }\n\n  var IOS_SPINNER = {\n    sw: 4,\n    lc: ROUND,\n    line: [{\n      fn: function(i, spinnerName) {\n        return {\n          y1: spinnerName == 'ios' ? 17 : 12,\n          y2: spinnerName == 'ios' ? 29 : 20,\n          t: TRANSLATE32 + ' rotate(' + (30 * i + (i < 6 ? 180 : -180)) + ')',\n          a: [{\n            fn: function() {\n              return {\n                an: STROKE_OPACITY,\n                dur: DURATION,\n                v: animationValues('0;.1;.15;.25;.35;.45;.55;.65;.7;.85;1', i),\n                rc: INDEFINITE\n              };\n            },\n            t: 1\n          }]\n        };\n      },\n      t: 12\n    }]\n  };\n\n  var spinners = {\n\n    android: {\n      c: [{\n        sw: 6,\n        da: 128,\n        os: 82,\n        r: 26,\n        cx: 32,\n        cy: 32,\n        f: NONE\n      }]\n    },\n\n    ios: IOS_SPINNER,\n\n    'ios-small': IOS_SPINNER,\n\n    bubbles: {\n      sw: 0,\n      c: [{\n        fn: function(i) {\n          return {\n            cx: 24 * Math.cos(2 * Math.PI * i / 8),\n            cy: 24 * Math.sin(2 * Math.PI * i / 8),\n            t: TRANSLATE32,\n            a: [{\n              fn: function() {\n                return {\n                  an: 'r',\n                  dur: DURATION,\n                  v: animationValues('1;2;3;4;5;6;7;8', i),\n                  rc: INDEFINITE\n                };\n              },\n              t: 1\n            }]\n          };\n        },\n        t: 8\n      }]\n    },\n\n    circles: {\n\n      c: [{\n        fn: function(i) {\n          return {\n            r: 5,\n            cx: 24 * Math.cos(2 * Math.PI * i / 8),\n            cy: 24 * Math.sin(2 * Math.PI * i / 8),\n            t: TRANSLATE32,\n            sw: 0,\n            a: [{\n              fn: function() {\n                return {\n                  an: 'fill-opacity',\n                  dur: DURATION,\n                  v: animationValues('.3;.3;.3;.4;.7;.85;.9;1', i),\n                  rc: INDEFINITE\n                };\n              },\n              t: 1\n            }]\n          };\n        },\n        t: 8\n      }]\n    },\n\n    crescent: {\n      c: [{\n        sw: 4,\n        da: 128,\n        os: 82,\n        r: 26,\n        cx: 32,\n        cy: 32,\n        f: NONE,\n        at: [SPIN_ANIMATION]\n      }]\n    },\n\n    dots: {\n\n      c: [{\n        fn: function(i) {\n          return {\n            cx: 16 + (16 * i),\n            cy: 32,\n            sw: 0,\n            a: [{\n              fn: function() {\n                return {\n                  an: 'fill-opacity',\n                  dur: DURATION,\n                  v: animationValues('.5;.6;.8;1;.8;.6;.5', i),\n                  rc: INDEFINITE\n                };\n              },\n              t: 1\n            }, {\n              fn: function() {\n                return {\n                  an: 'r',\n                  dur: DURATION,\n                  v: animationValues('4;5;6;5;4;3;3', i),\n                  rc: INDEFINITE\n                };\n              },\n              t: 1\n            }]\n          };\n        },\n        t: 3\n      }]\n    },\n\n    lines: {\n      sw: 7,\n      lc: ROUND,\n      line: [{\n        fn: function(i) {\n          return {\n            x1: 10 + (i * 14),\n            x2: 10 + (i * 14),\n            a: [{\n              fn: function() {\n                return {\n                  an: 'y1',\n                  dur: DURATION,\n                  v: animationValues('16;18;28;18;16', i),\n                  rc: INDEFINITE\n                };\n              },\n              t: 1\n            }, {\n              fn: function() {\n                return {\n                  an: 'y2',\n                  dur: DURATION,\n                  v: animationValues('48;44;36;46;48', i),\n                  rc: INDEFINITE\n                };\n              },\n              t: 1\n            }, {\n              fn: function() {\n                return {\n                  an: STROKE_OPACITY,\n                  dur: DURATION,\n                  v: animationValues('1;.8;.5;.4;1', i),\n                  rc: INDEFINITE\n                };\n              },\n              t: 1\n            }]\n          };\n        },\n        t: 4\n      }]\n    },\n\n    ripple: {\n      f: NONE,\n      'fill-rule': 'evenodd',\n      sw: 3,\n      circle: [{\n        fn: function(i) {\n          return {\n            cx: 32,\n            cy: 32,\n            a: [{\n              fn: function() {\n                return {\n                  an: 'r',\n                  begin: (i * -1) + 's',\n                  dur: '2s',\n                  v: '0;24',\n                  keyTimes: '0;1',\n                  keySplines: '0.1,0.2,0.3,1',\n                  calcMode: 'spline',\n                  rc: INDEFINITE\n                };\n              },\n              t: 1\n            }, {\n              fn: function() {\n                return {\n                  an: STROKE_OPACITY,\n                  begin: (i * -1) + 's',\n                  dur: '2s',\n                  v: '.2;1;.2;0',\n                  rc: INDEFINITE\n                };\n              },\n              t: 1\n            }]\n          };\n        },\n        t: 2\n      }]\n    },\n\n    spiral: {\n      defs: [{\n        linearGradient: [{\n          id: 'sGD',\n          gradientUnits: 'userSpaceOnUse',\n          x1: 55,\n          y1: 46,\n          x2: 2,\n          y2: 46,\n          stop: [{\n            offset: 0.1,\n            class: 'stop1'\n          }, {\n            offset: 1,\n            class: 'stop2'\n          }]\n        }]\n      }],\n      g: [{\n        sw: 4,\n        lc: ROUND,\n        f: NONE,\n        path: [{\n          stroke: 'url(#sGD)',\n          d: 'M4,32 c0,15,12,28,28,28c8,0,16-4,21-9'\n        }, {\n          d: 'M60,32 C60,16,47.464,4,32,4S4,16,4,32'\n        }],\n        at: [SPIN_ANIMATION]\n      }]\n    }\n\n  };\n\n  var animations = {\n\n    android: function(ele) {\n\n      var rIndex = 0;\n      var rotateCircle = 0;\n      var startTime;\n      var svgEle = ele.querySelector('g');\n      var circleEle = ele.querySelector('circle');\n\n      function run() {\n        var v = easeInOutCubic(Date.now() - startTime, 650);\n        var scaleX = 1;\n        var translateX = 0;\n        var dasharray = (188 - (58 * v));\n        var dashoffset = (182 - (182 * v));\n\n        if (rIndex % 2) {\n          scaleX = -1;\n          translateX = -64;\n          dasharray = (128 - (-58 * v));\n          dashoffset = (182 * v);\n        }\n\n        var rotateLine = [0, -101, -90, -11, -180, 79, -270, -191][rIndex];\n\n        setSvgAttribute(circleEle, 'da', Math.max(Math.min(dasharray, 188), 128));\n        setSvgAttribute(circleEle, 'os', Math.max(Math.min(dashoffset, 182), 0));\n        setSvgAttribute(circleEle, 't', 'scale(' + scaleX + ',1) translate(' + translateX + ',0) rotate(' + rotateLine + ',32,32)');\n\n        rotateCircle += 4.1;\n        if (rotateCircle > 359) rotateCircle = 0;\n        setSvgAttribute(svgEle, 't', 'rotate(' + rotateCircle + ',32,32)');\n\n        if (v >= 1) {\n          rIndex++;\n          if (rIndex > 7) rIndex = 0;\n          startTime = Date.now();\n        }\n\n        window.requestAnimationFrame(run);\n      }\n\n      return function() {\n        startTime = Date.now();\n        run();\n      };\n\n    }\n\n  };\n\n  function easeInOutCubic(t, c) {\n    t /= c / 2;\n    if (t < 1) return 1 / 2 * t * t * t;\n    t -= 2;\n    return 1 / 2 * (t * t * t + 2);\n  }\n\n  init();\n\n  function init() {\n\n    var spinnerName = iconName;\n    var $element = $(iconElement);\n    var container = iconElement;\n    createSvgElement('svg', {\n      viewBox: '0 0 64 64',\n      g: [spinners[spinnerName]]\n    }, container, spinnerName);\n\n    // Specifically for animations to work,\n    // Android 4.3 and below requires the element to be\n    // added as an html string, rather than dynmically\n    // building up the svg element and appending it.\n    $element.html(container.innerHTML);\n\n    start(spinnerName, $element);\n\n  };\n\n  function start(spinnerName, ele) {\n    animations[spinnerName] && animations[spinnerName](ele[0])();\n  };\n\n\n}\n","\nTemplate.__checkName(\"ionSlide\");\nTemplate[\"ionSlide\"] = new Template(\"Template.ionSlide\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": function() {\n      return Spacebars.mustache(view.lookup(\"classes\"));\n    }\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(view.templateContentBlock);\n    });\n  }), \"\\n  \");\n}));\n","Template.ionSlide.helpers({\n  classes: function () {\n    var classes = ['ion-slide'];\n\n    if (this.class) {\n      classes.push(this.class);\n    }\n\n    return classes.join(' ');\n  }\n});\n","\nTemplate.__checkName(\"ionSubfooterBar\");\nTemplate[\"ionSubfooterBar\"] = new Template(\"Template.ionSubfooterBar\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": function() {\n      return Spacebars.mustache(view.lookup(\"classes\"));\n    }\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(view.templateContentBlock);\n    });\n  }), \"\\n  \");\n}));\n","Template.ionSubfooterBar.rendered = function () {\n  Session.set('hasSubfooter', true);\n};\n\nTemplate.ionSubfooterBar.destroyed = function () {\n  Session.set('hasSubfooter', false);\n};\n\nTemplate.ionSubfooterBar.helpers({\n  classes: function () {\n    var classes = ['bar', 'bar-subfooter'];\n\n    if (this.class) {\n      classes.push(this.class);\n    } else {\n      classes.push('bar-stable');\n    }\n\n    return classes.join(' ');\n  }\n});\n","\nTemplate.__checkName(\"ionSubheaderBar\");\nTemplate[\"ionSubheaderBar\"] = new Template(\"Template.ionSubheaderBar\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": function() {\n      return Spacebars.mustache(view.lookup(\"classes\"));\n    }\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(view.templateContentBlock);\n    });\n  }), \"\\n  \");\n}));\n","Template.ionSubheaderBar.rendered = function () {\n  Session.set('hasSubheader', true);\n};\n\nTemplate.ionSubheaderBar.destroyed = function () {\n  Session.set('hasSubheader', false);\n};\n\nTemplate.ionSubheaderBar.helpers({\n  classes: function () {\n    var classes = ['bar', 'bar-subheader'];\n\n    if (this.class) {\n      classes.push(this.class);\n    } else {\n      classes.push('bar-stable');\n    }\n\n    if (Session.get('hasTabsTop')) {\n      classes.push('has-tabs-top');\n    }\n\n    return classes.join(' ');\n  }\n});\n","\nTemplate.__checkName(\"ionTabs\");\nTemplate[\"ionTabs\"] = new Template(\"Template.ionTabs\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": function() {\n      return Spacebars.mustache(view.lookup(\"classes\"));\n    }\n  }, \"\\n    \", HTML.DIV({\n    \"class\": \"tabs\"\n  }, \"\\n      \", Blaze._InOuterTemplateScope(view, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(view.templateContentBlock);\n    });\n  }), \"\\n    \"), \"\\n  \");\n}));\n","Template.ionTabs.created = function () {\n  this.data = this.data || {};\n};\n\nTemplate.ionTabs.rendered = function () {\n  if ((this.data.class && this.data.class.indexOf('tabs-top') > -1) || this.data.style === 'android' || ( !this.data.style && Platform.isAndroid())) {\n    Session.set('hasTabsTop', true);\n  } else {\n    Session.set('hasTabs', true);\n  }\n\n  this.$('.tabs').children().each(function() {\n    var href = $(this).attr('href');\n    var current = Router.current().location.get().path;\n    if(href === current){\n      Session.set('ionTab.current', href);\n    }\n  });\n};\n\nTemplate.ionTabs.destroyed = function () {\n  Session.set('hasTabs', false);\n  Session.set('hasTabsTop', false);\n};\n\nTemplate.ionTabs.helpers({\n  classes: function () {\n    var classes = [];\n\n    if (this.class) {\n      classes.push(this.class);\n    }\n\n    if (this.style === 'android' || ( !this.style && Platform.isAndroid()) ) {\n      classes.push('tabs-top tabs-striped tabs-icon-left');\n    }\n\n    if (this.style === 'ios' || ( !this.style && Platform.isIOS()) ) {\n      classes.push('tabs-icon-top');\n    }\n\n    return classes.join(' ');\n  }\n});\n","\nTemplate.__checkName(\"ionTab\");\nTemplate[\"ionTab\"] = new Template(\"Template.ionTab\", (function() {\n  var view = this;\n  return HTML.A({\n    \"class\": function() {\n      return [ Spacebars.mustache(view.lookup(\"classes\")), \" \", Spacebars.mustache(view.lookup(\"isActive\")) ];\n    },\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"url\"));\n    },\n    \"data-ion-tab\": \"\"\n  }, \"\\n    \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"defaultIcon\"));\n  }, function() {\n    return [ \"\\n      \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"isActive\"));\n    }, function() {\n      return [ \"\\n        \", Blaze._TemplateWith(function() {\n        return {\n          icon: Spacebars.call(view.lookup(\"activeIcon\"))\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"ionIcon\"));\n      }), \"\\n      \" ];\n    }, function() {\n      return [ \"\\n        \", Blaze._TemplateWith(function() {\n        return {\n          icon: Spacebars.call(view.lookup(\"defaultIcon\"))\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"ionIcon\"));\n      }), \"\\n      \" ];\n    }), \"\\n    \" ];\n  }), \"\\n\\n    \", Blaze.View(\"lookup:title\", function() {\n    return Spacebars.mustache(view.lookup(\"title\"));\n  }), \"\\n\\n    \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"badgeNumber\"));\n  }, function() {\n    return [ \"\\n      \", HTML.DIV({\n      \"class\": function() {\n        return [ \"badge badge-\", Spacebars.mustache(view.lookup(\"badgeColor\")) ];\n      }\n    }, \"\\n        \", Blaze.View(\"lookup:badgeNumber\", function() {\n      return Spacebars.mustache(view.lookup(\"badgeNumber\"));\n    }), \"\\n      \"), \"\\n    \" ];\n  }), \"\\n  \");\n}));\n","Template.ionTab.events({\n  'click': function (event, template) {\n    if (template.data.path) {\n      Session.set('ionTab.current', template.data.path);\n    }\n\n    // If the tab's content is being rendered inside of a ionNavView\n    // we don't want to slide it in when switching tabs\n    IonNavigation.skipTransitions = true;\n  }\n});\n\nTemplate.ionTab.helpers({\n  classes: function () {\n    var classes = ['tab-item'];\n    if (this.class) {\n      classes.push(this.class);\n    }\n    if (this.badgeNumber) {\n      classes.push('has-badge');\n    }\n    return classes.join(' ');\n  },\n\n  url: function () {\n    if (this.href) {\n      return this.href;\n    }\n\n    if (this.path && Router.routes[this.path]) {\n      return Router.routes[this.path].path(Template.currentData());\n    }\n  },\n\n  isActive: function () {\n    var ionTabCurrent = Session.get('ionTab.current');\n\n    if (this.path && this.path === ionTabCurrent) {\n      return 'active';\n    }\n\n    // The initial case where there is no localStorage value and\n    // no session variable has been set, this attempts to set the correct tab\n    // to active based on the router\n    var route = Router.routes[this.path];\n    if(route && route.path(Template.currentData()) === ionTabCurrent){\n      return 'active';\n    }\n  },\n\n  activeIcon: function () {\n    if (this.iconOn) {\n      return this.iconOn;\n    } else {\n      return this.icon;\n    }\n  },\n\n  defaultIcon: function () {\n    if (this.iconOff) {\n      return this.iconOff;\n    } else {\n      return this.icon;\n    }\n  },\n\n  badgeNumber: function () {\n    return this.badgeNumber;\n  },\n\n  badgeColor: function () {\n    return this.badgeColor||'assertive';\n  }\n});\n","\nTemplate.__checkName(\"ionView\");\nTemplate[\"ionView\"] = new Template(\"Template.ionView\", (function() {\n  var view = this;\n  return [ Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"title\"));\n  }, function() {\n    return [ \"\\n    \", Blaze._TemplateWith(function() {\n      return \"headerTitle\";\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"contentFor\"), function() {\n        return [ \"\\n      \", HTML.H1({\n          \"class\": \"title\"\n        }, Blaze.View(\"lookup:title\", function() {\n          return Spacebars.mustache(view.lookup(\"title\"));\n        })), \"\\n    \" ];\n      });\n    }), \"\\n  \" ];\n  }), \"\\n\\n  \", HTML.DIV({\n    \"class\": function() {\n      return Spacebars.mustache(view.lookup(\"classes\"));\n    }\n  }, \"\\n    \", Blaze._InOuterTemplateScope(view, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(view.templateContentBlock);\n    });\n  }), \"\\n  \") ];\n}));\n","Template.ionView.rendered = function () {\n  // Reset our transition preference\n  IonNavigation.skipTransitions = false;\n\n  // Reset our scroll position\n  var routePath = Router.current().route.path(Router.current().params);\n  if(IonScrollPositions[routePath]) {\n    $('.overflow-scroll').not('.nav-view-leaving .overflow-scroll').scrollTop(IonScrollPositions[routePath]);\n    delete IonScrollPositions[routePath];\n  }\n};\n\nTemplate.ionView.helpers({\n  classes: function () {\n    var classes = ['view'];\n\n    if (this.class) {\n      classes.push(this.class);\n    }\n\n    return classes.join(' ');\n  },\n  title: function () {\n    if ( Template.instance().data && Template.instance().data.title ) {\n      return Template.instance().data.title;\n    }\n  }\n});\n"]}}]