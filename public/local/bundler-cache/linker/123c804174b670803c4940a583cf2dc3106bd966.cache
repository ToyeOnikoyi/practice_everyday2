[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.deps.Tracker;\nDeps = Package.deps.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nServiceConfiguration = Package['service-configuration'].ServiceConfiguration;\nPlatform = Package['meteoric:ionic'].Platform;\nIonActionSheet = Package['meteoric:ionic'].IonActionSheet;\nIonBackdrop = Package['meteoric:ionic'].IonBackdrop;\nIonHeaderBar = Package['meteoric:ionic'].IonHeaderBar;\nIonKeyboard = Package['meteoric:ionic'].IonKeyboard;\nIonLoading = Package['meteoric:ionic'].IonLoading;\nIonModal = Package['meteoric:ionic'].IonModal;\nIonNavigation = Package['meteoric:ionic'].IonNavigation;\nIonPopover = Package['meteoric:ionic'].IonPopover;\nIonPopup = Package['meteoric:ionic'].IonPopup;\nIonSideMenu = Package['meteoric:ionic'].IonSideMenu;\nmoment = Package['momentjs:moment'].moment;\nPush = Package['raix:push'].Push;\nBert = Package['themeteorchef:bert'].Bert;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nIron = Package['iron:core'].Iron;\nLog = Package.logging.Log;\ncheck = Package.check.check;\nMatch = Package.check.Match;\nRandom = Package.random.Random;\nEJSON = Package.ejson.EJSON;\nCollection2 = Package['aldeed:collection2-core'].Collection2;\nSimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nMongoObject = Package['aldeed:simple-schema'].MongoObject;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"lib\":{\"router.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// lib/router.js                                                            //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nRouter.configure({                                                          // 1\n  layoutTemplate: 'layout'                                                  // 2\n                                                                            //\n});                                                                         // 1\n                                                                            //\nRouter.route('/', {                                                         // 6\n  name: 'homeIndex'                                                         // 7\n                                                                            //\n});                                                                         // 6\n                                                                            //\nRouter.route('/confirm', {                                                  // 12\n  name: 'confirm'                                                           // 13\n                                                                            //\n});                                                                         // 12\n                                                                            //\n/*onBeforeAction: function(){                                               //\n  var currentUser = Meteor.userId();                                        //\n  if(countdown.start())                                                     //\n    {                                                                       //\n    //    this.render('practiceToday');                                     //\n                                                                            //\n    }else{                                                                  //\n      this.next();                                                          //\n         }                                                                  //\n}*/                                                                         //\nRouter.route('/noConfirm', {                                                // 27\n  name: 'noConfirm'                                                         // 28\n                                                                            //\n});                                                                         // 27\n                                                                            //\nRouter.route('/oops', {                                                     // 33\n  name: 'oops'                                                              // 34\n                                                                            //\n});                                                                         // 33\n                                                                            //\nRouter.route('/dayOffTaken', {                                              // 39\n  name: 'dayOffTaken'                                                       // 40\n                                                                            //\n});                                                                         // 39\n                                                                            //\nRouter.route('/practiceToday', {                                            // 46\n  name: 'practiceToday'                                                     // 47\n                                                                            //\n});                                                                         // 46\n                                                                            //\nRouter.route('/success', {                                                  // 52\n  name: 'success'                                                           // 53\n                                                                            //\n});                                                                         // 52\n                                                                            //\nRouter.route('/settings', {                                                 // 60\n  name: 'settings'                                                          // 61\n                                                                            //\n});                                                                         // 60\n//////////////////////////////////////////////////////////////////////////////\n\n}},\"api\":{\"collections\":{\"slider.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// api/collections/slider.js                                                //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nCollection = new Mongo.Collection('collection');                            // 1\n                                                                            //\nCollection.attachSchema(new SimpleSchema({                                  // 3\n  slider: {                                                                 // 4\n    type: Number,                                                           // 5\n    max: 150,                                                               // 6\n    min: 30,                                                                // 7\n    autoform: {                                                             // 8\n      type: \"noUiSlider\",                                                   // 9\n      step: 10,                                                             // 10\n      noUiSlider_pipsOptions: {                                             // 11\n        mode: 'steps',                                                      // 12\n        density: 5                                                          // 13\n      }                                                                     // 11\n    }                                                                       // 8\n  }                                                                         // 4\n}));                                                                        // 3\n//////////////////////////////////////////////////////////////////////////////\n\n},\"streaks.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// api/collections/streaks.js                                               //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nStreaks = new Mongo.Collection('streaks');                                  // 1\n//////////////////////////////////////////////////////////////////////////////\n\n},\"success.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// api/collections/success.js                                               //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\n                                                                            //\n//////////////////////////////////////////////////////////////////////////////\n\n}}},\"server\":{\"practiceToday.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// server/practiceToday.js                                                  //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nMeteor.publish('myStreaks', function () {                                   // 1\n                                                                            //\n  var currentUser = this.userId;                                            // 3\n  return Streaks.find({});                                                  // 4\n});                                                                         // 8\n                                                                            //\nMeteor.methods({                                                            // 10\n  'addStreaks': function addStreaks(flag) {                                 // 11\n    var currentUser = Meteor.user();                                        // 12\n                                                                            //\n    Streaks.upsert({                                                        // 14\n      owner: currentUser,                                                   // 15\n      checkStreakToday: flag                                                // 16\n    }, { $inc: { streaks: 1 } });                                           // 14\n  },                                                                        // 19\n  'updateToZero': function updateToZero() {                                 // 20\n                                                                            //\n    Streaks.update({}, { $set: { streaks: 0, checkStreakToday: false } });  // 22\n  }                                                                         // 23\n                                                                            //\n});                                                                         // 10\n//////////////////////////////////////////////////////////////////////////////\n\n},\"social-config.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// server/social-config.js                                                  //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nServiceConfiguration.configurations.remove({                                // 1\n    service: 'facebook'                                                     // 2\n});                                                                         // 1\n                                                                            //\nServiceConfiguration.configurations.insert({                                // 5\n    service: 'facebook',                                                    // 6\n    appId: '817353958364527',                                               // 7\n    secret: 'adfb2c08cbac6840f5c201f815f4f7ad'                              // 8\n});                                                                         // 5\n//////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":[\"meteor/meteor\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// server/main.js                                                           //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nvar Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});\n                                                                            //\nMeteor.startup(function () {                                                // 3\n  // code to run on server at startup                                       //\n                                                                            //\n});                                                                         // 6\n//////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./lib/router.js\");\nrequire(\"./api/collections/slider.js\");\nrequire(\"./api/collections/streaks.js\");\nrequire(\"./api/collections/success.js\");\nrequire(\"./server/practiceToday.js\");\nrequire(\"./server/social-config.js\");\nrequire(\"./server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/lib/router.js","/api/collections/slider.js","/api/collections/streaks.js","/server/practiceToday.js","/server/social-config.js","/server/main.js"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,SAAP,CAAkB;AAChB,kBAAiB;;AADD,CAAlB;;AAKA,OAAO,KAAP,CAAa,GAAb,EAAkB;AAClB,QAAM;;AADY,CAAlB;;AAMA,OAAO,KAAP,CAAa,UAAb,EAAyB;AACzB,QAAM;;AADmB,CAAzB;;;;;;;;;;;;AAeA,OAAO,KAAP,CAAa,YAAb,EAA2B;AAC3B,QAAM;;AADqB,CAA3B;;AAMA,OAAO,KAAP,CAAa,OAAb,EAAsB;AACtB,QAAM;;AADgB,CAAtB;;AAMA,OAAO,KAAP,CAAa,cAAb,EAA6B;AAC7B,QAAM;;AADuB,CAA7B;;AAOA,OAAO,KAAP,CAAa,gBAAb,EAA+B;AAC/B,QAAM;;AADyB,CAA/B;;AAMA,OAAO,KAAP,CAAa,UAAb,EAAyB;AACzB,QAAM;;AADmB,CAAzB;;AAQA,OAAO,KAAP,CAAa,WAAb,EAA0B;AAC1B,QAAM;;AADoB,CAA1B,gF;;;;;;;;;;;AC3DA,aAAa,IAAI,MAAM,UAAV,CAAqB,YAArB,CAAb;;AAEA,WAAW,YAAX,CAAwB,IAAI,YAAJ,CAAkB;AACxC,UAAQ;AACN,UAAM,MADA;AAEN,SAAK,GAFC;AAGN,SAAK,EAHC;AAIN,cAAU;AACR,YAAM,YADE;AAER,YAAM,EAFE;AAGR,8BAAwB;AACtB,cAAM,OADgB;AAEtB,iBAAS;AAFa;AAHhB;AAJJ;AADgC,CAAlB,CAAxB,8E;;;;;;;;;;;ACFA,UAAU,IAAI,MAAM,UAAV,CAAqB,SAArB,CAAV,uC;;;;;;;;;;;;;;;;;;;;;;ACAA,OAAO,OAAP,CAAe,WAAf,EAA4B,YAAU;;AAEtC,MAAI,cAAc,KAAK,MAAvB;AACA,SAAO,QAAQ,IAAR,CAAa,EAAb,CAAP;AAIC,CAPD;;AASA,OAAO,OAAP,CAAe;AACf,gBAAa,oBAAU,IAAV,EAAe;AAC5B,QAAI,cAAc,OAAO,IAAP,EAAlB;;AAEA,YAAQ,MAAR,CAAe;AACb,aAAM,WADO;AAEb,wBAAkB;AAFL,KAAf,EAGE,EAAC,MAAM,EAAC,SAAQ,CAAT,EAAP,EAHF;AAKC,GATc;AAUf,kBAAe,wBAAU;;AAEvB,YAAQ,MAAR,CAAe,EAAf,EAAkB,EAAC,MAAM,EAAC,SAAQ,CAAT,EAAY,kBAAiB,KAA7B,EAAP,EAAlB;AACD;;AAbc,CAAf,gF;;;;;;;;;;;ACTA,qBAAqB,cAArB,CAAoC,MAApC,CAA2C;AACvC,aAAS;AAD8B,CAA3C;;AAIA,qBAAqB,cAArB,CAAoC,MAApC,CAA2C;AACvC,aAAS,UAD8B;AAEvC,WAAO,iBAFgC;AAGvC,YAAQ;AAH+B,CAA3C,+E;;;;;;;;;;;ACJA,SAAS,MAAT,QAAuB,eAAvB;;AAEA,OAAO,OAAP,CAAe,YAAM;;;AAGpB,CAHD,+E","file":"/app.js","sourcesContent":["Router.configure ({\r\n  layoutTemplate : 'layout',\r\n\r\n});\r\n\r\nRouter.route('/', {\r\nname: 'homeIndex',\r\n\r\n\r\n})\r\n\r\nRouter.route('/confirm', {\r\nname: 'confirm',\r\n\r\n/*onBeforeAction: function(){\r\n  var currentUser = Meteor.userId();\r\n  if(countdown.start())\r\n    {\r\n    //    this.render('practiceToday');\r\n\r\n    }else{\r\n      this.next();\r\n         }\r\n}*/\r\n})\r\n\r\nRouter.route('/noConfirm', {\r\nname: 'noConfirm',\r\n\r\n\r\n})\r\n\r\nRouter.route('/oops', {\r\nname: 'oops',\r\n\r\n\r\n})\r\n\r\nRouter.route('/dayOffTaken', {\r\nname: 'dayOffTaken',\r\n\r\n\r\n})\r\n\r\n\r\nRouter.route('/practiceToday', {\r\nname: 'practiceToday',\r\n\r\n\r\n});\r\n\r\nRouter.route('/success', {\r\nname: 'success',\r\n\r\n\r\n});\r\n\r\n\r\n\r\nRouter.route('/settings', {\r\nname: 'settings',\r\n\r\n\r\n})\r\n","Collection = new Mongo.Collection('collection');\r\n\r\nCollection.attachSchema(new SimpleSchema ({\r\n  slider: {\r\n    type: Number,\r\n    max: 150,\r\n    min: 30,\r\n    autoform: {\r\n      type: \"noUiSlider\",\r\n      step: 10,\r\n      noUiSlider_pipsOptions: {\r\n        mode: 'steps',\r\n        density: 5\r\n      }\r\n    }\r\n  }\r\n}));\r\n","Streaks = new Mongo.Collection('streaks');\r\n","Meteor.publish('myStreaks', function(){\r\n\r\nvar currentUser = this.userId;\r\nreturn Streaks.find({});\r\n\r\n\r\n\r\n});\r\n\r\nMeteor.methods({\r\n'addStreaks':function (flag){\r\nvar currentUser = Meteor.user();\r\n\r\nStreaks.upsert({\r\n  owner:currentUser,\r\n  checkStreakToday: flag,\r\n},{$inc: {streaks:1}});\r\n\r\n},\r\n'updateToZero':function(){\r\n\r\n  Streaks.update({},{$set: {streaks:0, checkStreakToday:false}});\r\n}\r\n\r\n\r\n})\r\n","ServiceConfiguration.configurations.remove({\r\n    service: 'facebook'\r\n});\r\n\r\nServiceConfiguration.configurations.insert({\r\n    service: 'facebook',\r\n    appId: '817353958364527',\r\n    secret: 'adfb2c08cbac6840f5c201f815f4f7ad'\r\n});\r\n","import { Meteor } from 'meteor/meteor';\r\n\r\nMeteor.startup(() => {\r\n  // code to run on server at startup\r\n\r\n});\r\n"]}}]