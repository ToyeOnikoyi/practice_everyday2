[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Template = Package.templating.Template;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar AutoForm = Package['aldeed:autoform'].AutoForm;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Buffer = Package.modules.Buffer;\nvar process = Package.modules.process;\nvar Symbol = Package['ecmascript-runtime'].Symbol;\nvar Map = Package['ecmascript-runtime'].Map;\nvar Set = Package['ecmascript-runtime'].Set;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\nvar SimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nvar MongoObject = Package['aldeed:simple-schema'].MongoObject;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"muqube:autoform-selectable\":{\"template.autoform-selectable.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// packages/muqube_autoform-selectable/template.autoform-selectable.js                            //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\n                                                                                                  // 1\nTemplate.__checkName(\"afSelectable\");                                                             // 2\nTemplate[\"afSelectable\"] = new Template(\"Template.afSelectable\", (function() {                    // 3\n  var view = this;                                                                                // 4\n  return HTML.DIV(HTML.Attrs({                                                                    // 5\n    \"class\": \"autoform-selectable-container\"                                                      // 6\n  }, function() {                                                                                 // 7\n    return Spacebars.attrMustache(view.lookup(\"atts\"));                                           // 8\n  }), \"\\n        \", Blaze.Each(function() {                                                       // 9\n    return {                                                                                      // 10\n      _sequence: Spacebars.call(view.lookup(\"options\")),                                          // 11\n      _variable: \"option\"                                                                         // 12\n    };                                                                                            // 13\n  }, function() {                                                                                 // 14\n    return [ \"\\n            \", HTML.DIV({                                                         // 15\n      \"class\": function() {                                                                       // 16\n        return [ Spacebars.mustache(view.lookup(\"isOptionSelected\"), Spacebars.dot(view.lookup(\"option\"), \"value\")), \" selectable-option\" ];\n      },                                                                                          // 18\n      \"data-value\": function() {                                                                  // 19\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"option\"), \"value\"));                 // 20\n      }                                                                                           // 21\n    }, Blaze.View(\"lookup:option.label\", function() {                                             // 22\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"option\"), \"label\"));                   // 23\n    })), \"\\n        \" ];                                                                          // 24\n  }), \"\\n    \");                                                                                  // 25\n}));                                                                                              // 26\n                                                                                                  // 27\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"autoform-selectable.js\":[\"babel-runtime/helpers/typeof\",function(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// packages/muqube_autoform-selectable/autoform-selectable.js                                     //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nexports.__esModule = true;                                                                        //\nexports.name = undefined;                                                                         //\n                                                                                                  //\nvar _typeof2 = require(\"babel-runtime/helpers/typeof\");                                           //\n                                                                                                  //\nvar _typeof3 = _interopRequireDefault(_typeof2);                                                  //\n                                                                                                  //\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n                                                                                                  //\nvar name = exports.name = 'muqube:autoform-selectable';                                           // 1\n                                                                                                  //\nAutoForm.addInputType(\"selectable\", {                                                             // 3\n    template: \"afSelectable\",                                                                     // 4\n    valueOut: function () {                                                                       // 5\n        function valueOut() {                                                                     // 5\n            var data = this.data();                                                               // 6\n            var selection = this.find('.selected.selectable-option');                             // 7\n                                                                                                  //\n            if (data.multiple) {                                                                  // 9\n                var _ret = function () {                                                          // 9\n                    var values = [];                                                              // 10\n                    selection.each(function (index, elem) {                                       // 11\n                        values.push($(elem).data('value'));                                       // 12\n                    });                                                                           // 13\n                    return {                                                                      // 14\n                        v: values                                                                 // 14\n                    };                                                                            // 14\n                }();                                                                              // 9\n                                                                                                  //\n                if ((typeof _ret === \"undefined\" ? \"undefined\" : (0, _typeof3[\"default\"])(_ret)) === \"object\") return _ret.v;\n            } else {                                                                              // 15\n                return selection.data('value');                                                   // 16\n            }                                                                                     // 17\n        }                                                                                         // 18\n                                                                                                  //\n        return valueOut;                                                                          // 5\n    }()                                                                                           // 5\n});                                                                                               // 3\n                                                                                                  //\nTemplate.afSelectable.helpers({                                                                   // 21\n    atts: function () {                                                                           // 22\n        function atts() {                                                                         // 22\n            var data = Template.currentData();                                                    // 23\n            var atts = data.atts;                                                                 // 24\n            atts[\"data-multiple\"] = data.atts[\"multiple\"];                                        // 25\n            atts[\"data-schema-key\"] = data.atts[\"data-schema-key\"];                               // 26\n                                                                                                  //\n            return atts;                                                                          // 28\n        }                                                                                         // 29\n                                                                                                  //\n        return atts;                                                                              // 22\n    }(),                                                                                          // 22\n    isOptionSelected: function () {                                                               // 30\n        function isOptionSelected(option) {                                                       // 21\n            var value = Template.currentData().value;                                             // 31\n            var isSelected = false;                                                               // 32\n                                                                                                  //\n            if (Array.isArray(value)) {                                                           // 34\n                isSelected = value.indexOf(option) != -1;                                         // 35\n            } else {                                                                              // 36\n                isSelected = option === value;                                                    // 37\n            }                                                                                     // 38\n                                                                                                  //\n            return isSelected ? \"selected\" : \"\";                                                  // 40\n        }                                                                                         // 41\n                                                                                                  //\n        return isOptionSelected;                                                                  // 21\n    }(),                                                                                          // 21\n    options: function () {                                                                        // 42\n        function options() {                                                                      // 21\n            var data = Template.currentData();                                                    // 43\n            return data.selectOptions;                                                            // 44\n        }                                                                                         // 45\n                                                                                                  //\n        return options;                                                                           // 21\n    }()                                                                                           // 21\n});                                                                                               // 21\n                                                                                                  //\nTemplate.afSelectable.events({                                                                    // 48\n    'click .selectable-option': function () {                                                     // 49\n        function clickSelectableOption(e, t) {                                                    // 48\n            var target = $(e.target),                                                             // 50\n                isMultiple = t && t.data && t.data.atts && t.data.atts.multiple,                  // 50\n                isSelected = target.hasClass('selected'),                                         // 50\n                numSelected = t.findAll('.selected.selectable-option').length,                    // 50\n                min = t.data.atts.min || Number.MIN_SAFE_INTEGER,                                 // 50\n                max = t.data.atts.max || Number.MAX_SAFE_INTEGER;                                 // 50\n                                                                                                  //\n            if (isMultiple) {                                                                     // 57\n                if (min < numSelected && isSelected || numSelected < max && !isSelected) {        // 58\n                    target.toggleClass('selected');                                               // 59\n                }                                                                                 // 60\n            } else {                                                                              // 61\n                target.toggleClass('selected');                                                   // 62\n                target.siblings().removeClass('selected');                                        // 63\n            }                                                                                     // 64\n        }                                                                                         // 65\n                                                                                                  //\n        return clickSelectableOption;                                                             // 48\n    }()                                                                                           // 48\n});                                                                                               // 48\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}}}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./node_modules/meteor/muqube:autoform-selectable/template.autoform-selectable.js\");\nrequire(\"./node_modules/meteor/muqube:autoform-selectable/autoform-selectable.js\");\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['muqube:autoform-selectable'] = {};\n\n})();\n","servePath":"/packages/muqube_autoform-selectable.js","sourceMap":{"version":3,"sources":["/packages/muqube_autoform-selectable/template.autoform-selectable.js","/packages/muqube:autoform-selectable/autoform-selectable.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uG;;;;;;;;;;;;;;;;;;;;AC1BO,IAAM,sBAAO,4BAAb;;AAEP,SAAS,YAAT,CAAsB,YAAtB,EAAoC;AAChC,cAAU,cADsB;AAEhC;AAAU,4BAAW;AACjB,gBAAM,OAAO,KAAK,IAAL,EAAb;AACA,gBAAI,YAAY,KAAK,IAAL,CAAU,6BAAV,CAAhB;;AAEA,gBAAI,KAAK,QAAT,EAAmB;AAAA;AACf,wBAAI,SAAS,EAAb;AACA,8BAAU,IAAV,CAAe,UAAC,KAAD,EAAQ,IAAR,EAAiB;AAC5B,+BAAO,IAAP,CAAY,EAAE,IAAF,EAAQ,IAAR,CAAa,OAAb,CAAZ;AACH,qBAFD;AAGA;AAAA,2BAAO;AAAP;AALe;;AAAA;AAMlB,aAND,MAMO;AACH,uBAAO,UAAU,IAAV,CAAe,OAAf,CAAP;AACH;AACJ;;AAbD;AAAA;AAFgC,CAApC;;AAkBA,SAAS,YAAT,CAAsB,OAAtB,CAA8B;AAC1B;AAAM,wBAAY;AACd,gBAAI,OAAO,SAAS,WAAT,EAAX;AACA,gBAAI,OAAO,KAAK,IAAhB;AACA,iBAAK,eAAL,IAAwB,KAAK,IAAL,CAAU,UAAV,CAAxB;AACA,iBAAK,iBAAL,IAA0B,KAAK,IAAL,CAAU,iBAAV,CAA1B;;AAEA,mBAAO,IAAP;AACH;;AAPD;AAAA,OAD0B;AAS1B,oBAT0B;AAAA,kCASR,MATQ,EASA;AACtB,gBAAM,QAAQ,SAAS,WAAT,GAAuB,KAArC;AACA,gBAAI,aAAa,KAAjB;;AAEA,gBAAI,MAAM,OAAN,CAAc,KAAd,CAAJ,EAA0B;AACtB,6BAAa,MAAM,OAAN,CAAc,MAAd,KAAyB,CAAC,CAAvC;AACH,aAFD,MAEO;AACH,6BAAa,WAAW,KAAxB;AACH;;AAED,mBAAQ,UAAD,GAAc,UAAd,GAA2B,EAAlC;AACH;;AApByB;AAAA;AAqB1B,WArB0B;AAAA,2BAqBhB;AACN,gBAAI,OAAO,SAAS,WAAT,EAAX;AACA,mBAAO,KAAK,aAAZ;AACH;;AAxByB;AAAA;AAAA,CAA9B;;AA2BA,SAAS,YAAT,CAAsB,MAAtB,CAA6B;AACzB,8BADyB;AAAA,uCACE,CADF,EACK,CADL,EACQ;AAC7B,gBAAM,SAAS,EAAE,EAAE,MAAJ,CAAf;AAAA,gBACI,aAAa,KAAK,EAAE,IAAP,IAAe,EAAE,IAAF,CAAO,IAAtB,IAA8B,EAAE,IAAF,CAAO,IAAP,CAAY,QAD3D;AAAA,gBAEI,aAAa,OAAO,QAAP,CAAgB,UAAhB,CAFjB;AAAA,gBAGI,cAAc,EAAE,OAAF,CAAU,6BAAV,EAAyC,MAH3D;AAAA,gBAII,MAAM,EAAE,IAAF,CAAO,IAAP,CAAY,GAAZ,IAAmB,OAAO,gBAJpC;AAAA,gBAKI,MAAM,EAAE,IAAF,CAAO,IAAP,CAAY,GAAZ,IAAmB,OAAO,gBALpC;;AAOA,gBAAI,UAAJ,EAAe;AACX,oBAAO,MAAM,WAAP,IAAuB,UAAxB,IAAyC,cAAc,GAAf,IAAuB,CAAC,UAArE,EAAmF;AAC/E,2BAAO,WAAP,CAAmB,UAAnB;AACH;AACJ,aAJD,MAIO;AACH,uBAAO,WAAP,CAAmB,UAAnB;AACA,uBAAO,QAAP,GAAkB,WAAlB,CAA8B,UAA9B;AACH;AACJ;;AAjBwB;AAAA;AAAA,CAA7B,sG","file":"/packages/muqube_autoform-selectable.js","sourcesContent":["\nTemplate.__checkName(\"afSelectable\");\nTemplate[\"afSelectable\"] = new Template(\"Template.afSelectable\", (function() {\n  var view = this;\n  return HTML.DIV(HTML.Attrs({\n    \"class\": \"autoform-selectable-container\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"atts\"));\n  }), \"\\n        \", Blaze.Each(function() {\n    return {\n      _sequence: Spacebars.call(view.lookup(\"options\")),\n      _variable: \"option\"\n    };\n  }, function() {\n    return [ \"\\n            \", HTML.DIV({\n      \"class\": function() {\n        return [ Spacebars.mustache(view.lookup(\"isOptionSelected\"), Spacebars.dot(view.lookup(\"option\"), \"value\")), \" selectable-option\" ];\n      },\n      \"data-value\": function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"option\"), \"value\"));\n      }\n    }, Blaze.View(\"lookup:option.label\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"option\"), \"label\"));\n    })), \"\\n        \" ];\n  }), \"\\n    \");\n}));\n","export const name = 'muqube:autoform-selectable';\n\nAutoForm.addInputType(\"selectable\", {\n    template: \"afSelectable\",\n    valueOut: function() {\n        const data = this.data();\n        let selection = this.find('.selected.selectable-option');\n\n        if (data.multiple) {\n            let values = [];\n            selection.each((index, elem) => {\n                values.push($(elem).data('value'));\n            });\n            return values;\n        } else {\n            return selection.data('value');\n        }\n    }\n});\n\nTemplate.afSelectable.helpers({\n    atts: function () {\n        var data = Template.currentData();\n        var atts = data.atts;\n        atts[\"data-multiple\"] = data.atts[\"multiple\"];\n        atts[\"data-schema-key\"] = data.atts[\"data-schema-key\"];\n\n        return atts;\n    },\n    isOptionSelected (option) {\n        const value = Template.currentData().value;\n        let isSelected = false;\n\n        if (Array.isArray(value)) {\n            isSelected = value.indexOf(option) != -1;\n        } else {\n            isSelected = option === value;\n        }\n\n        return (isSelected)? \"selected\" : \"\" ;\n    },\n    options() {\n        var data = Template.currentData();\n        return data.selectOptions;\n    }\n});\n\nTemplate.afSelectable.events({\n    'click .selectable-option'(e, t) {\n        const target = $(e.target),\n            isMultiple = t && t.data && t.data.atts && t.data.atts.multiple,\n            isSelected = target.hasClass('selected'),\n            numSelected = t.findAll('.selected.selectable-option').length,\n            min = t.data.atts.min || Number.MIN_SAFE_INTEGER,\n            max = t.data.atts.max || Number.MAX_SAFE_INTEGER;\n        \n        if (isMultiple){ \n            if ( ((min < numSelected) && isSelected) || ((numSelected < max) && !isSelected) ) {\n                target.toggleClass('selected');\n            }\n        } else {\n            target.toggleClass('selected');\n            target.siblings().removeClass('selected');\n        }\n    }\n});"]}}]