{"metadata":{"usedHelpers":["typeof","interopRequireDefault"],"marked":[],"modules":{"imports":[],"exports":{"exported":["name"],"specifiers":[{"kind":"local","local":"name","exported":"name"}]}}},"options":{"filename":"/packages/muqube:autoform-selectable/autoform-selectable.js","filenameRelative":"/packages/muqube:autoform-selectable/autoform-selectable.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/packages/muqube:autoform-selectable/autoform-selectable.js.map","sourceFileName":"/packages/muqube:autoform-selectable/autoform-selectable.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"autoform-selectable"},"ignored":false,"code":"exports.__esModule = true;\nexports.name = undefined;\n\nvar _typeof2 = require(\"babel-runtime/helpers/typeof\");\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar name = exports.name = 'muqube:autoform-selectable';\n\nAutoForm.addInputType(\"selectable\", {\n    template: \"afSelectable\",\n    valueOut: function () {\n        function valueOut() {\n            var data = this.data();\n            var selection = this.find('.selected.selectable-option');\n\n            if (data.multiple) {\n                var _ret = function () {\n                    var values = [];\n                    selection.each(function (index, elem) {\n                        values.push($(elem).data('value'));\n                    });\n                    return {\n                        v: values\n                    };\n                }();\n\n                if ((typeof _ret === \"undefined\" ? \"undefined\" : (0, _typeof3[\"default\"])(_ret)) === \"object\") return _ret.v;\n            } else {\n                return selection.data('value');\n            }\n        }\n\n        return valueOut;\n    }()\n});\n\nTemplate.afSelectable.helpers({\n    atts: function () {\n        function atts() {\n            var data = Template.currentData();\n            var atts = data.atts;\n            atts[\"data-multiple\"] = data.atts[\"multiple\"];\n            atts[\"data-schema-key\"] = data.atts[\"data-schema-key\"];\n\n            return atts;\n        }\n\n        return atts;\n    }(),\n    isOptionSelected: function () {\n        function isOptionSelected(option) {\n            var value = Template.currentData().value;\n            var isSelected = false;\n\n            if (Array.isArray(value)) {\n                isSelected = value.indexOf(option) != -1;\n            } else {\n                isSelected = option === value;\n            }\n\n            return isSelected ? \"selected\" : \"\";\n        }\n\n        return isOptionSelected;\n    }(),\n    options: function () {\n        function options() {\n            var data = Template.currentData();\n            return data.selectOptions;\n        }\n\n        return options;\n    }()\n});\n\nTemplate.afSelectable.events({\n    'click .selectable-option': function () {\n        function clickSelectableOption(e, t) {\n            var target = $(e.target),\n                isMultiple = t && t.data && t.data.atts && t.data.atts.multiple,\n                isSelected = target.hasClass('selected'),\n                numSelected = t.findAll('.selected.selectable-option').length,\n                min = t.data.atts.min || Number.MIN_SAFE_INTEGER,\n                max = t.data.atts.max || Number.MAX_SAFE_INTEGER;\n\n            if (isMultiple) {\n                if (min < numSelected && isSelected || numSelected < max && !isSelected) {\n                    target.toggleClass('selected');\n                }\n            } else {\n                target.toggleClass('selected');\n                target.siblings().removeClass('selected');\n            }\n        }\n\n        return clickSelectableOption;\n    }()\n});","ast":null,"map":{"version":3,"sources":["/packages/muqube:autoform-selectable/autoform-selectable.js"],"names":[],"mappings":";;;;;;;;;AAAO,IAAM,sBAAO,4BAAb;;AAEP,SAAS,YAAT,CAAsB,YAAtB,EAAoC;AAChC,cAAU,cADsB;AAEhC;AAAU,4BAAW;AACjB,gBAAM,OAAO,KAAK,IAAL,EAAb;AACA,gBAAI,YAAY,KAAK,IAAL,CAAU,6BAAV,CAAhB;;AAEA,gBAAI,KAAK,QAAT,EAAmB;AAAA;AACf,wBAAI,SAAS,EAAb;AACA,8BAAU,IAAV,CAAe,UAAC,KAAD,EAAQ,IAAR,EAAiB;AAC5B,+BAAO,IAAP,CAAY,EAAE,IAAF,EAAQ,IAAR,CAAa,OAAb,CAAZ;AACH,qBAFD;AAGA;AAAA,2BAAO;AAAP;AALe;;AAAA;AAMlB,aAND,MAMO;AACH,uBAAO,UAAU,IAAV,CAAe,OAAf,CAAP;AACH;AACJ;;AAbD;AAAA;AAFgC,CAApC;;AAkBA,SAAS,YAAT,CAAsB,OAAtB,CAA8B;AAC1B;AAAM,wBAAY;AACd,gBAAI,OAAO,SAAS,WAAT,EAAX;AACA,gBAAI,OAAO,KAAK,IAAhB;AACA,iBAAK,eAAL,IAAwB,KAAK,IAAL,CAAU,UAAV,CAAxB;AACA,iBAAK,iBAAL,IAA0B,KAAK,IAAL,CAAU,iBAAV,CAA1B;;AAEA,mBAAO,IAAP;AACH;;AAPD;AAAA,OAD0B;AAS1B,oBAT0B;AAAA,kCASR,MATQ,EASA;AACtB,gBAAM,QAAQ,SAAS,WAAT,GAAuB,KAArC;AACA,gBAAI,aAAa,KAAjB;;AAEA,gBAAI,MAAM,OAAN,CAAc,KAAd,CAAJ,EAA0B;AACtB,6BAAa,MAAM,OAAN,CAAc,MAAd,KAAyB,CAAC,CAAvC;AACH,aAFD,MAEO;AACH,6BAAa,WAAW,KAAxB;AACH;;AAED,mBAAQ,UAAD,GAAc,UAAd,GAA2B,EAAlC;AACH;;AApByB;AAAA;AAqB1B,WArB0B;AAAA,2BAqBhB;AACN,gBAAI,OAAO,SAAS,WAAT,EAAX;AACA,mBAAO,KAAK,aAAZ;AACH;;AAxByB;AAAA;AAAA,CAA9B;;AA2BA,SAAS,YAAT,CAAsB,MAAtB,CAA6B;AACzB,8BADyB;AAAA,uCACE,CADF,EACK,CADL,EACQ;AAC7B,gBAAM,SAAS,EAAE,EAAE,MAAJ,CAAf;AAAA,gBACI,aAAa,KAAK,EAAE,IAAP,IAAe,EAAE,IAAF,CAAO,IAAtB,IAA8B,EAAE,IAAF,CAAO,IAAP,CAAY,QAD3D;AAAA,gBAEI,aAAa,OAAO,QAAP,CAAgB,UAAhB,CAFjB;AAAA,gBAGI,cAAc,EAAE,OAAF,CAAU,6BAAV,EAAyC,MAH3D;AAAA,gBAII,MAAM,EAAE,IAAF,CAAO,IAAP,CAAY,GAAZ,IAAmB,OAAO,gBAJpC;AAAA,gBAKI,MAAM,EAAE,IAAF,CAAO,IAAP,CAAY,GAAZ,IAAmB,OAAO,gBALpC;;AAOA,gBAAI,UAAJ,EAAe;AACX,oBAAO,MAAM,WAAP,IAAuB,UAAxB,IAAyC,cAAc,GAAf,IAAuB,CAAC,UAArE,EAAmF;AAC/E,2BAAO,WAAP,CAAmB,UAAnB;AACH;AACJ,aAJD,MAIO;AACH,uBAAO,WAAP,CAAmB,UAAnB;AACA,uBAAO,QAAP,GAAkB,WAAlB,CAA8B,UAA9B;AACH;AACJ;;AAjBwB;AAAA;AAAA,CAA7B","file":"/packages/muqube:autoform-selectable/autoform-selectable.js.map","sourcesContent":["export const name = 'muqube:autoform-selectable';\n\nAutoForm.addInputType(\"selectable\", {\n    template: \"afSelectable\",\n    valueOut: function() {\n        const data = this.data();\n        let selection = this.find('.selected.selectable-option');\n\n        if (data.multiple) {\n            let values = [];\n            selection.each((index, elem) => {\n                values.push($(elem).data('value'));\n            });\n            return values;\n        } else {\n            return selection.data('value');\n        }\n    }\n});\n\nTemplate.afSelectable.helpers({\n    atts: function () {\n        var data = Template.currentData();\n        var atts = data.atts;\n        atts[\"data-multiple\"] = data.atts[\"multiple\"];\n        atts[\"data-schema-key\"] = data.atts[\"data-schema-key\"];\n\n        return atts;\n    },\n    isOptionSelected (option) {\n        const value = Template.currentData().value;\n        let isSelected = false;\n\n        if (Array.isArray(value)) {\n            isSelected = value.indexOf(option) != -1;\n        } else {\n            isSelected = option === value;\n        }\n\n        return (isSelected)? \"selected\" : \"\" ;\n    },\n    options() {\n        var data = Template.currentData();\n        return data.selectOptions;\n    }\n});\n\nTemplate.afSelectable.events({\n    'click .selectable-option'(e, t) {\n        const target = $(e.target),\n            isMultiple = t && t.data && t.data.atts && t.data.atts.multiple,\n            isSelected = target.hasClass('selected'),\n            numSelected = t.findAll('.selected.selectable-option').length,\n            min = t.data.atts.min || Number.MIN_SAFE_INTEGER,\n            max = t.data.atts.max || Number.MAX_SAFE_INTEGER;\n        \n        if (isMultiple){ \n            if ( ((min < numSelected) && isSelected) || ((numSelected < max) && !isSelected) ) {\n                target.toggleClass('selected');\n            }\n        } else {\n            target.toggleClass('selected');\n            target.siblings().removeClass('selected');\n        }\n    }\n});"]},"hash":"35129577e75b4714cc53bef152eebdfb519f28b4"}
