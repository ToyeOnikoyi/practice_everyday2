{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/app/confirm.js","filenameRelative":"/client/app/confirm.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/app/confirm.js.map","sourceFileName":"/client/app/confirm.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"confirm"},"ignored":false,"code":"Template.confirm.onCreated(function () {\n\n  Meteor.subscribe('myStreaks');\n  var countdown = new ReactiveCountdown(24, {\n    // Value substracted every tick from the current countdown value\n    steps: 1,\n\n    // Specify the countdown's interval in milliseconds\n    interval: 3600,\n\n    // Callback: Tick, called on every interval\n    tick: function () {\n      function tick() {}\n\n      return tick;\n    }(),\n\n    // Callback: Complete, called when the countdown has reached 0\n    completed: function () {\n      function completed() {}\n\n      return completed;\n    }()\n\n  });\n  countdown.start(function () {\n\n    // do something when this is completed\n\n  });\n});\n\nTemplate.confirm.helpers({\n  getCountdown: function () {\n    function getCountdown() {\n\n      return countdown.get();\n    }\n\n    return getCountdown;\n  }()\n});\n\nTemplate.confirm.events({\n  'click .confirm': function () {\n    function clickConfirm(event) {\n      event.preventDefault();\n      var noStreaks = Streaks.find().count();\n      if (noStreaks == 0) {\n        Meteor.call('addStreaks', true);\n      }\n      /*countdown.start(function(){\r\n      \r\n      //Meteor.call('updateToZero');\r\n      console.log('hello');\r\n      });*/\n      //if(countdown.start()){\n      Bert.alert('You cant do that twice in one day', 'success', 'growl-top-right');\n      //}\n\n      if (Streaks.checkStreakToday = false) {\n        Meteor.call('addStreaks', true);\n      }\n\n      console.log('streaks increassed');\n      Router.go('/success');\n    }\n\n    return clickConfirm;\n  }(),\n\n  'click .confirmAgain': function () {\n    function clickConfirmAgain(event) {\n      event.preventDefault();\n      var noStreaks = Streaks.find().count();\n\n      Meteor.call('addStreaks');\n      console.log('streaks increassed');\n      Router.go('/');\n    }\n\n    return clickConfirmAgain;\n  }()\n\n});","ast":null,"map":{"version":3,"sources":["/client/app/confirm.js"],"names":[],"mappings":"AAAA,SAAS,OAAT,CAAiB,SAAjB,CAA4B,YAAM;;AAElC,SAAO,SAAP,CAAiB,WAAjB;AACA,MAAI,YAAY,IAAI,iBAAJ,CAAsB,EAAtB,EAA0B;;AAEzC,WAAO,CAFkC;;;AAKzC,cAAU,IAL+B;;;AAQzC;AAAM,sBAAW,CAAE;;AAAnB;AAAA,OARyC;;;AAWzC;AAAW,2BAAW,CAAE;;AAAxB;AAAA;;AAXyC,GAA1B,CAAhB;AAeA,YAAU,KAAV,CAAgB,YAAW;;;;AAI1B,GAJD;AAMC,CAxBD;;AA2BA,SAAS,OAAT,CAAiB,OAAjB,CAAyB;AAEzB,cAFyB;AAAA,4BAET;;AAEd,aAAO,UAAU,GAAV,EAAP;AACD;;AALwB;AAAA;AAAA,CAAzB;;AASA,SAAS,OAAT,CAAiB,MAAjB,CAAwB;AACxB;AAAkB,0BAAS,KAAT,EAAe;AAC/B,YAAM,cAAN;AACF,UAAI,YAAY,QAAQ,IAAR,GAAe,KAAf,EAAhB;AACA,UAAG,aAAa,CAAhB,EAAkB;AACd,eAAO,IAAP,CAAY,YAAZ,EAAyB,IAAzB;AAEH;;;;;;;AAOK,WAAK,KAAL,CAAW,mCAAX,EAA+C,SAA/C,EAAyD,iBAAzD;;;AAGN,UAAG,QAAQ,gBAAR,GAA2B,KAA9B,EAAoC;AAClC,eAAO,IAAP,CAAY,YAAZ,EAAyB,IAAzB;AACD;;AAEC,cAAQ,GAAR,CAAY,oBAAZ;AACA,aAAO,EAAP,CAAU,UAAV;AACD;;AAtBD;AAAA,KADwB;;AAyBxB;AAAuB,+BAAS,KAAT,EAAe;AACpC,YAAM,cAAN;AACF,UAAI,YAAY,QAAQ,IAAR,GAAe,KAAf,EAAhB;;AAEE,aAAO,IAAP,CAAY,YAAZ;AACA,cAAQ,GAAR,CAAY,oBAAZ;AACA,aAAO,EAAP,CAAU,GAAV;AACD;;AAPD;AAAA;;AAzBwB,CAAxB","file":"/client/app/confirm.js.map","sourcesContent":["Template.confirm.onCreated( () => {\r\n\r\nMeteor.subscribe('myStreaks');\r\nvar countdown = new ReactiveCountdown(24, {\r\n  // Value substracted every tick from the current countdown value\r\n steps: 1,\r\n\r\n // Specify the countdown's interval in milliseconds\r\n interval: 3600,\r\n\r\n // Callback: Tick, called on every interval\r\n tick: function() {},\r\n\r\n // Callback: Complete, called when the countdown has reached 0\r\n completed: function() {},\r\n\r\n\r\n})\r\ncountdown.start(function() {\r\n\r\n    // do something when this is completed\r\n\r\n});\r\n\r\n});\r\n\r\n\r\nTemplate.confirm.helpers({\r\n\r\ngetCountdown () {\r\n\r\n  return countdown.get();\r\n}\r\n\r\n});\r\n\r\nTemplate.confirm.events({\r\n'click .confirm': function(event){\r\n  event.preventDefault();\r\nvar noStreaks = Streaks.find().count();\r\nif(noStreaks == 0){\r\n    Meteor.call('addStreaks',true);\r\n\r\n}\r\n/*countdown.start(function(){\r\n\r\n//Meteor.call('updateToZero');\r\nconsole.log('hello');\r\n});*/\r\n//if(countdown.start()){\r\n      Bert.alert('You cant do that twice in one day','success','growl-top-right');\r\n//}\r\n\r\nif(Streaks.checkStreakToday = false){\r\n  Meteor.call('addStreaks',true);\r\n}\r\n\r\n  console.log('streaks increassed');\r\n  Router.go('/success');\r\n},\r\n\r\n'click .confirmAgain': function(event){\r\n  event.preventDefault();\r\nvar noStreaks = Streaks.find().count();\r\n\r\n  Meteor.call('addStreaks');\r\n  console.log('streaks increassed');\r\n  Router.go('/');\r\n},\r\n\r\n\r\n});\r\n"]},"hash":"f93321561fa97896b7d9d571b601fbd193b2e7cf"}
